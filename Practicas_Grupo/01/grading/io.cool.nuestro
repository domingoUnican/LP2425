#name "io.cool"
 TYPEID The
 TYPEID IO
 CLASS
 IS
 PREDEFINED
 AND
 HAS
 METHODS
 OUT_STRING
 S
 TYPEID String
 TYPEID SELF_TYPE
 OUT_INT
 I
 TYPEID Int
 TYPEID SELF_TYPE
 IN_STRING
 TYPEID String
 IN_INT
 TYPEID Int
 TYPEID The
 OUT
 OPERATIONS
 PRINT
 THEIR
 ARGUMENT
 TO
 THE
 TERMINAL
 TYPEID The
 IN_STRING
 METHOD
 READS
 AN
 ENTIRE
 LINE
 FROM
 THE
 TERMINAL
 AND
 RETURNS
 A
 STRING
 NOT
 CONTAINING
 THE
 NEW
 LINE
 TYPEID The
 IN_INT
 METHOD
 ALSO
 READS
 AN
 ENTIRE
 LINE
 FROM
 THE
 TERMINAL
 AND
 RETURNS
 THE
 INTEGER
 CORRESPONDING
 TO
 THE
 FIRST
 NON
 BLANK
 WORD
 ON
 THE
 LINE
 TYPEID If
 THAT
 WORD
 IS
 NOT
 AN
 INTEGER
 IT
 RETURNS
 TYPEID Because
 OUR
 LANGUAGE
 IS
 OBJECT
 ORIENTED
 WE
 NEED
 AN
 OBJECT
 OF
 TYPE
 TYPEID IO
 IN
 ORDER
 TO
 CALL
 ANY
 OF
 THESE
 METHODS
 TYPEID There
 ARE
 BASICALLY
 TWO
 WAYS
 OF
 GETTING
 ACCESS
 TO
 TYPEID IO
 IN
 A
 CLASS
 TYPEID C
 TYPEID Define
 TYPEID C
 TO
 TYPEID Inherit
 FROM
 TYPEID IO
 TYPEID This
 WAY
 THE
 TYPEID IO
 METHODS
 BECOME
 METHODS
 OF
 TYPEID C
 AND
 THEY
 CAN
 BE
 CALLED
 USING
 THE
 ABBREVIATED
 DISPATCH
 I
 E
 CLASS
 TYPEID C
 INHERITS
 TYPEID IO
 IS
 OUT_STRING
 TYPEID Hello
 WORLD
 N
 END
 TYPEID If
 YOUR
 CLASS
 TYPEID C
 DOES
 NOT
 DIRECTLY
 OR
 INDIRECTLY
 INHERIT
 FROM
 TYPEID IO
 THE
 BEST
 WAY
 TO
 ACCESS
 TYPEID IO
 IS
 THROUGH
 AN
 INITIALIZED
 ATTRIBUTE
 OF
 TYPE
 TYPEID IO
 CLASS
 TYPEID C
 INHERITS
 TYPEID Foo
 IS
 IO
 TYPEID IO
 NEW
 TYPEID IO
 IO
 OUT_STRING
 TYPEID Hello
 WORLD
 N
 END
 TYPEID Approach
 IS
 MOST
 OFTEN
 USED
 IN
 PARTICULAR
 WHEN
 YOU
 NEED
 TYPEID IO
 FUNCTIONS
 IN
 THE
 TYPEID Main
 CLASS
 CLASS
 TYPEID A
 TYPEID Let
 S
 ASSUME
 THAT
 WE
 DON
 T
 WANT
 TYPEID A
 TO
 NOT
 INHERIT
 FROM
 TYPEID IO
 IO
 TYPEID IO
 NEW
 TYPEID IO
 OUT_A
 TYPEID Object
 IO
 OUT_STRING
 TYPEID A
 TYPEID Hello
 WORLD
 N
 CLASS
 TYPEID B
 INHERITS
 TYPEID A
 TYPEID B
 DOES
 NOT
 HAVE
 TO
 AN
 EXTRA
 ATTRIBUTE
 SINCE
 IT
 INHERITS
 IO
 FROM
 TYPEID A
 OUT_B
 TYPEID Object
 IO
 OUT_STRING
 TYPEID B
 TYPEID Hello
 WORLD
 N
 CLASS
 TYPEID C
 INHERITS
 TYPEID IO
 TYPEID Now
 THE
 TYPEID IO
 METHODS
 ARE
 PART
 OF
 TYPEID C
 OUT_C
 TYPEID Object
 OUT_STRING
 TYPEID C
 TYPEID Hello
 WORLD
 N
 TYPEID Note
 THAT
 OUT_STRING
 IS
 JUST
 A
 SHORTHAND
 FOR
 SELF
 OUT_STRING
 CLASS
 TYPEID D
 INHERITS
 TYPEID C
 TYPEID Inherits
 TYPEID IO
 METHODS
 FROM
 TYPEID C
 OUT_D
 TYPEID Object
 OUT_STRING
 TYPEID D
 TYPEID Hello
 WORLD
 N
 CLASS
 TYPEID Main
 INHERITS
 TYPEID IO
 TYPEID Same
 CASE
 AS
 CLASS
 TYPEID C
 MAIN
 TYPEID Object
 NEW
 TYPEID A
 OUT_A
 NEW
 TYPEID B
 OUT_B
 NEW
 TYPEID C
 OUT_C
 NEW
 TYPEID D
 OUT_D
 OUT_STRING
 TYPEID Done
 N