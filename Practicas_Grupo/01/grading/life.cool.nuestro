#name "life.cool"
 TYPEID The
 TYPEID Game
 OF
 TYPEID Life
 TYPEID Tendo
 TYPEID Kayiira
 TYPEID Summer
 INT_CONST 95
 TYPEID With
 OBJECTID code
 OBJECTID taken
 OBJECTID from
 OBJECTID private
 OBJECTID cool
 CLASS
 OBJECTID examples
 OBJECTID cells
 OBJECTID cl
 TYPEID This
 OBJECTID introduction
 OBJECTID was
 OBJECTID taken
 OBJECTID off
 OBJECTID the
 OBJECTID internet
 TYPEID It
 OBJECTID gives
 OBJECTID a
 OBJECTID brief
 OBJECTID description
 OF
 OBJECTID the
 TYPEID Game
 TYPEID Of
 TYPEID Life
 TYPEID It
 OBJECTID also
 OBJECTID gives
 OBJECTID the
 OBJECTID rules
 OBJECTID by
 OBJECTID which
 OBJECTID this
 OBJECTID particular
 OBJECTID game
 OBJECTID follows
 TYPEID Introduction
 TYPEID John
 TYPEID Conway
 OBJECTID s
 TYPEID Game
 OF
 TYPEID Life
 OBJECTID is
 OBJECTID a
 OBJECTID mathematical
 OBJECTID amusement
 OBJECTID but
 OBJECTID it
 OBJECTID is
 OBJECTID also
 OBJECTID much
 OBJECTID more
 OBJECTID an
 OBJECTID insight
 OBJECTID into
 OBJECTID how
 OBJECTID a
 OBJECTID system
 OF
 OBJECTID simple
 OBJECTID cellualar
 OBJECTID automata
 OBJECTID can
 OBJECTID create
 OBJECTID complex
 OBJECTID odd
 OBJECTID and
 OBJECTID often
 OBJECTID aesthetically
 OBJECTID pleasing
 OBJECTID patterns
 TYPEID It
 OBJECTID is
 OBJECTID played
 OBJECTID on
 OBJECTID a
 OBJECTID cartesian
 OBJECTID grid
 OF
 OBJECTID cells
 OBJECTID which
 OBJECTID are
 OBJECTID either
 OBJECTID on
 OBJECTID or
 OBJECTID off
 TYPEID The
 OBJECTID game
 OBJECTID gets
 OBJECTID it
 OBJECTID s
 OBJECTID name
 OBJECTID from
 OBJECTID the
 OBJECTID similarity
 OBJECTID between
 OBJECTID the
 OBJECTID behaviour
 OF
 OBJECTID these
 OBJECTID cells
 OBJECTID and
 OBJECTID the
 OBJECTID behaviour
 OF
 OBJECTID living
 OBJECTID organisms
 TYPEID The
 TYPEID Rules
 TYPEID The
 OBJECTID playfield
 OBJECTID is
 OBJECTID a
 OBJECTID cartesian
 OBJECTID grid
 OF
 OBJECTID arbitrary
 OBJECTID size
 TYPEID Each
 OBJECTID cell
 IN
 OBJECTID this
 OBJECTID grid
 OBJECTID can
 OBJECTID be
 IN
 OBJECTID an
 OBJECTID on
 OBJECTID state
 OBJECTID or
 OBJECTID an
 OBJECTID off
 OBJECTID state
 TYPEID On
 OBJECTID each
 OBJECTID turn
 OBJECTID called
 OBJECTID a
 OBJECTID generation
 OBJECTID the
 OBJECTID state
 OF
 OBJECTID each
 OBJECTID cell
 OBJECTID changes
 OBJECTID simultaneously
 OBJECTID depending
 OBJECTID on
 OBJECTID it
 OBJECTID s
 OBJECTID state
 OBJECTID and
 OBJECTID the
 OBJECTID state
 OF
 OBJECTID all
 OBJECTID cells
 OBJECTID adjacent
 OBJECTID to
 OBJECTID it
 TYPEID For
 OBJECTID on
 OBJECTID cells
 TYPEID If
 OBJECTID the
 OBJECTID cell
 OBJECTID has
 INT_CONST 0
 OBJECTID or
 INT_CONST 1
 OBJECTID neighbours
 OBJECTID which
 OBJECTID are
 OBJECTID on
 OBJECTID the
 OBJECTID cell
 OBJECTID turns
 OBJECTID off
 OBJECTID dies
 OF
 OBJECTID loneliness
 TYPEID If
 OBJECTID the
 OBJECTID cell
 OBJECTID has
 INT_CONST 2
 OBJECTID or
 INT_CONST 3
 OBJECTID neighbours
 OBJECTID which
 OBJECTID are
 OBJECTID on
 OBJECTID the
 OBJECTID cell
 OBJECTID stays
 OBJECTID on
 OBJECTID nothing
 OBJECTID happens
 OBJECTID to
 OBJECTID that
 OBJECTID cell
 TYPEID If
 OBJECTID the
 OBJECTID cell
 OBJECTID has
 INT_CONST 4
 INT_CONST 5
 INT_CONST 6
 INT_CONST 7
 INT_CONST 8
 OBJECTID or
 INT_CONST 9
 OBJECTID neighbours
 OBJECTID which
 OBJECTID are
 OBJECTID on
 OBJECTID the
 OBJECTID cell
 OBJECTID turns
 OBJECTID off
 OBJECTID dies
 OF
 OBJECTID overcrowding
 TYPEID For
 OBJECTID off
 OBJECTID cells
 TYPEID If
 OBJECTID the
 OBJECTID cell
 OBJECTID has
 INT_CONST 0
 INT_CONST 1
 INT_CONST 2
 INT_CONST 4
 INT_CONST 5
 INT_CONST 6
 INT_CONST 7
 INT_CONST 8
 OBJECTID or
 INT_CONST 9
 OBJECTID neighbours
 OBJECTID which
 OBJECTID are
 OBJECTID on
 OBJECTID the
 OBJECTID cell
 OBJECTID stays
 OBJECTID off
 OBJECTID nothing
 OBJECTID happens
 OBJECTID to
 OBJECTID that
 OBJECTID cell
 TYPEID If
 OBJECTID the
 OBJECTID cell
 OBJECTID has
 INT_CONST 3
 OBJECTID neighbours
 OBJECTID which
 OBJECTID are
 OBJECTID on
 OBJECTID the
 OBJECTID cell
 OBJECTID turns
 OBJECTID on
 INT_CONST 3
 OBJECTID neighbouring
 OBJECTID alive
 OBJECTID cells
 OBJECTID give
 OBJECTID birth
 OBJECTID to
 OBJECTID a
 OBJECTID fourth
 TYPEID Repeat
 OBJECTID for
 OBJECTID as
 OBJECTID many
 OBJECTID generations
 OBJECTID as
 OBJECTID desired
 CLASS
 TYPEID Board
 INHERITS
 TYPEID IO
 OBJECTID rows
 TYPEID Int
 OBJECTID columns
 TYPEID Int
 OBJECTID board_size
 TYPEID Int
 OBJECTID size_of_board
 OBJECTID initial
 TYPEID String
 TYPEID Int
 OBJECTID initial
 OBJECTID length
 OBJECTID board_init
 OBJECTID start
 TYPEID String
 TYPEID SELF_TYPE
 LET
 OBJECTID size
 TYPEID Int
 ASSIGN <-
 OBJECTID size_of_board
 OBJECTID start
 IN
 IF
 OBJECTID size
 INT_CONST 15
 THEN
 OBJECTID rows
 ASSIGN <-
 INT_CONST 3
 OBJECTID columns
 ASSIGN <-
 INT_CONST 5
 OBJECTID board_size
 ASSIGN <-
 OBJECTID size
 ELSE
 IF
 OBJECTID size
 INT_CONST 16
 THEN
 OBJECTID rows
 ASSIGN <-
 INT_CONST 4
 OBJECTID columns
 ASSIGN <-
 INT_CONST 4
 OBJECTID board_size
 ASSIGN <-
 OBJECTID size
 ELSE
 IF
 OBJECTID size
 INT_CONST 20
 THEN
 OBJECTID rows
 ASSIGN <-
 INT_CONST 4
 OBJECTID columns
 ASSIGN <-
 INT_CONST 5
 OBJECTID board_size
 ASSIGN <-
 OBJECTID size
 ELSE
 IF
 OBJECTID size
 INT_CONST 21
 THEN
 OBJECTID rows
 ASSIGN <-
 INT_CONST 3
 OBJECTID columns
 ASSIGN <-
 INT_CONST 7
 OBJECTID board_size
 ASSIGN <-
 OBJECTID size
 ELSE
 IF
 OBJECTID size
 INT_CONST 25
 THEN
 OBJECTID rows
 ASSIGN <-
 INT_CONST 5
 OBJECTID columns
 ASSIGN <-
 INT_CONST 5
 OBJECTID board_size
 ASSIGN <-
 OBJECTID size
 ELSE
 IF
 OBJECTID size
 INT_CONST 28
 THEN
 OBJECTID rows
 ASSIGN <-
 INT_CONST 7
 OBJECTID columns
 ASSIGN <-
 INT_CONST 4
 OBJECTID board_size
 ASSIGN <-
 OBJECTID size
 ELSE
 TYPEID If
 OBJECTID none
 OF
 OBJECTID the
 OBJECTID above
 OBJECTID fit
 THEN
 OBJECTID just
 OBJECTID give
 OBJECTID the
 OBJECTID configuration
 OF
 OBJECTID the
 OBJECTID most
 OBJECTID common
 OBJECTID board
 OBJECTID rows
 ASSIGN <-
 INT_CONST 5
 OBJECTID columns
 ASSIGN <-
 INT_CONST 5
 OBJECTID board_size
 ASSIGN <-
 OBJECTID size
 FI
 FI
 FI
 FI
 FI
 FI
 OBJECTID self
 CLASS
 TYPEID CellularAutomaton
 INHERITS
 TYPEID Board
 OBJECTID population_map
 TYPEID String
 OBJECTID init
 OBJECTID map
 TYPEID String
 TYPEID SELF_TYPE
 OBJECTID population_map
 ASSIGN <-
 OBJECTID map
 OBJECTID board_init
 OBJECTID map
 OBJECTID self
 OBJECTID print
 TYPEID SELF_TYPE
 LET
 OBJECTID i
 TYPEID Int
 ASSIGN <-
 INT_CONST 0
 IN
 LET
 OBJECTID num
 TYPEID Int
 ASSIGN <-
 OBJECTID board_size
 IN
 OBJECTID out_string
 STR_CONST ""\n""
 WHILE
 OBJECTID i
 OBJECTID num
 LOOP
 OBJECTID out_string
 OBJECTID population_map
 OBJECTID substr
 OBJECTID i
 OBJECTID columns
 OBJECTID out_string
 STR_CONST ""\n""
 OBJECTID i
 ASSIGN <-
 OBJECTID i
 OBJECTID columns
 POOL
 OBJECTID out_string
 STR_CONST ""\n""
 OBJECTID self
 OBJECTID num_cells
 TYPEID Int
 OBJECTID population_map
 OBJECTID length
 OBJECTID cell
 OBJECTID position
 TYPEID Int
 TYPEID String
 IF
 OBJECTID board_size
 INT_CONST 1
 OBJECTID position
 THEN
 STR_CONST "" ""
 ELSE
 OBJECTID population_map
 OBJECTID substr
 OBJECTID position
 INT_CONST 1
 FI
 OBJECTID north
 OBJECTID position
 TYPEID Int
 TYPEID String
 IF
 OBJECTID position
 OBJECTID columns
 INT_CONST 0
 THEN
 STR_CONST "" ""
 ELSE
 OBJECTID cell
 OBJECTID position
 OBJECTID columns
 FI
 OBJECTID south
 OBJECTID position
 TYPEID Int
 TYPEID String
 IF
 OBJECTID board_size
 OBJECTID position
 OBJECTID columns
 THEN
 STR_CONST "" ""
 ELSE
 OBJECTID cell
 OBJECTID position
 OBJECTID columns
 FI
 OBJECTID east
 OBJECTID position
 TYPEID Int
 TYPEID String
 IF
 OBJECTID position
 INT_CONST 1
 OBJECTID columns
 OBJECTID columns
 OBJECTID position
 INT_CONST 1
 THEN
 STR_CONST "" ""
 ELSE
 OBJECTID cell
 OBJECTID position
 INT_CONST 1
 FI
 OBJECTID west
 OBJECTID position
 TYPEID Int
 TYPEID String
 IF
 OBJECTID position
 INT_CONST 0
 THEN
 STR_CONST "" ""
 ELSE
 IF
 OBJECTID position
 OBJECTID columns
 OBJECTID columns
 OBJECTID position
 THEN
 STR_CONST "" ""
 ELSE
 OBJECTID cell
 OBJECTID position
 INT_CONST 1
 FI
 FI
 OBJECTID northwest
 OBJECTID position
 TYPEID Int
 TYPEID String
 IF
 OBJECTID position
 OBJECTID columns
 INT_CONST 0
 THEN
 STR_CONST "" ""
 ELSE
 IF
 OBJECTID position
 OBJECTID columns
 OBJECTID columns
 OBJECTID position
 THEN
 STR_CONST "" ""
 ELSE
 OBJECTID north
 OBJECTID position
 INT_CONST 1
 FI
 FI
 OBJECTID northeast
 OBJECTID position
 TYPEID Int
 TYPEID String
 IF
 OBJECTID position
 OBJECTID columns
 INT_CONST 0
 THEN
 STR_CONST "" ""
 ELSE
 IF
 OBJECTID position
 INT_CONST 1
 OBJECTID columns
 OBJECTID columns
 OBJECTID position
 INT_CONST 1
 THEN
 STR_CONST "" ""
 ELSE
 OBJECTID north
 OBJECTID position
 INT_CONST 1
 FI
 FI
 OBJECTID southeast
 OBJECTID position
 TYPEID Int
 TYPEID String
 IF
 OBJECTID board_size
 OBJECTID position
 OBJECTID columns
 THEN
 STR_CONST "" ""
 ELSE
 IF
 OBJECTID position
 INT_CONST 1
 OBJECTID columns
 OBJECTID columns
 OBJECTID position
 INT_CONST 1
 THEN
 STR_CONST "" ""
 ELSE
 OBJECTID south
 OBJECTID position
 INT_CONST 1
 FI
 FI
 OBJECTID southwest
 OBJECTID position
 TYPEID Int
 TYPEID String
 IF
 OBJECTID board_size
 OBJECTID position
 OBJECTID columns
 THEN
 STR_CONST "" ""
 ELSE
 IF
 OBJECTID position
 OBJECTID columns
 OBJECTID columns
 OBJECTID position
 THEN
 STR_CONST "" ""
 ELSE
 OBJECTID south
 OBJECTID position
 INT_CONST 1
 FI
 FI
 OBJECTID neighbors
 OBJECTID position
 TYPEID Int
 TYPEID Int
 IF
 OBJECTID north
 OBJECTID position
 STR_CONST ""X""
 THEN
 INT_CONST 1
 ELSE
 INT_CONST 0
 FI
 IF
 OBJECTID south
 OBJECTID position
 STR_CONST ""X""
 THEN
 INT_CONST 1
 ELSE
 INT_CONST 0
 FI
 IF
 OBJECTID east
 OBJECTID position
 STR_CONST ""X""
 THEN
 INT_CONST 1
 ELSE
 INT_CONST 0
 FI
 IF
 OBJECTID west
 OBJECTID position
 STR_CONST ""X""
 THEN
 INT_CONST 1
 ELSE
 INT_CONST 0
 FI
 IF
 OBJECTID northeast
 OBJECTID position
 STR_CONST ""X""
 THEN
 INT_CONST 1
 ELSE
 INT_CONST 0
 FI
 IF
 OBJECTID northwest
 OBJECTID position
 STR_CONST ""X""
 THEN
 INT_CONST 1
 ELSE
 INT_CONST 0
 FI
 IF
 OBJECTID southeast
 OBJECTID position
 STR_CONST ""X""
 THEN
 INT_CONST 1
 ELSE
 INT_CONST 0
 FI
 IF
 OBJECTID southwest
 OBJECTID position
 STR_CONST ""X""
 THEN
 INT_CONST 1
 ELSE
 INT_CONST 0
 FI
 TYPEID A
 OBJECTID cell
 OBJECTID will
 OBJECTID live
 IF
 INT_CONST 2
 OBJECTID or
 INT_CONST 3
 OF
 OBJECTID it
 OBJECTID s
 OBJECTID neighbors
 OBJECTID are
 OBJECTID alive
 TYPEID It
 OBJECTID dies
 OBJECTID otherwise
 TYPEID A
 OBJECTID cell
 OBJECTID is
 OBJECTID born
 IF
 OBJECTID only
 INT_CONST 3
 OF
 OBJECTID it
 OBJECTID s
 OBJECTID neighbors
 OBJECTID are
 OBJECTID alive
 OBJECTID cell_at_next_evolution
 OBJECTID position
 TYPEID Int
 TYPEID String
 IF
 OBJECTID neighbors
 OBJECTID position
 INT_CONST 3
 THEN
 STR_CONST ""X""
 ELSE
 IF
 OBJECTID neighbors
 OBJECTID position
 INT_CONST 2
 THEN
 IF
 OBJECTID cell
 OBJECTID position
 STR_CONST ""X""
 THEN
 STR_CONST ""X""
 ELSE
 STR_CONST ""\015nt        fi\015nt   else\015ntt""
 FI
 FI
 OBJECTID evolve
 TYPEID SELF_TYPE
 LET
 OBJECTID position
 TYPEID Int
 ASSIGN <-
 INT_CONST 0
 IN
 LET
 OBJECTID num
 TYPEID Int
 ASSIGN <-
 OBJECTID num_cells
 IN
 LET
 OBJECTID temp
 TYPEID String
 IN
 WHILE
 OBJECTID position
 OBJECTID num
 LOOP
 OBJECTID temp
 ASSIGN <-
 OBJECTID temp
 OBJECTID concat
 OBJECTID cell_at_next_evolution
 OBJECTID position
 OBJECTID position
 ASSIGN <-
 OBJECTID position
 INT_CONST 1
 POOL
 OBJECTID population_map
 ASSIGN <-
 OBJECTID temp
 OBJECTID self
 TYPEID This
 OBJECTID is
 OBJECTID where
 OBJECTID the
 OBJECTID background
 OBJECTID pattern
 OBJECTID is
 OBJECTID detremined
 OBJECTID by
 OBJECTID the
 OBJECTID user
 TYPEID More
 OBJECTID patterns
 OBJECTID can
 OBJECTID be
 OBJECTID added
 OBJECTID as
 OBJECTID long
 OBJECTID as
 OBJECTID whoever
 OBJECTID adds
 OBJECTID keeps
 OBJECTID the
 OBJECTID board
 OBJECTID either
 TYPEID 3x5
 TYPEID 4x5
 TYPEID 5x5
 TYPEID 3x7
 TYPEID 7x4
 TYPEID 4x4
 OBJECTID with
 OBJECTID the
 OBJECTID row
 OBJECTID first
 THEN
 OBJECTID column
 OBJECTID option
 TYPEID String
 LET
 OBJECTID num
 TYPEID Int
 IN
 OBJECTID out_string
 STR_CONST ""\nPlease chose a number:\n""
 OBJECTID out_string
 STR_CONST ""\t1: A cross\n""
 OBJECTID out_string
 STR_CONST ""\t2: A slash from the upper left to lower right\n""
 OBJECTID out_string
 STR_CONST ""\t3: A slash from the upper right to lower left\n""
 OBJECTID out_string
 STR_CONST ""\t4: An X\n""
 OBJECTID out_string
 STR_CONST ""\t5: A greater than sign \n""
 OBJECTID out_string
 STR_CONST ""\t6: A less than sign\n""
 OBJECTID out_string
 STR_CONST ""\t7: Two greater than signs\n""
 OBJECTID out_string
 STR_CONST ""\t8: Two less than signs\n""
 OBJECTID out_string
 OBJECTID t9
 TYPEID A
 TYPEID V
 OBJECTID n
 OBJECTID out_string
 OBJECTID t10
 TYPEID An
 OBJECTID inverse
 TYPEID V
 OBJECTID n
 OBJECTID out_string
 STR_CONST ""\t11: Numbers 9 and 10 combined\n""
 OBJECTID out_string
 STR_CONST ""\t12: A full grid\n""
 OBJECTID out_string
 OBJECTID t13
 TYPEID A
 TYPEID T
 OBJECTID n
 OBJECTID out_string
 OBJECTID t14
 TYPEID A
 OBJECTID plus
 OBJECTID n
 OBJECTID out_string
 OBJECTID t15
 TYPEID A
 TYPEID W
 OBJECTID n
 OBJECTID out_string
 OBJECTID t16
 TYPEID An
 TYPEID M
 OBJECTID n
 OBJECTID out_string
 OBJECTID t17
 TYPEID An
 TYPEID E
 OBJECTID n
 OBJECTID out_string
 OBJECTID t18
 TYPEID A
 INT_CONST 3
 OBJECTID n
 OBJECTID out_string
 OBJECTID t19
 TYPEID An
 TYPEID O
 OBJECTID n
 OBJECTID out_string
 OBJECTID t20
 TYPEID An
 INT_CONST 8
 OBJECTID n
 OBJECTID out_string
 OBJECTID t21
 TYPEID An
 TYPEID S
 OBJECTID n
 OBJECTID out_string
 TYPEID Your
 OBJECTID choice
 DARROW =>
 OBJECTID num
 ASSIGN <-
 OBJECTID in_int
 OBJECTID out_string
 STR_CONST ""\n""
 IF
 OBJECTID num
 INT_CONST 1
 THEN
 STR_CONST "" XX  XXXX XXXX  XX  ""
 ELSE
 IF
 OBJECTID num
 INT_CONST 2
 THEN
 STR_CONST ""    X   X   X   X   X    ""
 ELSE
 IF
 OBJECTID num
 INT_CONST 3
 THEN
 STR_CONST ""X     X     X     X     X""
 ELSE
 IF
 OBJECTID num
 INT_CONST 4
 THEN
 STR_CONST ""X   X X X   X   X X X   X""
 ELSE
 IF
 OBJECTID num
 INT_CONST 5
 THEN
 STR_CONST ""X     X     X   X   X    ""
 ELSE
 IF
 OBJECTID num
 INT_CONST 6
 THEN
 STR_CONST ""    X   X   X     X     X""
 ELSE
 IF
 OBJECTID num
 INT_CONST 7
 THEN
 STR_CONST ""X  X  X  XX  X      ""
 ELSE
 IF
 OBJECTID num
 INT_CONST 8
 THEN
 STR_CONST "" X  XX  X  X  X     ""
 ELSE
 IF
 OBJECTID num
 INT_CONST 9
 THEN
 STR_CONST ""X   X X X   X  ""
 ELSE
 IF
 OBJECTID num
 INT_CONST 10
 THEN
 STR_CONST ""  X   X X X   X""
 ELSE
 IF
 OBJECTID num
 INT_CONST 11
 THEN
 STR_CONST ""X X X X X X X X""
 ELSE
 IF
 OBJECTID num
 INT_CONST 12
 THEN
 STR_CONST ""XXXXXXXXXXXXXXXXXXXXXXXXX""
 ELSE
 IF
 OBJECTID num
 INT_CONST 13
 THEN
 STR_CONST ""XXXXX  X    X    X    X  ""
 ELSE
 IF
 OBJECTID num
 INT_CONST 14
 THEN
 STR_CONST ""  X    X  XXXXX  X    X  ""
 ELSE
 IF
 OBJECTID num
 INT_CONST 15
 THEN
 STR_CONST ""X     X X X X   X X  ""
 ELSE
 IF
 OBJECTID num
 INT_CONST 16
 THEN
 STR_CONST ""  X X   X X X X     X""
 ELSE
 IF
 OBJECTID num
 INT_CONST 17
 THEN
 STR_CONST ""XXXXX   X   XXXXX   X   XXXX""
 ELSE
 IF
 OBJECTID num
 INT_CONST 18
 THEN
 STR_CONST ""XXX    X   X  X    X   XXXX ""
 ELSE
 IF
 OBJECTID num
 INT_CONST 19
 THEN
 STR_CONST "" XX X  XX  X XX ""
 ELSE
 IF
 OBJECTID num
 INT_CONST 20
 THEN
 STR_CONST "" XX X  XX  X XX X  XX  X XX ""
 ELSE
 IF
 OBJECTID num
 INT_CONST 21
 THEN
 STR_CONST "" XXXX   X    XX    X   XXXX ""
 ELSE
 STR_CONST ""                         ""
 FI
 FI
 FI
 FI
 FI
 FI
 FI
 FI
 FI
 FI
 FI
 FI
 FI
 FI
 FI
 FI
 FI
 FI
 FI
 FI
 FI
 OBJECTID prompt
 TYPEID Bool
 LET
 OBJECTID ans
 TYPEID String
 IN
 OBJECTID out_string
 TYPEID Would
 OBJECTID you
 OBJECTID like
 OBJECTID to
 OBJECTID continue
 OBJECTID with
 OBJECTID the
 OBJECTID next
 OBJECTID generation
 OBJECTID n
 OBJECTID out_string
 TYPEID Please
 OBJECTID use
 OBJECTID lowercase
 OBJECTID y
 OBJECTID or
 OBJECTID n
 OBJECTID for
 OBJECTID your
 OBJECTID answer
 OBJECTID y
 OBJECTID ans
 ASSIGN <-
 OBJECTID in_string
 OBJECTID out_string
 STR_CONST ""\n""
 IF
 OBJECTID ans
 STR_CONST ""n""
 THEN
 FALSE
 ELSE
 TRUE
 FI
 OBJECTID prompt2
 TYPEID Bool
 LET
 OBJECTID ans
 TYPEID String
 IN
 OBJECTID out_string
 STR_CONST ""\n\n""
 OBJECTID out_string
 TYPEID Would
 OBJECTID you
 OBJECTID like
 OBJECTID to
 OBJECTID choose
 OBJECTID a
 OBJECTID background
 OBJECTID pattern
 OBJECTID n
 OBJECTID out_string
 TYPEID Please
 OBJECTID use
 OBJECTID lowercase
 OBJECTID y
 OBJECTID or
 OBJECTID n
 OBJECTID for
 OBJECTID your
 OBJECTID answer
 OBJECTID n
 OBJECTID ans
 ASSIGN <-
 OBJECTID in_string
 IF
 OBJECTID ans
 STR_CONST ""y""
 THEN
 TRUE
 ELSE
 FALSE
 FI
 CLASS
 TYPEID Main
 INHERITS
 TYPEID CellularAutomaton
 OBJECTID cells
 TYPEID CellularAutomaton
 OBJECTID main
 TYPEID SELF_TYPE
 LET
 OBJECTID continue
 TYPEID Bool
 IN
 LET
 OBJECTID choice
 TYPEID String
 IN
 OBJECTID out_string
 TYPEID Welcome
 OBJECTID to
 OBJECTID the
 TYPEID Game
 OF
 TYPEID Life
 OBJECTID n
 OBJECTID out_string
 TYPEID There
 OBJECTID are
 OBJECTID many
 OBJECTID initial
 OBJECTID states
 OBJECTID to
 OBJECTID choose
 OBJECTID from
 OBJECTID n
 WHILE
 OBJECTID prompt2
 LOOP
 OBJECTID continue
 ASSIGN <-
 TRUE
 OBJECTID choice
 ASSIGN <-
 OBJECTID option
 OBJECTID cells
 ASSIGN <-
 NEW
 TYPEID CellularAutomaton
 OBJECTID init
 OBJECTID choice
 OBJECTID cells
 OBJECTID print
 WHILE
 OBJECTID continue
 LOOP
 IF
 OBJECTID prompt
 THEN
 OBJECTID cells
 OBJECTID evolve
 OBJECTID cells
 OBJECTID print
 ELSE
 OBJECTID continue
 ASSIGN <-
 FALSE
 FI
 POOL
 POOL
 OBJECTID self