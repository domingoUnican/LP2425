#name "sort_list.cl.cool"
 TYPEID This
 FILE
 PRESENTS
 A
 FAIRLY
 LARGE
 EXAMPLE
 OF
 TYPEID Cool
 PROGRAMMING
 TYPEID The
 CLASS
 TYPEID List
 DEFINES
 THE
 NAMES
 OF
 STANDARD
 LIST
 OPERATIONS
 ALA
 TYPEID Scheme
 CAR
 CDR
 CONS
 ISNIL
 REV
 SORT
 RCONS
 ADD
 AN
 ELEMENT
 TO
 THE
 END
 OF
 THE
 LIST
 AND
 PRINT_LIST
 TYPEID In
 THE
 TYPEID List
 CLASS
 MOST
 OF
 THESE
 FUNCTIONS
 ARE
 JUST
 STUBS
 THAT
 ABORT
 IF
 EVER
 CALLED
 TYPEID The
 CLASSES
 TYPEID Nil
 AND
 TYPEID Cons
 INHERIT
 FROM
 TYPEID List
 AND
 DEFINE
 THE
 SAME
 OPERATIONS
 BUT
 NOW
 AS
 APPROPRIATE
 TO
 THE
 EMPTY
 LIST
 FOR
 THE
 TYPEID Nil
 CLASS
 AND
 FOR
 CONS
 CELLS
 FOR
 THE
 TYPEID Cons
 CLASS
 TYPEID The
 TYPEID Main
 CLASS
 PUTS
 ALL
 OF
 THIS
 CODE
 THROUGH
 THE
 FOLLOWING
 SILLY
 TEST
 EXERCISE
 PROMPT
 FOR
 A
 NUMBER
 TYPEID N
 GENERATE
 A
 LIST
 OF
 NUMBERS
 TYPEID N
 REVERSE
 THE
 LIST
 SORT
 THE
 LIST
 PRINT
 THE
 SORTED
 LIST
 TYPEID Because
 THE
 SORT
 USED
 IS
 A
 QUADRATIC
 SPACE
 INSERTION
 SORT
 SORTING
 MODERATELY
 LARGE
 LISTS
 WILL
 CAUSE
 SPIM
 TO
 RUN
 OUT
 OF
 MEMORY
 TYPEID Class
 TYPEID List
 INHERITS
 TYPEID IO
 TYPEID Since
 ABORT
 RETURNS
 TYPEID Object
 WE
 NEED
 SOMETHING
 OF
 TYPE
 TYPEID Bool
 AT
 THE
 END
 OF
 THE
 BLOCK
 TO
 SATISFY
 THE
 TYPECHECKER
 TYPEID This
 CODE
 IS
 UNREACHABLE
 SINCE
 ABORT
 HALTS
 THE
 PROGRAM
 ISNIL
 TYPEID Bool
 ABORT
 BOOL_CONST true
 CONS
 HD
 TYPEID Int
 TYPEID Cons
 LET
 NEW_CELL
 TYPEID Cons
 NEW
 TYPEID Cons
 IN
 NEW_CELL
 INIT
 HD
 SELF
 TYPEID Since
 ABORT
 STR_CONST "returns"
 TYPE
 TYPEID Object
 WE
 HAVE
 TO
 ADD
 AN
 EXPRESSION
 OF
 TYPE
 TYPEID Int
 HERE
 TO
 SATISFY
 THE
 TYPECHECKER
 TYPEID This
 CODE
 IS
 OF
 COURSE
 UNREACHABLE
 CAR
 TYPEID Int
 ABORT
 NEW
 TYPEID Int
 CDR
 TYPEID List
 ABORT
 NEW
 TYPEID List
 REV
 TYPEID List
 CDR
 SORT
 TYPEID List
 CDR
 INSERT
 I
 TYPEID Int
 TYPEID List
 CDR
 RCONS
 I
 TYPEID Int
 TYPEID List
 CDR
 PRINT_LIST
 TYPEID Object
 ABORT
 TYPEID Class
 TYPEID Cons
 INHERITS
 TYPEID List
 XCAR
 TYPEID Int
 TYPEID We
 KEEP
 THE
 CAR
 IN
 CDR
 IN
 ATTRIBUTES
 XCDR
 TYPEID List
 TYPEID Because
 METHODS
 AND
 FEATURES
 MUST
 HAVE
 DIFFERENT
 NAMES
 WE
 USE
 XCAR
 AND
 XCDR
 FOR
 THE
 ATTRIBUTES
 AND
 RESERVE
 CONS
 AND
 CAR
 FOR
 THE
 FEATURES
 ISNIL
 TYPEID Bool
 BOOL_CONST true
 INIT
 HD
 TYPEID Int
 TL
 TYPEID List
 TYPEID Cons
 XCAR
 HD
 XCDR
 TL
 SELF
 CAR
 TYPEID Int
 XCAR
 CDR
 TYPEID List
 XCDR
 REV
 TYPEID List
 XCDR
 REV
 RCONS
 XCAR
 SORT
 TYPEID List
 XCDR
 SORT
 INSERT
 XCAR
 INSERT
 I
 TYPEID Int
 TYPEID List
 IF
 I
 XCAR
 THEN
 NEW
 TYPEID Cons
 INIT
 I
 SELF
 ELSE
 NEW
 TYPEID Cons
 INIT
 XCAR
 XCDR
 INSERT
 I
 FI
 RCONS
 I
 TYPEID Int
 TYPEID List
 NEW
 TYPEID Cons
 INIT
 XCAR
 XCDR
 RCONS
 I
 PRINT_LIST
 TYPEID Object
 OUT_INT
 XCAR
 OUT_STRING
 N
 XCDR
 PRINT_LIST
 TYPEID Class
 TYPEID Nil
 INHERITS
 TYPEID List
 ISNIL
 TYPEID Bool
 BOOL_CONST true
 REV
 TYPEID List
 SELF
 SORT
 TYPEID List
 SELF
 INSERT
 I
 TYPEID Int
 TYPEID List
 RCONS
 I
 RCONS
 I
 TYPEID Int
 TYPEID List
 NEW
 TYPEID Cons
 INIT
 I
 SELF
 PRINT_LIST
 TYPEID Object
 BOOL_CONST true
 TYPEID Class
 TYPEID Main
 INHERITS
 TYPEID IO
 L
 TYPEID List
 IOTA
 MAPS
 ITS
 INTEGER
 ARGUMENT
 N
 INTO
 THE
 LIST
 N
 IOTA
 I
 TYPEID Int
 TYPEID List
 L
 NEW
 TYPEID Nil
 LET
 J
 TYPEID Int
 IN
 WHILE
 J
 I
 LOOP
 L
 NEW
 TYPEID Cons
 INIT
 J
 L
 J
 J
 POOL
 L
 MAIN
 TYPEID Object
 OUT_STRING
 TYPEID How
 MANY
 NUMBERS
 TO
 SORT
 IOTA
 IN_INT
 REV
 SORT
 PRINT_LIST