#name "arith.cool"
 CLASS
 TYPEID A
 '{' 
 OBJECTID var
 ':' 
 TYPEID Int
 '<' 
 '-' 
 INT_CONST 0
 ';' 
 OBJECTID value
 '(' 
 ')' 
 ':' 
 TYPEID Int
 '{' 
 OBJECTID var
 '}' 
 ';' 
 OBJECTID set_var
 '(' 
 OBJECTID num
 ':' 
 TYPEID Int
 ')' 
 ':' 
 TYPEID SELF_TYPE
 '{' 
 '{' 
 OBJECTID var
 '<' 
 '-' 
 OBJECTID num
 ';' 
 OBJECTID self
 ';' 
 '}' 
 '}' 
 ';' 
 OBJECTID method1
 '(' 
 OBJECTID num
 ':' 
 TYPEID Int
 ')' 
 ':' 
 TYPEID SELF_TYPE
 '{' 
 OBJECTID self
 '}' 
 ';' 
 OBJECTID method2
 '(' 
 OBJECTID num1
 ':' 
 TYPEID Int
 ',' 
 OBJECTID num2
 ':' 
 TYPEID Int
 ')' 
 ':' 
 TYPEID B
 '{' 
 '(' 
 LET
 OBJECTID x
 ':' 
 TYPEID Int
 IN
 '{' 
 OBJECTID x
 '<' 
 '-' 
 OBJECTID num1
 '+' 
 OBJECTID num2
 ';' 
 '(' 
 NEW
 TYPEID B
 ')' 
 '.' 
 OBJECTID set_var
 '(' 
 OBJECTID x
 ')' 
 ';' 
 '}' 
 ')' 
 '}' 
 ';' 
 OBJECTID method3
 '(' 
 OBJECTID num
 ':' 
 TYPEID Int
 ')' 
 ':' 
 TYPEID C
 '{' 
 '(' 
 LET
 OBJECTID x
 ':' 
 TYPEID Int
 IN
 '{' 
 OBJECTID x
 '<' 
 '-' 
 '~' 
 OBJECTID num
 ';' 
 '(' 
 NEW
 TYPEID C
 ')' 
 '.' 
 OBJECTID set_var
 '(' 
 OBJECTID x
 ')' 
 ';' 
 '}' 
 ')' 
 '}' 
 ';' 
 OBJECTID method4
 '(' 
 OBJECTID num1
 ':' 
 TYPEID Int
 ',' 
 OBJECTID num2
 ':' 
 TYPEID Int
 ')' 
 ':' 
 TYPEID D
 '{' 
 IF
 OBJECTID num2
 '<' 
 OBJECTID num1
 THEN
 '(' 
 LET
 OBJECTID x
 ':' 
 TYPEID Int
 IN
 '{' 
 OBJECTID x
 '<' 
 '-' 
 OBJECTID num1
 '-' 
 OBJECTID num2
 ';' 
 '(' 
 NEW
 TYPEID D
 ')' 
 '.' 
 OBJECTID set_var
 '(' 
 OBJECTID x
 ')' 
 ';' 
 '}' 
 ')' 
 ELSE
 '(' 
 LET
 OBJECTID x
 ':' 
 TYPEID Int
 IN
 '{' 
 OBJECTID x
 '<' 
 '-' 
 OBJECTID num2
 '-' 
 OBJECTID num1
 ';' 
 '(' 
 NEW
 TYPEID D
 ')' 
 '.' 
 OBJECTID set_var
 '(' 
 OBJECTID x
 ')' 
 ';' 
 '}' 
 ')' 
 FI
 '}' 
 ';' 
 OBJECTID method5
 '(' 
 OBJECTID num
 ':' 
 TYPEID Int
 ')' 
 ':' 
 TYPEID E
 '{' 
 '(' 
 LET
 OBJECTID x
 ':' 
 TYPEID Int
 '<' 
 '-' 
 INT_CONST 1
 IN
 '{' 
 '(' 
 LET
 OBJECTID y
 ':' 
 TYPEID Int
 '<' 
 '-' 
 INT_CONST 1
 IN
 WHILE
 OBJECTID y
 '<' 
 '=' 
 OBJECTID num
 LOOP
 '{' 
 OBJECTID x
 '<' 
 '-' 
 OBJECTID x
 '*' 
 OBJECTID y
 ';' 
 OBJECTID y
 '<' 
 '-' 
 OBJECTID y
 '+' 
 INT_CONST 1
 ';' 
 '}' 
 POOL
 ')' 
 ';' 
 '(' 
 NEW
 TYPEID E
 ')' 
 '.' 
 OBJECTID set_var
 '(' 
 OBJECTID x
 ')' 
 ';' 
 '}' 
 ')' 
 '}' 
 ';' 
 '}' 
 ';' 
 CLASS
 TYPEID B
 INHERITS
 TYPEID A
 '{' 
 OBJECTID method5
 '(' 
 OBJECTID num
 ':' 
 TYPEID Int
 ')' 
 ':' 
 TYPEID E
 '{' 
 '(' 
 LET
 OBJECTID x
 ':' 
 TYPEID Int
 IN
 '{' 
 OBJECTID x
 '<' 
 '-' 
 OBJECTID num
 '*' 
 OBJECTID num
 ';' 
 '(' 
 NEW
 TYPEID E
 ')' 
 '.' 
 OBJECTID set_var
 '(' 
 OBJECTID x
 ')' 
 ';' 
 '}' 
 ')' 
 '}' 
 ';' 
 '}' 
 ';' 
 CLASS
 TYPEID C
 INHERITS
 TYPEID B
 '{' 
 OBJECTID method6
 '(' 
 OBJECTID num
 ':' 
 TYPEID Int
 ')' 
 ':' 
 TYPEID A
 '{' 
 '(' 
 LET
 OBJECTID x
 ':' 
 TYPEID Int
 IN
 '{' 
 OBJECTID x
 '<' 
 '-' 
 '~' 
 OBJECTID num
 ';' 
 '(' 
 NEW
 TYPEID A
 ')' 
 '.' 
 OBJECTID set_var
 '(' 
 OBJECTID x
 ')' 
 ';' 
 '}' 
 ')' 
 '}' 
 ';' 
 OBJECTID method5
 '(' 
 OBJECTID num
 ':' 
 TYPEID Int
 ')' 
 ':' 
 TYPEID E
 '{' 
 '(' 
 LET
 OBJECTID x
 ':' 
 TYPEID Int
 IN
 '{' 
 OBJECTID x
 '<' 
 '-' 
 OBJECTID num
 '*' 
 OBJECTID num
 '*' 
 OBJECTID num
 ';' 
 '(' 
 NEW
 TYPEID E
 ')' 
 '.' 
 OBJECTID set_var
 '(' 
 OBJECTID x
 ')' 
 ';' 
 '}' 
 ')' 
 '}' 
 ';' 
 '}' 
 ';' 
 CLASS
 TYPEID D
 INHERITS
 TYPEID B
 '{' 
 OBJECTID method7
 '(' 
 OBJECTID num
 ':' 
 TYPEID Int
 ')' 
 ':' 
 TYPEID Bool
 '{' 
 '(' 
 LET
 OBJECTID x
 ':' 
 TYPEID Int
 '<' 
 '-' 
 OBJECTID num
 IN
 IF
 OBJECTID x
 '<' 
 INT_CONST 0
 THEN
 OBJECTID method7
 '(' 
 '~' 
 OBJECTID x
 ')' 
 ELSE
 IF
 INT_CONST 0
 '=' 
 OBJECTID x
 THEN
 BOOL_CONST true
 ELSE
 IF
 INT_CONST 1
 '=' 
 OBJECTID x
 THEN
 OBJECTID false
 ELSE
 IF
 INT_CONST 2
 '=' 
 OBJECTID x
 THEN
 OBJECTID false
 ELSE
 OBJECTID method7
 '(' 
 OBJECTID x
 '-' 
 INT_CONST 3
 ')' 
 FI
 FI
 FI
 FI
 ')' 
 '}' 
 ';' 
 '}' 
 ';' 
 CLASS
 TYPEID E
 INHERITS
 TYPEID D
 '{' 
 OBJECTID method6
 '(' 
 OBJECTID num
 ':' 
 TYPEID Int
 ')' 
 ':' 
 TYPEID A
 '{' 
 '(' 
 LET
 OBJECTID x
 ':' 
 TYPEID Int
 IN
 '{' 
 OBJECTID x
 '<' 
 '-' 
 OBJECTID num
 '/' 
 INT_CONST 8
 ';' 
 '(' 
 NEW
 TYPEID A
 ')' 
 '.' 
 OBJECTID set_var
 '(' 
 OBJECTID x
 ')' 
 ';' 
 '}' 
 ')' 
 '}' 
 ';' 
 '}' 
 ';' 
 CLASS
 TYPEID A2I
 '{' 
 OBJECTID c2i
 '(' 
 OBJECTID char
 ':' 
 TYPEID String
 ')' 
 ':' 
 TYPEID Int
 '{' 
 IF
 OBJECTID char
 '=' 
 STR_CONST "0"
 THEN
 INT_CONST 0
 ELSE
 IF
 OBJECTID char
 '=' 
 STR_CONST "1"
 THEN
 INT_CONST 1
 ELSE
 IF
 OBJECTID char
 '=' 
 STR_CONST "2"
 THEN
 INT_CONST 2
 ELSE
 IF
 OBJECTID char
 '=' 
 STR_CONST "3"
 THEN
 INT_CONST 3
 ELSE
 IF
 OBJECTID char
 '=' 
 STR_CONST "4"
 THEN
 INT_CONST 4
 ELSE
 IF
 OBJECTID char
 '=' 
 STR_CONST "5"
 THEN
 INT_CONST 5
 ELSE
 IF
 OBJECTID char
 '=' 
 STR_CONST "6"
 THEN
 INT_CONST 6
 ELSE
 IF
 OBJECTID char
 '=' 
 STR_CONST "7"
 THEN
 INT_CONST 7
 ELSE
 IF
 OBJECTID char
 '=' 
 STR_CONST "8"
 THEN
 INT_CONST 8
 ELSE
 IF
 OBJECTID char
 '=' 
 STR_CONST "9"
 THEN
 INT_CONST 9
 ELSE
 '{' 
 OBJECTID abort
 '(' 
 ')' 
 ';' 
 INT_CONST 0
 ';' 
 '}' 
 FI
 FI
 FI
 FI
 FI
 FI
 FI
 FI
 FI
 FI
 '}' 
 ';' 
 OBJECTID i2c
 '(' 
 OBJECTID i
 ':' 
 TYPEID Int
 ')' 
 ':' 
 TYPEID String
 '{' 
 IF
 OBJECTID i
 '=' 
 INT_CONST 0
 THEN
 STR_CONST "0"
 ELSE
 IF
 OBJECTID i
 '=' 
 INT_CONST 1
 THEN
 STR_CONST "1"
 ELSE
 IF
 OBJECTID i
 '=' 
 INT_CONST 2
 THEN
 STR_CONST "2"
 ELSE
 IF
 OBJECTID i
 '=' 
 INT_CONST 3
 THEN
 STR_CONST "3"
 ELSE
 IF
 OBJECTID i
 '=' 
 INT_CONST 4
 THEN
 STR_CONST "4"
 ELSE
 IF
 OBJECTID i
 '=' 
 INT_CONST 5
 THEN
 STR_CONST "5"
 ELSE
 IF
 OBJECTID i
 '=' 
 INT_CONST 6
 THEN
 STR_CONST "6"
 ELSE
 IF
 OBJECTID i
 '=' 
 INT_CONST 7
 THEN
 STR_CONST "7"
 ELSE
 IF
 OBJECTID i
 '=' 
 INT_CONST 8
 THEN
 STR_CONST "8"
 ELSE
 IF
 OBJECTID i
 '=' 
 INT_CONST 9
 THEN
 STR_CONST "9"
 ELSE
 '{' 
 OBJECTID abort
 '(' 
 ')' 
 ';' 
 STR_CONST ""
 ';' 
 '}' 
 FI
 FI
 FI
 FI
 FI
 FI
 FI
 FI
 FI
 FI
 '}' 
 ';' 
 OBJECTID a2i
 '(' 
 OBJECTID s
 ':' 
 TYPEID String
 ')' 
 ':' 
 TYPEID Int
 '{' 
 IF
 OBJECTID s
 '.' 
 OBJECTID length
 '(' 
 ')' 
 '=' 
 INT_CONST 0
 THEN
 INT_CONST 0
 ELSE
 IF
 OBJECTID s
 '.' 
 OBJECTID substr
 '(' 
 INT_CONST 0
 ',' 
 INT_CONST 1
 ')' 
 '=' 
 '-' 
 THEN
 '~' 
 OBJECTID a2i_aux
 '(' 
 OBJECTID s
 '.' 
 OBJECTID substr
 '(' 
 INT_CONST 1
 ',' 
 OBJECTID s
 '.' 
 OBJECTID length
 '(' 
 ')' 
 INT_CONST -1
 ')' 
 ')' 
 ELSE
 IF
 OBJECTID s
 '.' 
 OBJECTID substr
 '(' 
 INT_CONST 0
 ',' 
 INT_CONST 1
 ')' 
 '=' 
 '+' 
 THEN
 OBJECTID a2i_aux
 '(' 
 OBJECTID s
 '.' 
 OBJECTID substr
 '(' 
 INT_CONST 1
 ',' 
 OBJECTID s
 '.' 
 OBJECTID length
 '(' 
 ')' 
 INT_CONST -1
 ')' 
 ')' 
 ELSE
 OBJECTID a2i_aux
 '(' 
 OBJECTID s
 ')' 
 FI
 FI
 FI
 '}' 
 ';' 
 OBJECTID a2i_aux
 '(' 
 OBJECTID s
 ':' 
 TYPEID String
 ')' 
 ':' 
 TYPEID Int
 '{' 
 '(' 
 LET
 OBJECTID int
 ':' 
 TYPEID Int
 '<' 
 '-' 
 INT_CONST 0
 IN
 '{' 
 '(' 
 LET
 OBJECTID j
 ':' 
 TYPEID Int
 '<' 
 '-' 
 OBJECTID s
 '.' 
 OBJECTID length
 '(' 
 ')' 
 IN
 '(' 
 LET
 OBJECTID i
 ':' 
 TYPEID Int
 '<' 
 '-' 
 INT_CONST 0
 IN
 WHILE
 OBJECTID i
 '<' 
 OBJECTID j
 LOOP
 '{' 
 OBJECTID int
 '<' 
 '-' 
 OBJECTID int
 '*' 
 INT_CONST 10
 '+' 
 OBJECTID c2i
 '(' 
 OBJECTID s
 '.' 
 OBJECTID substr
 '(' 
 OBJECTID i
 ',' 
 INT_CONST 1
 ')' 
 ')' 
 ';' 
 OBJECTID i
 '<' 
 '-' 
 OBJECTID i
 '+' 
 INT_CONST 1
 ';' 
 '}' 
 POOL
 ')' 
 ')' 
 ';' 
 OBJECTID int
 ';' 
 '}' 
 ')' 
 '}' 
 ';' 
 OBJECTID i2a
 '(' 
 OBJECTID i
 ':' 
 TYPEID Int
 ')' 
 ':' 
 TYPEID String
 '{' 
 IF
 OBJECTID i
 '=' 
 INT_CONST 0
 THEN
 STR_CONST "0"
 ELSE
 IF
 INT_CONST 0
 '<' 
 OBJECTID i
 THEN
 OBJECTID i2a_aux
 '(' 
 OBJECTID i
 ')' 
 ELSE
 '-' 
 '.' 
 OBJECTID concat
 '(' 
 OBJECTID i2a_aux
 '(' 
 OBJECTID i
 '*' 
 '~' 
 INT_CONST 1
 ')' 
 ')' 
 FI
 FI
 '}' 
 ';' 
 OBJECTID i2a_aux
 '(' 
 OBJECTID i
 ':' 
 TYPEID Int
 ')' 
 ':' 
 TYPEID String
 '{' 
 IF
 OBJECTID i
 '=' 
 INT_CONST 0
 THEN
 STR_CONST ""
 ELSE
 '(' 
 LET
 OBJECTID next
 ':' 
 TYPEID Int
 '<' 
 '-' 
 OBJECTID i
 '/' 
 INT_CONST 10
 IN
 OBJECTID i2a_aux
 '(' 
 OBJECTID next
 ')' 
 '.' 
 OBJECTID concat
 '(' 
 OBJECTID i2c
 '(' 
 OBJECTID i
 '-' 
 OBJECTID next
 '*' 
 INT_CONST 10
 ')' 
 ')' 
 ')' 
 FI
 '}' 
 ';' 
 '}' 
 ';' 
 CLASS
 TYPEID Main
 INHERITS
 TYPEID IO
 '{' 
 OBJECTID char
 ':' 
 TYPEID String
 ';' 
 OBJECTID avar
 ':' 
 TYPEID A
 ';' 
 OBJECTID a_var
 ':' 
 TYPEID A
 ';' 
 OBJECTID flag
 ':' 
 TYPEID Bool
 '<' 
 '-' 
 BOOL_CONST true
 ';' 
 OBJECTID menu
 '(' 
 ')' 
 ':' 
 TYPEID String
 '{' 
 '{' 
 OBJECTID out_string
 '(' 
 STR_CONST "\n\tTo add a number to "
 ')' 
 ';' 
 OBJECTID print
 '(' 
 OBJECTID avar
 ')' 
 ';' 
 OBJECTID out_string
 '(' 
 '.' 
 '.' 
 '.' 
 OBJECTID enter
 OBJECTID a
 ':' 
 OBJECTID n
 ')' 
 ';' 
 OBJECTID out_string
 '(' 
 STR_CONST "\tTo negate "
 ')' 
 ';' 
 OBJECTID print
 '(' 
 OBJECTID avar
 ')' 
 ';' 
 OBJECTID out_string
 '(' 
 '.' 
 '.' 
 '.' 
 OBJECTID enter
 OBJECTID b
 ':' 
 OBJECTID n
 ')' 
 ';' 
 OBJECTID out_string
 '(' 
 STR_CONST "\tTo find the difference between "
 ')' 
 ';' 
 OBJECTID print
 '(' 
 OBJECTID avar
 ')' 
 ';' 
 OBJECTID out_string
 '(' 
 OBJECTID and
 OBJECTID another
 OBJECTID number
 '.' 
 '.' 
 '.' 
 OBJECTID enter
 OBJECTID c
 ':' 
 OBJECTID n
 ')' 
 ';' 
 OBJECTID out_string
 '(' 
 STR_CONST "\tTo find the factorial of "
 ')' 
 ';' 
 OBJECTID print
 '(' 
 OBJECTID avar
 ')' 
 ';' 
 OBJECTID out_string
 '(' 
 '.' 
 '.' 
 '.' 
 OBJECTID enter
 OBJECTID d
 ':' 
 OBJECTID n
 ')' 
 ';' 
 OBJECTID out_string
 '(' 
 STR_CONST "\tTo square "
 ')' 
 ';' 
 OBJECTID print
 '(' 
 OBJECTID avar
 ')' 
 ';' 
 OBJECTID out_string
 '(' 
 '.' 
 '.' 
 '.' 
 OBJECTID enter
 OBJECTID e
 ':' 
 OBJECTID n
 ')' 
 ';' 
 OBJECTID out_string
 '(' 
 STR_CONST "\tTo cube "
 ')' 
 ';' 
 OBJECTID print
 '(' 
 OBJECTID avar
 ')' 
 ';' 
 OBJECTID out_string
 '(' 
 '.' 
 '.' 
 '.' 
 OBJECTID enter
 OBJECTID f
 ':' 
 OBJECTID n
 ')' 
 ';' 
 OBJECTID out_string
 '(' 
 STR_CONST "\tTo find out if "
 ')' 
 ';' 
 OBJECTID print
 '(' 
 OBJECTID avar
 ')' 
 ';' 
 OBJECTID out_string
 '(' 
 OBJECTID is
 OBJECTID a
 OBJECTID multiple
 OF
 INT_CONST 3
 '.' 
 '.' 
 '.' 
 OBJECTID enter
 OBJECTID g
 ':' 
 OBJECTID n
 ')' 
 ';' 
 OBJECTID out_string
 '(' 
 STR_CONST "\tTo divide "
 ')' 
 ';' 
 OBJECTID print
 '(' 
 OBJECTID avar
 ')' 
 ';' 
 OBJECTID out_string
 '(' 
 OBJECTID by
 INT_CONST 8
 '.' 
 '.' 
 '.' 
 OBJECTID enter
 OBJECTID h
 ':' 
 OBJECTID n
 ')' 
 ';' 
 OBJECTID out_string
 '(' 
 OBJECTID tTo
 OBJECTID get
 OBJECTID a
 NEW
 OBJECTID number
 '.' 
 '.' 
 '.' 
 OBJECTID enter
 OBJECTID j
 ':' 
 OBJECTID n
 ')' 
 ';' 
 OBJECTID out_string
 '(' 
 OBJECTID tTo
 OBJECTID quit
 '.' 
 '.' 
 '.' 
 OBJECTID enter
 OBJECTID q
 ':' 
 OBJECTID n
 OBJECTID n
 ')' 
 ';' 
 OBJECTID in_string
 '(' 
 ')' 
 ';' 
 '}' 
 '}' 
 ';' 
 OBJECTID prompt
 '(' 
 ')' 
 ':' 
 TYPEID String
 '{' 
 '{' 
 OBJECTID out_string
 '(' 
 STR_CONST "\n"
 ')' 
 ';' 
 OBJECTID out_string
 '(' 
 TYPEID Please
 OBJECTID enter
 OBJECTID a
 OBJECTID number
 '.' 
 '.' 
 '.' 
 ')' 
 ';' 
 OBJECTID in_string
 '(' 
 ')' 
 ';' 
 '}' 
 '}' 
 ';' 
 OBJECTID get_int
 '(' 
 ')' 
 ':' 
 TYPEID Int
 '{' 
 '{' 
 '(' 
 LET
 OBJECTID z
 ':' 
 TYPEID A2I
 '<' 
 '-' 
 NEW
 TYPEID A2I
 IN
 '(' 
 LET
 OBJECTID s
 ':' 
 TYPEID String
 '<' 
 '-' 
 OBJECTID prompt
 '(' 
 ')' 
 IN
 OBJECTID z
 '.' 
 OBJECTID a2i
 '(' 
 OBJECTID s
 ')' 
 ')' 
 ')' 
 ';' 
 '}' 
 '}' 
 ';' 
 OBJECTID is_even
 '(' 
 OBJECTID num
 ':' 
 TYPEID Int
 ')' 
 ':' 
 TYPEID Bool
 '{' 
 '(' 
 LET
 OBJECTID x
 ':' 
 TYPEID Int
 '<' 
 '-' 
 OBJECTID num
 IN
 IF
 OBJECTID x
 '<' 
 INT_CONST 0
 THEN
 OBJECTID is_even
 '(' 
 '~' 
 OBJECTID x
 ')' 
 ELSE
 IF
 INT_CONST 0
 '=' 
 OBJECTID x
 THEN
 BOOL_CONST true
 ELSE
 IF
 INT_CONST 1
 '=' 
 OBJECTID x
 THEN
 OBJECTID false
 ELSE
 OBJECTID is_even
 '(' 
 OBJECTID x
 '-' 
 INT_CONST 2
 ')' 
 FI
 FI
 FI
 ')' 
 '}' 
 ';' 
 OBJECTID class_type
 '(' 
 OBJECTID var
 ':' 
 TYPEID A
 ')' 
 ':' 
 TYPEID SELF_TYPE
 '{' 
 CASE
 OBJECTID var
 OF
 OBJECTID a
 ':' 
 TYPEID A
 '=' 
 '>' 
 OBJECTID out_string
 '(' 
 STR_CONST "Class type is now A\n"
 ')' 
 ';' 
 OBJECTID b
 ':' 
 TYPEID B
 '=' 
 '>' 
 OBJECTID out_string
 '(' 
 STR_CONST "Class type is now B\n"
 ')' 
 ';' 
 OBJECTID c
 ':' 
 TYPEID C
 '=' 
 '>' 
 OBJECTID out_string
 '(' 
 STR_CONST "Class type is now C\n"
 ')' 
 ';' 
 OBJECTID d
 ':' 
 TYPEID D
 '=' 
 '>' 
 OBJECTID out_string
 '(' 
 STR_CONST "Class type is now D\n"
 ')' 
 ';' 
 OBJECTID e
 ':' 
 TYPEID E
 '=' 
 '>' 
 OBJECTID out_string
 '(' 
 STR_CONST "Class type is now E\n"
 ')' 
 ';' 
 OBJECTID o
 ':' 
 TYPEID Object
 '=' 
 '>' 
 OBJECTID out_string
 '(' 
 STR_CONST "Oooops\n"
 ')' 
 ';' 
 ESAC
 '}' 
 ';' 
 OBJECTID print
 '(' 
 OBJECTID var
 ':' 
 TYPEID A
 ')' 
 ':' 
 TYPEID SELF_TYPE
 '{' 
 '(' 
 LET
 OBJECTID z
 ':' 
 TYPEID A2I
 '<' 
 '-' 
 NEW
 TYPEID A2I
 IN
 '{' 
 OBJECTID out_string
 '(' 
 OBJECTID z
 '.' 
 OBJECTID i2a
 '(' 
 OBJECTID var
 '.' 
 OBJECTID value
 '(' 
 ')' 
 ')' 
 ')' 
 ';' 
 OBJECTID out_string
 '(' 
 STR_CONST " "
 ')' 
 ';' 
 '}' 
 ')' 
 '}' 
 ';' 
 OBJECTID main
 '(' 
 ')' 
 ':' 
 TYPEID Object
 '{' 
 '{' 
 OBJECTID avar
 '<' 
 '-' 
 '(' 
 NEW
 TYPEID A
 ')' 
 ';' 
 WHILE
 OBJECTID flag
 LOOP
 '{' 
 OBJECTID out_string
 '(' 
 STR_CONST "number "
 ')' 
 ';' 
 OBJECTID print
 '(' 
 OBJECTID avar
 ')' 
 ';' 
 IF
 OBJECTID is_even
 '(' 
 OBJECTID avar
 '.' 
 OBJECTID value
 '(' 
 ')' 
 ')' 
 THEN
 OBJECTID out_string
 '(' 
 OBJECTID is
 OBJECTID even
 OBJECTID n
 ')' 
 ELSE
 OBJECTID out_string
 '(' 
 OBJECTID is
 OBJECTID odd
 OBJECTID n
 ')' 
 FI
 ';' 
 OBJECTID class_type
 '(' 
 OBJECTID avar
 ')' 
 ';' 
 OBJECTID char
 '<' 
 '-' 
 OBJECTID menu
 '(' 
 ')' 
 ';' 
 IF
 OBJECTID char
 '=' 
 STR_CONST "a"
 THEN
 '{' 
 OBJECTID a_var
 '<' 
 '-' 
 '(' 
 NEW
 TYPEID A
 ')' 
 '.' 
 OBJECTID set_var
 '(' 
 OBJECTID get_int
 '(' 
 ')' 
 ')' 
 ';' 
 OBJECTID avar
 '<' 
 '-' 
 '(' 
 NEW
 TYPEID B
 ')' 
 '.' 
 OBJECTID method2
 '(' 
 OBJECTID avar
 '.' 
 OBJECTID value
 '(' 
 ')' 
 ',' 
 OBJECTID a_var
 '.' 
 OBJECTID value
 '(' 
 ')' 
 ')' 
 ';' 
 '}' 
 ELSE
 IF
 OBJECTID char
 '=' 
 STR_CONST "b"
 THEN
 CASE
 OBJECTID avar
 OF
 OBJECTID c
 ':' 
 TYPEID C
 '=' 
 '>' 
 OBJECTID avar
 '<' 
 '-' 
 OBJECTID c
 '.' 
 OBJECTID method6
 '(' 
 OBJECTID c
 '.' 
 OBJECTID value
 '(' 
 ')' 
 ')' 
 ';' 
 OBJECTID a
 ':' 
 TYPEID A
 '=' 
 '>' 
 OBJECTID avar
 '<' 
 '-' 
 OBJECTID a
 '.' 
 OBJECTID method3
 '(' 
 OBJECTID a
 '.' 
 OBJECTID value
 '(' 
 ')' 
 ')' 
 ';' 
 OBJECTID o
 ':' 
 TYPEID Object
 '=' 
 '>' 
 '{' 
 OBJECTID out_string
 '(' 
 STR_CONST "Oooops\n"
 ')' 
 ';' 
 OBJECTID abort
 '(' 
 ')' 
 ';' 
 INT_CONST 0
 ';' 
 '}' 
 ';' 
 ESAC
 ELSE
 IF
 OBJECTID char
 '=' 
 STR_CONST "c"
 THEN
 '{' 
 OBJECTID a_var
 '<' 
 '-' 
 '(' 
 NEW
 TYPEID A
 ')' 
 '.' 
 OBJECTID set_var
 '(' 
 OBJECTID get_int
 '(' 
 ')' 
 ')' 
 ';' 
 OBJECTID avar
 '<' 
 '-' 
 '(' 
 NEW
 TYPEID D
 ')' 
 '.' 
 OBJECTID method4
 '(' 
 OBJECTID avar
 '.' 
 OBJECTID value
 '(' 
 ')' 
 ',' 
 OBJECTID a_var
 '.' 
 OBJECTID value
 '(' 
 ')' 
 ')' 
 ';' 
 '}' 
 ELSE
 IF
 OBJECTID char
 '=' 
 STR_CONST "d"
 THEN
 OBJECTID avar
 '<' 
 '-' 
 '(' 
 NEW
 TYPEID C
 ')' 
 '@' 
 TYPEID A
 '.' 
 OBJECTID method5
 '(' 
 OBJECTID avar
 '.' 
 OBJECTID value
 '(' 
 ')' 
 ')' 
 ELSE
 IF
 OBJECTID char
 '=' 
 STR_CONST "e"
 THEN
 OBJECTID avar
 '<' 
 '-' 
 '(' 
 NEW
 TYPEID C
 ')' 
 '@' 
 TYPEID B
 '.' 
 OBJECTID method5
 '(' 
 OBJECTID avar
 '.' 
 OBJECTID value
 '(' 
 ')' 
 ')' 
 ELSE
 IF
 OBJECTID char
 '=' 
 STR_CONST "f"
 THEN
 OBJECTID avar
 '<' 
 '-' 
 '(' 
 NEW
 TYPEID C
 ')' 
 '@' 
 TYPEID C
 '.' 
 OBJECTID method5
 '(' 
 OBJECTID avar
 '.' 
 OBJECTID value
 '(' 
 ')' 
 ')' 
 ELSE
 IF
 OBJECTID char
 '=' 
 STR_CONST "g"
 THEN
 IF
 '(' 
 '(' 
 NEW
 TYPEID D
 ')' 
 '.' 
 OBJECTID method7
 '(' 
 OBJECTID avar
 '.' 
 OBJECTID value
 '(' 
 ')' 
 ')' 
 ')' 
 THEN
 '{' 
 OBJECTID out_string
 '(' 
 STR_CONST "number "
 ')' 
 ';' 
 OBJECTID print
 '(' 
 OBJECTID avar
 ')' 
 ';' 
 OBJECTID out_string
 '(' 
 OBJECTID is
 OBJECTID divisible
 OBJECTID by
 INT_CONST 3
 '.' 
 OBJECTID n
 ')' 
 ';' 
 '}' 
 ELSE
 '{' 
 OBJECTID out_string
 '(' 
 STR_CONST "number "
 ')' 
 ';' 
 OBJECTID print
 '(' 
 OBJECTID avar
 ')' 
 ';' 
 OBJECTID out_string
 '(' 
 OBJECTID is
 NOT
 OBJECTID divisible
 OBJECTID by
 INT_CONST 3
 '.' 
 OBJECTID n
 ')' 
 ';' 
 '}' 
 FI
 ELSE
 IF
 OBJECTID char
 '=' 
 STR_CONST "h"
 THEN
 '(' 
 LET
 OBJECTID x
 ':' 
 TYPEID A
 IN
 '{' 
 OBJECTID x
 '<' 
 '-' 
 '(' 
 NEW
 TYPEID E
 ')' 
 '.' 
 OBJECTID method6
 '(' 
 OBJECTID avar
 '.' 
 OBJECTID value
 '(' 
 ')' 
 ')' 
 ';' 
 '(' 
 LET
 OBJECTID r
 ':' 
 TYPEID Int
 '<' 
 '-' 
 '(' 
 OBJECTID avar
 '.' 
 OBJECTID value
 '(' 
 ')' 
 '-' 
 '(' 
 OBJECTID x
 '.' 
 OBJECTID value
 '(' 
 ')' 
 '*' 
 INT_CONST 8
 ')' 
 ')' 
 IN
 '{' 
 OBJECTID out_string
 '(' 
 STR_CONST "number "
 ')' 
 ';' 
 OBJECTID print
 '(' 
 OBJECTID avar
 ')' 
 ';' 
 OBJECTID out_string
 '(' 
 STR_CONST "is equal to "
 ')' 
 ';' 
 OBJECTID print
 '(' 
 OBJECTID x
 ')' 
 ';' 
 OBJECTID out_string
 '(' 
 STR_CONST "times 8 with a remainder of "
 ')' 
 ';' 
 '(' 
 LET
 OBJECTID a
 ':' 
 TYPEID A2I
 '<' 
 '-' 
 NEW
 TYPEID A2I
 IN
 '{' 
 OBJECTID out_string
 '(' 
 OBJECTID a
 '.' 
 OBJECTID i2a
 '(' 
 OBJECTID r
 ')' 
 ')' 
 ';' 
 OBJECTID out_string
 '(' 
 STR_CONST "\n"
 ')' 
 ';' 
 '}' 
 ')' 
 ';' 
 '}' 
 ')' 
 ';' 
 OBJECTID avar
 '<' 
 '-' 
 OBJECTID x
 ';' 
 '}' 
 ')' 
 ELSE
 IF
 OBJECTID char
 '=' 
 STR_CONST "j"
 THEN
 OBJECTID avar
 '<' 
 '-' 
 '(' 
 NEW
 TYPEID A
 ')' 
 ELSE
 IF
 OBJECTID char
 '=' 
 STR_CONST "q"
 THEN
 OBJECTID flag
 '<' 
 '-' 
 OBJECTID false
 ELSE
 OBJECTID avar
 '<' 
 '-' 
 '(' 
 NEW
 TYPEID A
 ')' 
 '.' 
 OBJECTID method1
 '(' 
 OBJECTID avar
 '.' 
 OBJECTID value
 '(' 
 ')' 
 ')' 
 FI
 FI
 FI
 FI
 FI
 FI
 FI
 FI
 FI
 FI
 ';' 
 '}' 
 POOL
 ';' 
 '}' 
 '}' 
 ';' 
 '}' 
 ';'