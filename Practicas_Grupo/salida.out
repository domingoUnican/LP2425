Grammar:

Rule 0     S' -> program
Rule 1     program -> clases
Rule 2     clases -> clases clase ;
Rule 3     clases -> clase ;
Rule 4     clase -> CLASS TYPEID INHERITS TYPEID { caracteristicas }
Rule 5     clase -> CLASS TYPEID { caracteristicas }
Rule 6     clase -> CLASS TYPEID INHERITS TYPEID { }
Rule 7     clase -> CLASS TYPEID { }
Rule 8     caracteristicas -> OBJECTID : error ;
Rule 9     caracteristicas -> caracteristicas caracteristica ;
Rule 10    caracteristicas -> caracteristica ;
Rule 11    caracteristica -> OBJECTID ( ) : TYPEID { error }
Rule 12    caracteristica -> OBJECTID ( formales ) : TYPEID { expression }
Rule 13    caracteristica -> OBJECTID ( ) : TYPEID { expression }
Rule 14    caracteristica -> OBJECTID : TYPEID ASSIGN expression  [precedence=right, level=1]
Rule 15    caracteristica -> OBJECTID : TYPEID
Rule 16    formal -> OBJECTID : error
Rule 17    formal -> OBJECTID : TYPEID
Rule 18    formales -> formales , formal
Rule 19    formales -> formal
Rule 20    expression -> CASE error OF darrowlist ESAC
Rule 21    expression -> error TYPEID
Rule 22    expression -> LET OBJECTID : TYPEID error IN expression  [precedence=left, level=4]
Rule 23    expression -> CASE expression OF darrowlist ESAC
Rule 24    expression -> WHILE expression LOOP expression POOL
Rule 25    expression -> LET let_list IN expression  [precedence=left, level=4]
Rule 26    expression -> IF expression THEN expression ELSE expression FI
Rule 27    expression -> { expressions }
Rule 28    expression -> BOOL_CONST
Rule 29    expression -> STR_CONST
Rule 30    expression -> INT_CONST
Rule 31    expression -> OBJECTID
Rule 32    expression -> OBJECTID ( parametros )
Rule 33    expression -> OBJECTID ( )
Rule 34    expression -> expression . OBJECTID ( parametros )
Rule 35    expression -> expression . OBJECTID ( )
Rule 36    expression -> expression @ TYPEID . OBJECTID ( parametros )
Rule 37    expression -> expression @ TYPEID . OBJECTID ( )
Rule 38    expression -> ~ expression  [precedence=left, level=9]
Rule 39    expression -> NEW TYPEID
Rule 40    expression -> ISVOID expression  [precedence=left, level=8]
Rule 41    expression -> NOT expression  [precedence=left, level=2]
Rule 42    expression -> ( expression )
Rule 43    expression -> expression = expression  [precedence=nonassoc, level=3]
Rule 44    expression -> expression LE expression  [precedence=nonassoc, level=3]
Rule 45    expression -> expression < expression  [precedence=nonassoc, level=3]
Rule 46    expression -> expression / expression  [precedence=left, level=6]
Rule 47    expression -> expression * expression  [precedence=left, level=6]
Rule 48    expression -> expression - expression  [precedence=left, level=5]
Rule 49    expression -> expression + expression  [precedence=left, level=5]
Rule 50    expression -> OBJECTID ASSIGN expression  [precedence=right, level=1]
Rule 51    expressions -> expressions WHILE expression LOOP expression error ;
Rule 52    expressions -> expressions WHILE expression error expression POOL ;
Rule 53    expressions -> error ;
Rule 54    expressions -> expressions expression ;
Rule 55    expressions -> expression ;
Rule 56    parametros -> parametros , expression
Rule 57    parametros -> expression
Rule 58    let_list -> let_decl
Rule 59    let_list -> let_list , let_decl
Rule 60    let_decl -> OBJECTID : TYPEID ASSIGN expression  [precedence=right, level=1]
Rule 61    let_decl -> OBJECTID : TYPEID
Rule 62    darrowlist -> darrowlist OBJECTID : TYPEID DARROW expression ;
Rule 63    darrowlist -> OBJECTID : TYPEID DARROW expression ;

Terminals, with rules where they appear:

(                    : 11 12 13 32 33 34 35 36 37 42
)                    : 11 12 13 32 33 34 35 36 37 42
*                    : 47
+                    : 49
,                    : 18 56 59
-                    : 48
.                    : 34 35 36 37
/                    : 46
:                    : 8 11 12 13 14 15 16 17 22 60 61 62 63
;                    : 2 3 8 9 10 51 52 53 54 55 62 63
<                    : 45
=                    : 43
@                    : 36 37
ASSIGN               : 14 50 60
BOOL_CONST           : 28
CASE                 : 20 23
CLASS                : 4 5 6 7
DARROW               : 62 63
ELSE                 : 26
ESAC                 : 20 23
FI                   : 26
IF                   : 26
IN                   : 22 25
INHERITS             : 4 6
INT_CONST            : 30
ISVOID               : 40
LE                   : 44
LET                  : 22 25
LOOP                 : 24 51
NEW                  : 39
NOT                  : 41
OBJECTID             : 8 11 12 13 14 15 16 17 22 31 32 33 34 35 36 37 50 60 61 62 63
OF                   : 20 23
POOL                 : 24 52
STR_CONST            : 29
THEN                 : 26
TYPEID               : 4 4 5 6 6 7 11 12 13 14 15 17 21 22 36 37 39 60 61 62 63
WHILE                : 24 51 52
error                : 8 11 16 20 21 22 51 52 53
{                    : 4 5 6 7 11 12 13 27
}                    : 4 5 6 7 11 12 13 27
~                    : 38

Nonterminals, with rules where they appear:

caracteristica       : 9 10
caracteristicas      : 4 5 9
clase                : 2 3
clases               : 1 2
darrowlist           : 20 23 62
expression           : 12 13 14 22 23 24 24 25 26 26 26 34 35 36 37 38 40 41 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 51 51 52 52 54 55 56 57 60 62 63
expressions          : 27 51 52 54
formal               : 18 19
formales             : 12 18
let_decl             : 58 59
let_list             : 25 59
parametros           : 32 34 36 56
program              : 0


state 0

    (0) S' -> . program
    (1) program -> . clases
    (2) clases -> . clases clase ;
    (3) clases -> . clase ;
    (4) clase -> . CLASS TYPEID INHERITS TYPEID { caracteristicas }
    (5) clase -> . CLASS TYPEID { caracteristicas }
    (6) clase -> . CLASS TYPEID INHERITS TYPEID { }
    (7) clase -> . CLASS TYPEID { }
    CLASS           shift and go to state 4

    program                        shift and go to state 1
    clases                         shift and go to state 2
    clase                          shift and go to state 3

state 1

    (0) S' -> program .


state 2

    (1) program -> clases .
    (2) clases -> clases . clase ;
    (4) clase -> . CLASS TYPEID INHERITS TYPEID { caracteristicas }
    (5) clase -> . CLASS TYPEID { caracteristicas }
    (6) clase -> . CLASS TYPEID INHERITS TYPEID { }
    (7) clase -> . CLASS TYPEID { }
    $end            reduce using rule 1 (program -> clases .)
    CLASS           shift and go to state 4

    clase                          shift and go to state 5

state 3

    (3) clases -> clase . ;
    ;               shift and go to state 6


state 4

    (4) clase -> CLASS . TYPEID INHERITS TYPEID { caracteristicas }
    (5) clase -> CLASS . TYPEID { caracteristicas }
    (6) clase -> CLASS . TYPEID INHERITS TYPEID { }
    (7) clase -> CLASS . TYPEID { }
    TYPEID          shift and go to state 7


state 5

    (2) clases -> clases clase . ;
    ;               shift and go to state 8


state 6

    (3) clases -> clase ; .
    CLASS           reduce using rule 3 (clases -> clase ; .)
    $end            reduce using rule 3 (clases -> clase ; .)


state 7

    (4) clase -> CLASS TYPEID . INHERITS TYPEID { caracteristicas }
    (5) clase -> CLASS TYPEID . { caracteristicas }
    (6) clase -> CLASS TYPEID . INHERITS TYPEID { }
    (7) clase -> CLASS TYPEID . { }
    INHERITS        shift and go to state 9
    {               shift and go to state 10


state 8

    (2) clases -> clases clase ; .
    CLASS           reduce using rule 2 (clases -> clases clase ; .)
    $end            reduce using rule 2 (clases -> clases clase ; .)


state 9

    (4) clase -> CLASS TYPEID INHERITS . TYPEID { caracteristicas }
    (6) clase -> CLASS TYPEID INHERITS . TYPEID { }
    TYPEID          shift and go to state 11


state 10

    (5) clase -> CLASS TYPEID { . caracteristicas }
    (7) clase -> CLASS TYPEID { . }
    (8) caracteristicas -> . OBJECTID : error ;
    (9) caracteristicas -> . caracteristicas caracteristica ;
    (10) caracteristicas -> . caracteristica ;
    (11) caracteristica -> . OBJECTID ( ) : TYPEID { error }
    (12) caracteristica -> . OBJECTID ( formales ) : TYPEID { expression }
    (13) caracteristica -> . OBJECTID ( ) : TYPEID { expression }
    (14) caracteristica -> . OBJECTID : TYPEID ASSIGN expression
    (15) caracteristica -> . OBJECTID : TYPEID
    }               shift and go to state 13
    OBJECTID        shift and go to state 14

    caracteristicas                shift and go to state 12
    caracteristica                 shift and go to state 15

state 11

    (4) clase -> CLASS TYPEID INHERITS TYPEID . { caracteristicas }
    (6) clase -> CLASS TYPEID INHERITS TYPEID . { }
    {               shift and go to state 16


state 12

    (5) clase -> CLASS TYPEID { caracteristicas . }
    (9) caracteristicas -> caracteristicas . caracteristica ;
    (11) caracteristica -> . OBJECTID ( ) : TYPEID { error }
    (12) caracteristica -> . OBJECTID ( formales ) : TYPEID { expression }
    (13) caracteristica -> . OBJECTID ( ) : TYPEID { expression }
    (14) caracteristica -> . OBJECTID : TYPEID ASSIGN expression
    (15) caracteristica -> . OBJECTID : TYPEID
    }               shift and go to state 17
    OBJECTID        shift and go to state 19

    caracteristica                 shift and go to state 18

state 13

    (7) clase -> CLASS TYPEID { } .
    ;               reduce using rule 7 (clase -> CLASS TYPEID { } .)


state 14

    (8) caracteristicas -> OBJECTID . : error ;
    (11) caracteristica -> OBJECTID . ( ) : TYPEID { error }
    (12) caracteristica -> OBJECTID . ( formales ) : TYPEID { expression }
    (13) caracteristica -> OBJECTID . ( ) : TYPEID { expression }
    (14) caracteristica -> OBJECTID . : TYPEID ASSIGN expression
    (15) caracteristica -> OBJECTID . : TYPEID
    :               shift and go to state 20
    (               shift and go to state 21


state 15

    (10) caracteristicas -> caracteristica . ;
    ;               shift and go to state 22


state 16

    (4) clase -> CLASS TYPEID INHERITS TYPEID { . caracteristicas }
    (6) clase -> CLASS TYPEID INHERITS TYPEID { . }
    (8) caracteristicas -> . OBJECTID : error ;
    (9) caracteristicas -> . caracteristicas caracteristica ;
    (10) caracteristicas -> . caracteristica ;
    (11) caracteristica -> . OBJECTID ( ) : TYPEID { error }
    (12) caracteristica -> . OBJECTID ( formales ) : TYPEID { expression }
    (13) caracteristica -> . OBJECTID ( ) : TYPEID { expression }
    (14) caracteristica -> . OBJECTID : TYPEID ASSIGN expression
    (15) caracteristica -> . OBJECTID : TYPEID
    }               shift and go to state 24
    OBJECTID        shift and go to state 14

    caracteristicas                shift and go to state 23
    caracteristica                 shift and go to state 15

state 17

    (5) clase -> CLASS TYPEID { caracteristicas } .
    ;               reduce using rule 5 (clase -> CLASS TYPEID { caracteristicas } .)


state 18

    (9) caracteristicas -> caracteristicas caracteristica . ;
    ;               shift and go to state 25


state 19

    (11) caracteristica -> OBJECTID . ( ) : TYPEID { error }
    (12) caracteristica -> OBJECTID . ( formales ) : TYPEID { expression }
    (13) caracteristica -> OBJECTID . ( ) : TYPEID { expression }
    (14) caracteristica -> OBJECTID . : TYPEID ASSIGN expression
    (15) caracteristica -> OBJECTID . : TYPEID
    (               shift and go to state 21
    :               shift and go to state 26


state 20

    (8) caracteristicas -> OBJECTID : . error ;
    (14) caracteristica -> OBJECTID : . TYPEID ASSIGN expression
    (15) caracteristica -> OBJECTID : . TYPEID
    error           shift and go to state 27
    TYPEID          shift and go to state 28


state 21

    (11) caracteristica -> OBJECTID ( . ) : TYPEID { error }
    (12) caracteristica -> OBJECTID ( . formales ) : TYPEID { expression }
    (13) caracteristica -> OBJECTID ( . ) : TYPEID { expression }
    (18) formales -> . formales , formal
    (19) formales -> . formal
    (16) formal -> . OBJECTID : error
    (17) formal -> . OBJECTID : TYPEID
    )               shift and go to state 30
    OBJECTID        shift and go to state 29

    formales                       shift and go to state 31
    formal                         shift and go to state 32

state 22

    (10) caracteristicas -> caracteristica ; .
    }               reduce using rule 10 (caracteristicas -> caracteristica ; .)
    OBJECTID        reduce using rule 10 (caracteristicas -> caracteristica ; .)


state 23

    (4) clase -> CLASS TYPEID INHERITS TYPEID { caracteristicas . }
    (9) caracteristicas -> caracteristicas . caracteristica ;
    (11) caracteristica -> . OBJECTID ( ) : TYPEID { error }
    (12) caracteristica -> . OBJECTID ( formales ) : TYPEID { expression }
    (13) caracteristica -> . OBJECTID ( ) : TYPEID { expression }
    (14) caracteristica -> . OBJECTID : TYPEID ASSIGN expression
    (15) caracteristica -> . OBJECTID : TYPEID
    }               shift and go to state 33
    OBJECTID        shift and go to state 19

    caracteristica                 shift and go to state 18

state 24

    (6) clase -> CLASS TYPEID INHERITS TYPEID { } .
    ;               reduce using rule 6 (clase -> CLASS TYPEID INHERITS TYPEID { } .)


state 25

    (9) caracteristicas -> caracteristicas caracteristica ; .
    }               reduce using rule 9 (caracteristicas -> caracteristicas caracteristica ; .)
    OBJECTID        reduce using rule 9 (caracteristicas -> caracteristicas caracteristica ; .)


state 26

    (14) caracteristica -> OBJECTID : . TYPEID ASSIGN expression
    (15) caracteristica -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 28


state 27

    (8) caracteristicas -> OBJECTID : error . ;
    ;               shift and go to state 34


state 28

    (14) caracteristica -> OBJECTID : TYPEID . ASSIGN expression
    (15) caracteristica -> OBJECTID : TYPEID .
    ASSIGN          shift and go to state 35
    ;               reduce using rule 15 (caracteristica -> OBJECTID : TYPEID .)


state 29

    (16) formal -> OBJECTID . : error
    (17) formal -> OBJECTID . : TYPEID
    :               shift and go to state 36


state 30

    (11) caracteristica -> OBJECTID ( ) . : TYPEID { error }
    (13) caracteristica -> OBJECTID ( ) . : TYPEID { expression }
    :               shift and go to state 37


state 31

    (12) caracteristica -> OBJECTID ( formales . ) : TYPEID { expression }
    (18) formales -> formales . , formal
    )               shift and go to state 38
    ,               shift and go to state 39


state 32

    (19) formales -> formal .
    )               reduce using rule 19 (formales -> formal .)
    ,               reduce using rule 19 (formales -> formal .)


state 33

    (4) clase -> CLASS TYPEID INHERITS TYPEID { caracteristicas } .
    ;               reduce using rule 4 (clase -> CLASS TYPEID INHERITS TYPEID { caracteristicas } .)


state 34

    (8) caracteristicas -> OBJECTID : error ; .
    }               reduce using rule 8 (caracteristicas -> OBJECTID : error ; .)
    OBJECTID        reduce using rule 8 (caracteristicas -> OBJECTID : error ; .)


state 35

    (14) caracteristica -> OBJECTID : TYPEID ASSIGN . expression
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 41

state 36

    (16) formal -> OBJECTID : . error
    (17) formal -> OBJECTID : . TYPEID
    error           shift and go to state 56
    TYPEID          shift and go to state 57


state 37

    (11) caracteristica -> OBJECTID ( ) : . TYPEID { error }
    (13) caracteristica -> OBJECTID ( ) : . TYPEID { expression }
    TYPEID          shift and go to state 58


state 38

    (12) caracteristica -> OBJECTID ( formales ) . : TYPEID { expression }
    :               shift and go to state 59


state 39

    (18) formales -> formales , . formal
    (16) formal -> . OBJECTID : error
    (17) formal -> . OBJECTID : TYPEID
    OBJECTID        shift and go to state 29

    formal                         shift and go to state 60

state 40

    (31) expression -> OBJECTID .
    (32) expression -> OBJECTID . ( parametros )
    (33) expression -> OBJECTID . ( )
    (50) expression -> OBJECTID . ASSIGN expression
    .               reduce using rule 31 (expression -> OBJECTID .)
    @               reduce using rule 31 (expression -> OBJECTID .)
    =               reduce using rule 31 (expression -> OBJECTID .)
    LE              reduce using rule 31 (expression -> OBJECTID .)
    <               reduce using rule 31 (expression -> OBJECTID .)
    /               reduce using rule 31 (expression -> OBJECTID .)
    *               reduce using rule 31 (expression -> OBJECTID .)
    -               reduce using rule 31 (expression -> OBJECTID .)
    +               reduce using rule 31 (expression -> OBJECTID .)
    ;               reduce using rule 31 (expression -> OBJECTID .)
    OF              reduce using rule 31 (expression -> OBJECTID .)
    LOOP            reduce using rule 31 (expression -> OBJECTID .)
    THEN            reduce using rule 31 (expression -> OBJECTID .)
    )               reduce using rule 31 (expression -> OBJECTID .)
    ,               reduce using rule 31 (expression -> OBJECTID .)
    }               reduce using rule 31 (expression -> OBJECTID .)
    POOL            reduce using rule 31 (expression -> OBJECTID .)
    ELSE            reduce using rule 31 (expression -> OBJECTID .)
    error           reduce using rule 31 (expression -> OBJECTID .)
    IN              reduce using rule 31 (expression -> OBJECTID .)
    FI              reduce using rule 31 (expression -> OBJECTID .)
    (               shift and go to state 61
    ASSIGN          shift and go to state 62


state 41

    (14) caracteristica -> OBJECTID : TYPEID ASSIGN expression .
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    ;               reduce using rule 14 (caracteristica -> OBJECTID : TYPEID ASSIGN expression .)
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 42

    (20) expression -> CASE . error OF darrowlist ESAC
    (23) expression -> CASE . expression OF darrowlist ESAC
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    error           shift and go to state 72
    CASE            shift and go to state 42
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 73

state 43

    (21) expression -> error . TYPEID
    TYPEID          shift and go to state 74


state 44

    (22) expression -> LET . OBJECTID : TYPEID error IN expression
    (25) expression -> LET . let_list IN expression
    (58) let_list -> . let_decl
    (59) let_list -> . let_list , let_decl
    (60) let_decl -> . OBJECTID : TYPEID ASSIGN expression
    (61) let_decl -> . OBJECTID : TYPEID
    OBJECTID        shift and go to state 75

    let_list                       shift and go to state 76
    let_decl                       shift and go to state 77

state 45

    (24) expression -> WHILE . expression LOOP expression POOL
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 78

state 46

    (26) expression -> IF . expression THEN expression ELSE expression FI
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 79

state 47

    (27) expression -> { . expressions }
    (51) expressions -> . expressions WHILE expression LOOP expression error ;
    (52) expressions -> . expressions WHILE expression error expression POOL ;
    (53) expressions -> . error ;
    (54) expressions -> . expressions expression ;
    (55) expressions -> . expression ;
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    error           shift and go to state 82
    CASE            shift and go to state 42
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expressions                    shift and go to state 80
    expression                     shift and go to state 81

state 48

    (28) expression -> BOOL_CONST .
    .               reduce using rule 28 (expression -> BOOL_CONST .)
    @               reduce using rule 28 (expression -> BOOL_CONST .)
    =               reduce using rule 28 (expression -> BOOL_CONST .)
    LE              reduce using rule 28 (expression -> BOOL_CONST .)
    <               reduce using rule 28 (expression -> BOOL_CONST .)
    /               reduce using rule 28 (expression -> BOOL_CONST .)
    *               reduce using rule 28 (expression -> BOOL_CONST .)
    -               reduce using rule 28 (expression -> BOOL_CONST .)
    +               reduce using rule 28 (expression -> BOOL_CONST .)
    ;               reduce using rule 28 (expression -> BOOL_CONST .)
    OF              reduce using rule 28 (expression -> BOOL_CONST .)
    LOOP            reduce using rule 28 (expression -> BOOL_CONST .)
    THEN            reduce using rule 28 (expression -> BOOL_CONST .)
    )               reduce using rule 28 (expression -> BOOL_CONST .)
    ,               reduce using rule 28 (expression -> BOOL_CONST .)
    }               reduce using rule 28 (expression -> BOOL_CONST .)
    POOL            reduce using rule 28 (expression -> BOOL_CONST .)
    ELSE            reduce using rule 28 (expression -> BOOL_CONST .)
    error           reduce using rule 28 (expression -> BOOL_CONST .)
    IN              reduce using rule 28 (expression -> BOOL_CONST .)
    FI              reduce using rule 28 (expression -> BOOL_CONST .)


state 49

    (29) expression -> STR_CONST .
    .               reduce using rule 29 (expression -> STR_CONST .)
    @               reduce using rule 29 (expression -> STR_CONST .)
    =               reduce using rule 29 (expression -> STR_CONST .)
    LE              reduce using rule 29 (expression -> STR_CONST .)
    <               reduce using rule 29 (expression -> STR_CONST .)
    /               reduce using rule 29 (expression -> STR_CONST .)
    *               reduce using rule 29 (expression -> STR_CONST .)
    -               reduce using rule 29 (expression -> STR_CONST .)
    +               reduce using rule 29 (expression -> STR_CONST .)
    ;               reduce using rule 29 (expression -> STR_CONST .)
    OF              reduce using rule 29 (expression -> STR_CONST .)
    LOOP            reduce using rule 29 (expression -> STR_CONST .)
    THEN            reduce using rule 29 (expression -> STR_CONST .)
    )               reduce using rule 29 (expression -> STR_CONST .)
    ,               reduce using rule 29 (expression -> STR_CONST .)
    }               reduce using rule 29 (expression -> STR_CONST .)
    POOL            reduce using rule 29 (expression -> STR_CONST .)
    ELSE            reduce using rule 29 (expression -> STR_CONST .)
    error           reduce using rule 29 (expression -> STR_CONST .)
    IN              reduce using rule 29 (expression -> STR_CONST .)
    FI              reduce using rule 29 (expression -> STR_CONST .)


state 50

    (30) expression -> INT_CONST .
    .               reduce using rule 30 (expression -> INT_CONST .)
    @               reduce using rule 30 (expression -> INT_CONST .)
    =               reduce using rule 30 (expression -> INT_CONST .)
    LE              reduce using rule 30 (expression -> INT_CONST .)
    <               reduce using rule 30 (expression -> INT_CONST .)
    /               reduce using rule 30 (expression -> INT_CONST .)
    *               reduce using rule 30 (expression -> INT_CONST .)
    -               reduce using rule 30 (expression -> INT_CONST .)
    +               reduce using rule 30 (expression -> INT_CONST .)
    ;               reduce using rule 30 (expression -> INT_CONST .)
    OF              reduce using rule 30 (expression -> INT_CONST .)
    LOOP            reduce using rule 30 (expression -> INT_CONST .)
    THEN            reduce using rule 30 (expression -> INT_CONST .)
    )               reduce using rule 30 (expression -> INT_CONST .)
    ,               reduce using rule 30 (expression -> INT_CONST .)
    }               reduce using rule 30 (expression -> INT_CONST .)
    POOL            reduce using rule 30 (expression -> INT_CONST .)
    ELSE            reduce using rule 30 (expression -> INT_CONST .)
    error           reduce using rule 30 (expression -> INT_CONST .)
    IN              reduce using rule 30 (expression -> INT_CONST .)
    FI              reduce using rule 30 (expression -> INT_CONST .)


state 51

    (42) expression -> ( . expression )
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 83

state 52

    (38) expression -> ~ . expression
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 84

state 53

    (39) expression -> NEW . TYPEID
    TYPEID          shift and go to state 85


state 54

    (40) expression -> ISVOID . expression
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 86

state 55

    (41) expression -> NOT . expression
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 87

state 56

    (16) formal -> OBJECTID : error .
    )               reduce using rule 16 (formal -> OBJECTID : error .)
    ,               reduce using rule 16 (formal -> OBJECTID : error .)


state 57

    (17) formal -> OBJECTID : TYPEID .
    )               reduce using rule 17 (formal -> OBJECTID : TYPEID .)
    ,               reduce using rule 17 (formal -> OBJECTID : TYPEID .)


state 58

    (11) caracteristica -> OBJECTID ( ) : TYPEID . { error }
    (13) caracteristica -> OBJECTID ( ) : TYPEID . { expression }
    {               shift and go to state 88


state 59

    (12) caracteristica -> OBJECTID ( formales ) : . TYPEID { expression }
    TYPEID          shift and go to state 89


state 60

    (18) formales -> formales , formal .
    )               reduce using rule 18 (formales -> formales , formal .)
    ,               reduce using rule 18 (formales -> formales , formal .)


state 61

    (32) expression -> OBJECTID ( . parametros )
    (33) expression -> OBJECTID ( . )
    (56) parametros -> . parametros , expression
    (57) parametros -> . expression
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    )               shift and go to state 91
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    parametros                     shift and go to state 90
    expression                     shift and go to state 92

state 62

    (50) expression -> OBJECTID ASSIGN . expression
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 93

state 63

    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    OBJECTID        shift and go to state 94


state 64

    (36) expression -> expression @ . TYPEID . OBJECTID ( parametros )
    (37) expression -> expression @ . TYPEID . OBJECTID ( )
    TYPEID          shift and go to state 95


state 65

    (43) expression -> expression = . expression
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 96

state 66

    (44) expression -> expression LE . expression
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 97

state 67

    (45) expression -> expression < . expression
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 98

state 68

    (46) expression -> expression / . expression
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 99

state 69

    (47) expression -> expression * . expression
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 100

state 70

    (48) expression -> expression - . expression
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 101

state 71

    (49) expression -> expression + . expression
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 102

state 72

    (20) expression -> CASE error . OF darrowlist ESAC
    (21) expression -> error . TYPEID
    OF              shift and go to state 103
    TYPEID          shift and go to state 74


state 73

    (23) expression -> CASE expression . OF darrowlist ESAC
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    OF              shift and go to state 104
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 74

    (21) expression -> error TYPEID .
    .               reduce using rule 21 (expression -> error TYPEID .)
    @               reduce using rule 21 (expression -> error TYPEID .)
    =               reduce using rule 21 (expression -> error TYPEID .)
    LE              reduce using rule 21 (expression -> error TYPEID .)
    <               reduce using rule 21 (expression -> error TYPEID .)
    /               reduce using rule 21 (expression -> error TYPEID .)
    *               reduce using rule 21 (expression -> error TYPEID .)
    -               reduce using rule 21 (expression -> error TYPEID .)
    +               reduce using rule 21 (expression -> error TYPEID .)
    ;               reduce using rule 21 (expression -> error TYPEID .)
    OF              reduce using rule 21 (expression -> error TYPEID .)
    LOOP            reduce using rule 21 (expression -> error TYPEID .)
    THEN            reduce using rule 21 (expression -> error TYPEID .)
    )               reduce using rule 21 (expression -> error TYPEID .)
    ,               reduce using rule 21 (expression -> error TYPEID .)
    }               reduce using rule 21 (expression -> error TYPEID .)
    POOL            reduce using rule 21 (expression -> error TYPEID .)
    ELSE            reduce using rule 21 (expression -> error TYPEID .)
    error           reduce using rule 21 (expression -> error TYPEID .)
    IN              reduce using rule 21 (expression -> error TYPEID .)
    FI              reduce using rule 21 (expression -> error TYPEID .)


state 75

    (22) expression -> LET OBJECTID . : TYPEID error IN expression
    (60) let_decl -> OBJECTID . : TYPEID ASSIGN expression
    (61) let_decl -> OBJECTID . : TYPEID
    :               shift and go to state 105


state 76

    (25) expression -> LET let_list . IN expression
    (59) let_list -> let_list . , let_decl
    IN              shift and go to state 106
    ,               shift and go to state 107


state 77

    (58) let_list -> let_decl .
    IN              reduce using rule 58 (let_list -> let_decl .)
    ,               reduce using rule 58 (let_list -> let_decl .)


state 78

    (24) expression -> WHILE expression . LOOP expression POOL
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    LOOP            shift and go to state 108
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 79

    (26) expression -> IF expression . THEN expression ELSE expression FI
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    THEN            shift and go to state 109
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 80

    (27) expression -> { expressions . }
    (51) expressions -> expressions . WHILE expression LOOP expression error ;
    (52) expressions -> expressions . WHILE expression error expression POOL ;
    (54) expressions -> expressions . expression ;
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    }               shift and go to state 110
    WHILE           shift and go to state 111
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 112

state 81

    (55) expressions -> expression . ;
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    ;               shift and go to state 113
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 82

    (53) expressions -> error . ;
    (21) expression -> error . TYPEID
    ;               shift and go to state 114
    TYPEID          shift and go to state 74


state 83

    (42) expression -> ( expression . )
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    )               shift and go to state 115
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 84

    (38) expression -> ~ expression .
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    =               reduce using rule 38 (expression -> ~ expression .)
    LE              reduce using rule 38 (expression -> ~ expression .)
    <               reduce using rule 38 (expression -> ~ expression .)
    /               reduce using rule 38 (expression -> ~ expression .)
    *               reduce using rule 38 (expression -> ~ expression .)
    -               reduce using rule 38 (expression -> ~ expression .)
    +               reduce using rule 38 (expression -> ~ expression .)
    ;               reduce using rule 38 (expression -> ~ expression .)
    OF              reduce using rule 38 (expression -> ~ expression .)
    LOOP            reduce using rule 38 (expression -> ~ expression .)
    THEN            reduce using rule 38 (expression -> ~ expression .)
    )               reduce using rule 38 (expression -> ~ expression .)
    ,               reduce using rule 38 (expression -> ~ expression .)
    }               reduce using rule 38 (expression -> ~ expression .)
    POOL            reduce using rule 38 (expression -> ~ expression .)
    ELSE            reduce using rule 38 (expression -> ~ expression .)
    error           reduce using rule 38 (expression -> ~ expression .)
    IN              reduce using rule 38 (expression -> ~ expression .)
    FI              reduce using rule 38 (expression -> ~ expression .)
    .               shift and go to state 63
    @               shift and go to state 64


state 85

    (39) expression -> NEW TYPEID .
    .               reduce using rule 39 (expression -> NEW TYPEID .)
    @               reduce using rule 39 (expression -> NEW TYPEID .)
    =               reduce using rule 39 (expression -> NEW TYPEID .)
    LE              reduce using rule 39 (expression -> NEW TYPEID .)
    <               reduce using rule 39 (expression -> NEW TYPEID .)
    /               reduce using rule 39 (expression -> NEW TYPEID .)
    *               reduce using rule 39 (expression -> NEW TYPEID .)
    -               reduce using rule 39 (expression -> NEW TYPEID .)
    +               reduce using rule 39 (expression -> NEW TYPEID .)
    ;               reduce using rule 39 (expression -> NEW TYPEID .)
    OF              reduce using rule 39 (expression -> NEW TYPEID .)
    LOOP            reduce using rule 39 (expression -> NEW TYPEID .)
    THEN            reduce using rule 39 (expression -> NEW TYPEID .)
    )               reduce using rule 39 (expression -> NEW TYPEID .)
    ,               reduce using rule 39 (expression -> NEW TYPEID .)
    }               reduce using rule 39 (expression -> NEW TYPEID .)
    POOL            reduce using rule 39 (expression -> NEW TYPEID .)
    ELSE            reduce using rule 39 (expression -> NEW TYPEID .)
    error           reduce using rule 39 (expression -> NEW TYPEID .)
    IN              reduce using rule 39 (expression -> NEW TYPEID .)
    FI              reduce using rule 39 (expression -> NEW TYPEID .)


state 86

    (40) expression -> ISVOID expression .
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    =               reduce using rule 40 (expression -> ISVOID expression .)
    LE              reduce using rule 40 (expression -> ISVOID expression .)
    <               reduce using rule 40 (expression -> ISVOID expression .)
    /               reduce using rule 40 (expression -> ISVOID expression .)
    *               reduce using rule 40 (expression -> ISVOID expression .)
    -               reduce using rule 40 (expression -> ISVOID expression .)
    +               reduce using rule 40 (expression -> ISVOID expression .)
    ;               reduce using rule 40 (expression -> ISVOID expression .)
    OF              reduce using rule 40 (expression -> ISVOID expression .)
    LOOP            reduce using rule 40 (expression -> ISVOID expression .)
    THEN            reduce using rule 40 (expression -> ISVOID expression .)
    )               reduce using rule 40 (expression -> ISVOID expression .)
    ,               reduce using rule 40 (expression -> ISVOID expression .)
    }               reduce using rule 40 (expression -> ISVOID expression .)
    POOL            reduce using rule 40 (expression -> ISVOID expression .)
    ELSE            reduce using rule 40 (expression -> ISVOID expression .)
    error           reduce using rule 40 (expression -> ISVOID expression .)
    IN              reduce using rule 40 (expression -> ISVOID expression .)
    FI              reduce using rule 40 (expression -> ISVOID expression .)
    .               shift and go to state 63
    @               shift and go to state 64


state 87

    (41) expression -> NOT expression .
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    ;               reduce using rule 41 (expression -> NOT expression .)
    OF              reduce using rule 41 (expression -> NOT expression .)
    LOOP            reduce using rule 41 (expression -> NOT expression .)
    THEN            reduce using rule 41 (expression -> NOT expression .)
    )               reduce using rule 41 (expression -> NOT expression .)
    ,               reduce using rule 41 (expression -> NOT expression .)
    }               reduce using rule 41 (expression -> NOT expression .)
    POOL            reduce using rule 41 (expression -> NOT expression .)
    ELSE            reduce using rule 41 (expression -> NOT expression .)
    error           reduce using rule 41 (expression -> NOT expression .)
    IN              reduce using rule 41 (expression -> NOT expression .)
    FI              reduce using rule 41 (expression -> NOT expression .)
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 88

    (11) caracteristica -> OBJECTID ( ) : TYPEID { . error }
    (13) caracteristica -> OBJECTID ( ) : TYPEID { . expression }
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    error           shift and go to state 116
    CASE            shift and go to state 42
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 117

state 89

    (12) caracteristica -> OBJECTID ( formales ) : TYPEID . { expression }
    {               shift and go to state 118


state 90

    (32) expression -> OBJECTID ( parametros . )
    (56) parametros -> parametros . , expression
    )               shift and go to state 119
    ,               shift and go to state 120


state 91

    (33) expression -> OBJECTID ( ) .
    .               reduce using rule 33 (expression -> OBJECTID ( ) .)
    @               reduce using rule 33 (expression -> OBJECTID ( ) .)
    =               reduce using rule 33 (expression -> OBJECTID ( ) .)
    LE              reduce using rule 33 (expression -> OBJECTID ( ) .)
    <               reduce using rule 33 (expression -> OBJECTID ( ) .)
    /               reduce using rule 33 (expression -> OBJECTID ( ) .)
    *               reduce using rule 33 (expression -> OBJECTID ( ) .)
    -               reduce using rule 33 (expression -> OBJECTID ( ) .)
    +               reduce using rule 33 (expression -> OBJECTID ( ) .)
    ;               reduce using rule 33 (expression -> OBJECTID ( ) .)
    OF              reduce using rule 33 (expression -> OBJECTID ( ) .)
    LOOP            reduce using rule 33 (expression -> OBJECTID ( ) .)
    THEN            reduce using rule 33 (expression -> OBJECTID ( ) .)
    )               reduce using rule 33 (expression -> OBJECTID ( ) .)
    ,               reduce using rule 33 (expression -> OBJECTID ( ) .)
    }               reduce using rule 33 (expression -> OBJECTID ( ) .)
    POOL            reduce using rule 33 (expression -> OBJECTID ( ) .)
    ELSE            reduce using rule 33 (expression -> OBJECTID ( ) .)
    error           reduce using rule 33 (expression -> OBJECTID ( ) .)
    IN              reduce using rule 33 (expression -> OBJECTID ( ) .)
    FI              reduce using rule 33 (expression -> OBJECTID ( ) .)


state 92

    (57) parametros -> expression .
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    )               reduce using rule 57 (parametros -> expression .)
    ,               reduce using rule 57 (parametros -> expression .)
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 93

    (50) expression -> OBJECTID ASSIGN expression .
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    ;               reduce using rule 50 (expression -> OBJECTID ASSIGN expression .)
    OF              reduce using rule 50 (expression -> OBJECTID ASSIGN expression .)
    LOOP            reduce using rule 50 (expression -> OBJECTID ASSIGN expression .)
    THEN            reduce using rule 50 (expression -> OBJECTID ASSIGN expression .)
    )               reduce using rule 50 (expression -> OBJECTID ASSIGN expression .)
    ,               reduce using rule 50 (expression -> OBJECTID ASSIGN expression .)
    }               reduce using rule 50 (expression -> OBJECTID ASSIGN expression .)
    POOL            reduce using rule 50 (expression -> OBJECTID ASSIGN expression .)
    ELSE            reduce using rule 50 (expression -> OBJECTID ASSIGN expression .)
    error           reduce using rule 50 (expression -> OBJECTID ASSIGN expression .)
    IN              reduce using rule 50 (expression -> OBJECTID ASSIGN expression .)
    FI              reduce using rule 50 (expression -> OBJECTID ASSIGN expression .)
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 94

    (34) expression -> expression . OBJECTID . ( parametros )
    (35) expression -> expression . OBJECTID . ( )
    (               shift and go to state 121


state 95

    (36) expression -> expression @ TYPEID . . OBJECTID ( parametros )
    (37) expression -> expression @ TYPEID . . OBJECTID ( )
    .               shift and go to state 122


state 96

    (43) expression -> expression = expression .
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    =               reduce using rule 43 (expression -> expression = expression .)
    LE              reduce using rule 43 (expression -> expression = expression .)
    <               reduce using rule 43 (expression -> expression = expression .)
    ;               reduce using rule 43 (expression -> expression = expression .)
    OF              reduce using rule 43 (expression -> expression = expression .)
    LOOP            reduce using rule 43 (expression -> expression = expression .)
    THEN            reduce using rule 43 (expression -> expression = expression .)
    )               reduce using rule 43 (expression -> expression = expression .)
    ,               reduce using rule 43 (expression -> expression = expression .)
    }               reduce using rule 43 (expression -> expression = expression .)
    POOL            reduce using rule 43 (expression -> expression = expression .)
    ELSE            reduce using rule 43 (expression -> expression = expression .)
    error           reduce using rule 43 (expression -> expression = expression .)
    IN              reduce using rule 43 (expression -> expression = expression .)
    FI              reduce using rule 43 (expression -> expression = expression .)
    .               shift and go to state 63
    @               shift and go to state 64
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 97

    (44) expression -> expression LE expression .
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    =               reduce using rule 44 (expression -> expression LE expression .)
    LE              reduce using rule 44 (expression -> expression LE expression .)
    <               reduce using rule 44 (expression -> expression LE expression .)
    ;               reduce using rule 44 (expression -> expression LE expression .)
    OF              reduce using rule 44 (expression -> expression LE expression .)
    LOOP            reduce using rule 44 (expression -> expression LE expression .)
    THEN            reduce using rule 44 (expression -> expression LE expression .)
    )               reduce using rule 44 (expression -> expression LE expression .)
    ,               reduce using rule 44 (expression -> expression LE expression .)
    }               reduce using rule 44 (expression -> expression LE expression .)
    POOL            reduce using rule 44 (expression -> expression LE expression .)
    ELSE            reduce using rule 44 (expression -> expression LE expression .)
    error           reduce using rule 44 (expression -> expression LE expression .)
    IN              reduce using rule 44 (expression -> expression LE expression .)
    FI              reduce using rule 44 (expression -> expression LE expression .)
    .               shift and go to state 63
    @               shift and go to state 64
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 98

    (45) expression -> expression < expression .
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    =               reduce using rule 45 (expression -> expression < expression .)
    LE              reduce using rule 45 (expression -> expression < expression .)
    <               reduce using rule 45 (expression -> expression < expression .)
    ;               reduce using rule 45 (expression -> expression < expression .)
    OF              reduce using rule 45 (expression -> expression < expression .)
    LOOP            reduce using rule 45 (expression -> expression < expression .)
    THEN            reduce using rule 45 (expression -> expression < expression .)
    )               reduce using rule 45 (expression -> expression < expression .)
    ,               reduce using rule 45 (expression -> expression < expression .)
    }               reduce using rule 45 (expression -> expression < expression .)
    POOL            reduce using rule 45 (expression -> expression < expression .)
    ELSE            reduce using rule 45 (expression -> expression < expression .)
    error           reduce using rule 45 (expression -> expression < expression .)
    IN              reduce using rule 45 (expression -> expression < expression .)
    FI              reduce using rule 45 (expression -> expression < expression .)
    .               shift and go to state 63
    @               shift and go to state 64
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 99

    (46) expression -> expression / expression .
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    =               reduce using rule 46 (expression -> expression / expression .)
    LE              reduce using rule 46 (expression -> expression / expression .)
    <               reduce using rule 46 (expression -> expression / expression .)
    /               reduce using rule 46 (expression -> expression / expression .)
    *               reduce using rule 46 (expression -> expression / expression .)
    -               reduce using rule 46 (expression -> expression / expression .)
    +               reduce using rule 46 (expression -> expression / expression .)
    ;               reduce using rule 46 (expression -> expression / expression .)
    OF              reduce using rule 46 (expression -> expression / expression .)
    LOOP            reduce using rule 46 (expression -> expression / expression .)
    THEN            reduce using rule 46 (expression -> expression / expression .)
    )               reduce using rule 46 (expression -> expression / expression .)
    ,               reduce using rule 46 (expression -> expression / expression .)
    }               reduce using rule 46 (expression -> expression / expression .)
    POOL            reduce using rule 46 (expression -> expression / expression .)
    ELSE            reduce using rule 46 (expression -> expression / expression .)
    error           reduce using rule 46 (expression -> expression / expression .)
    IN              reduce using rule 46 (expression -> expression / expression .)
    FI              reduce using rule 46 (expression -> expression / expression .)
    .               shift and go to state 63
    @               shift and go to state 64


state 100

    (47) expression -> expression * expression .
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    =               reduce using rule 47 (expression -> expression * expression .)
    LE              reduce using rule 47 (expression -> expression * expression .)
    <               reduce using rule 47 (expression -> expression * expression .)
    /               reduce using rule 47 (expression -> expression * expression .)
    *               reduce using rule 47 (expression -> expression * expression .)
    -               reduce using rule 47 (expression -> expression * expression .)
    +               reduce using rule 47 (expression -> expression * expression .)
    ;               reduce using rule 47 (expression -> expression * expression .)
    OF              reduce using rule 47 (expression -> expression * expression .)
    LOOP            reduce using rule 47 (expression -> expression * expression .)
    THEN            reduce using rule 47 (expression -> expression * expression .)
    )               reduce using rule 47 (expression -> expression * expression .)
    ,               reduce using rule 47 (expression -> expression * expression .)
    }               reduce using rule 47 (expression -> expression * expression .)
    POOL            reduce using rule 47 (expression -> expression * expression .)
    ELSE            reduce using rule 47 (expression -> expression * expression .)
    error           reduce using rule 47 (expression -> expression * expression .)
    IN              reduce using rule 47 (expression -> expression * expression .)
    FI              reduce using rule 47 (expression -> expression * expression .)
    .               shift and go to state 63
    @               shift and go to state 64


state 101

    (48) expression -> expression - expression .
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    =               reduce using rule 48 (expression -> expression - expression .)
    LE              reduce using rule 48 (expression -> expression - expression .)
    <               reduce using rule 48 (expression -> expression - expression .)
    -               reduce using rule 48 (expression -> expression - expression .)
    +               reduce using rule 48 (expression -> expression - expression .)
    ;               reduce using rule 48 (expression -> expression - expression .)
    OF              reduce using rule 48 (expression -> expression - expression .)
    LOOP            reduce using rule 48 (expression -> expression - expression .)
    THEN            reduce using rule 48 (expression -> expression - expression .)
    )               reduce using rule 48 (expression -> expression - expression .)
    ,               reduce using rule 48 (expression -> expression - expression .)
    }               reduce using rule 48 (expression -> expression - expression .)
    POOL            reduce using rule 48 (expression -> expression - expression .)
    ELSE            reduce using rule 48 (expression -> expression - expression .)
    error           reduce using rule 48 (expression -> expression - expression .)
    IN              reduce using rule 48 (expression -> expression - expression .)
    FI              reduce using rule 48 (expression -> expression - expression .)
    .               shift and go to state 63
    @               shift and go to state 64
    /               shift and go to state 68
    *               shift and go to state 69


state 102

    (49) expression -> expression + expression .
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    =               reduce using rule 49 (expression -> expression + expression .)
    LE              reduce using rule 49 (expression -> expression + expression .)
    <               reduce using rule 49 (expression -> expression + expression .)
    -               reduce using rule 49 (expression -> expression + expression .)
    +               reduce using rule 49 (expression -> expression + expression .)
    ;               reduce using rule 49 (expression -> expression + expression .)
    OF              reduce using rule 49 (expression -> expression + expression .)
    LOOP            reduce using rule 49 (expression -> expression + expression .)
    THEN            reduce using rule 49 (expression -> expression + expression .)
    )               reduce using rule 49 (expression -> expression + expression .)
    ,               reduce using rule 49 (expression -> expression + expression .)
    }               reduce using rule 49 (expression -> expression + expression .)
    POOL            reduce using rule 49 (expression -> expression + expression .)
    ELSE            reduce using rule 49 (expression -> expression + expression .)
    error           reduce using rule 49 (expression -> expression + expression .)
    IN              reduce using rule 49 (expression -> expression + expression .)
    FI              reduce using rule 49 (expression -> expression + expression .)
    .               shift and go to state 63
    @               shift and go to state 64
    /               shift and go to state 68
    *               shift and go to state 69


state 103

    (20) expression -> CASE error OF . darrowlist ESAC
    (62) darrowlist -> . darrowlist OBJECTID : TYPEID DARROW expression ;
    (63) darrowlist -> . OBJECTID : TYPEID DARROW expression ;
    OBJECTID        shift and go to state 124

    darrowlist                     shift and go to state 123

state 104

    (23) expression -> CASE expression OF . darrowlist ESAC
    (62) darrowlist -> . darrowlist OBJECTID : TYPEID DARROW expression ;
    (63) darrowlist -> . OBJECTID : TYPEID DARROW expression ;
    OBJECTID        shift and go to state 124

    darrowlist                     shift and go to state 125

state 105

    (22) expression -> LET OBJECTID : . TYPEID error IN expression
    (60) let_decl -> OBJECTID : . TYPEID ASSIGN expression
    (61) let_decl -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 126


state 106

    (25) expression -> LET let_list IN . expression
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 127

state 107

    (59) let_list -> let_list , . let_decl
    (60) let_decl -> . OBJECTID : TYPEID ASSIGN expression
    (61) let_decl -> . OBJECTID : TYPEID
    OBJECTID        shift and go to state 129

    let_decl                       shift and go to state 128

state 108

    (24) expression -> WHILE expression LOOP . expression POOL
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 130

state 109

    (26) expression -> IF expression THEN . expression ELSE expression FI
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 131

state 110

    (27) expression -> { expressions } .
    .               reduce using rule 27 (expression -> { expressions } .)
    @               reduce using rule 27 (expression -> { expressions } .)
    =               reduce using rule 27 (expression -> { expressions } .)
    LE              reduce using rule 27 (expression -> { expressions } .)
    <               reduce using rule 27 (expression -> { expressions } .)
    /               reduce using rule 27 (expression -> { expressions } .)
    *               reduce using rule 27 (expression -> { expressions } .)
    -               reduce using rule 27 (expression -> { expressions } .)
    +               reduce using rule 27 (expression -> { expressions } .)
    ;               reduce using rule 27 (expression -> { expressions } .)
    OF              reduce using rule 27 (expression -> { expressions } .)
    LOOP            reduce using rule 27 (expression -> { expressions } .)
    THEN            reduce using rule 27 (expression -> { expressions } .)
    )               reduce using rule 27 (expression -> { expressions } .)
    ,               reduce using rule 27 (expression -> { expressions } .)
    }               reduce using rule 27 (expression -> { expressions } .)
    POOL            reduce using rule 27 (expression -> { expressions } .)
    ELSE            reduce using rule 27 (expression -> { expressions } .)
    error           reduce using rule 27 (expression -> { expressions } .)
    IN              reduce using rule 27 (expression -> { expressions } .)
    FI              reduce using rule 27 (expression -> { expressions } .)


state 111

    (51) expressions -> expressions WHILE . expression LOOP expression error ;
    (52) expressions -> expressions WHILE . expression error expression POOL ;
    (24) expression -> WHILE . expression LOOP expression POOL
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 132

state 112

    (54) expressions -> expressions expression . ;
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    ;               shift and go to state 133
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 113

    (55) expressions -> expression ; .
    }               reduce using rule 55 (expressions -> expression ; .)
    WHILE           reduce using rule 55 (expressions -> expression ; .)
    CASE            reduce using rule 55 (expressions -> expression ; .)
    error           reduce using rule 55 (expressions -> expression ; .)
    LET             reduce using rule 55 (expressions -> expression ; .)
    IF              reduce using rule 55 (expressions -> expression ; .)
    {               reduce using rule 55 (expressions -> expression ; .)
    BOOL_CONST      reduce using rule 55 (expressions -> expression ; .)
    STR_CONST       reduce using rule 55 (expressions -> expression ; .)
    INT_CONST       reduce using rule 55 (expressions -> expression ; .)
    OBJECTID        reduce using rule 55 (expressions -> expression ; .)
    ~               reduce using rule 55 (expressions -> expression ; .)
    NEW             reduce using rule 55 (expressions -> expression ; .)
    ISVOID          reduce using rule 55 (expressions -> expression ; .)
    NOT             reduce using rule 55 (expressions -> expression ; .)
    (               reduce using rule 55 (expressions -> expression ; .)


state 114

    (53) expressions -> error ; .
    }               reduce using rule 53 (expressions -> error ; .)
    WHILE           reduce using rule 53 (expressions -> error ; .)
    CASE            reduce using rule 53 (expressions -> error ; .)
    error           reduce using rule 53 (expressions -> error ; .)
    LET             reduce using rule 53 (expressions -> error ; .)
    IF              reduce using rule 53 (expressions -> error ; .)
    {               reduce using rule 53 (expressions -> error ; .)
    BOOL_CONST      reduce using rule 53 (expressions -> error ; .)
    STR_CONST       reduce using rule 53 (expressions -> error ; .)
    INT_CONST       reduce using rule 53 (expressions -> error ; .)
    OBJECTID        reduce using rule 53 (expressions -> error ; .)
    ~               reduce using rule 53 (expressions -> error ; .)
    NEW             reduce using rule 53 (expressions -> error ; .)
    ISVOID          reduce using rule 53 (expressions -> error ; .)
    NOT             reduce using rule 53 (expressions -> error ; .)
    (               reduce using rule 53 (expressions -> error ; .)


state 115

    (42) expression -> ( expression ) .
    .               reduce using rule 42 (expression -> ( expression ) .)
    @               reduce using rule 42 (expression -> ( expression ) .)
    =               reduce using rule 42 (expression -> ( expression ) .)
    LE              reduce using rule 42 (expression -> ( expression ) .)
    <               reduce using rule 42 (expression -> ( expression ) .)
    /               reduce using rule 42 (expression -> ( expression ) .)
    *               reduce using rule 42 (expression -> ( expression ) .)
    -               reduce using rule 42 (expression -> ( expression ) .)
    +               reduce using rule 42 (expression -> ( expression ) .)
    ;               reduce using rule 42 (expression -> ( expression ) .)
    OF              reduce using rule 42 (expression -> ( expression ) .)
    LOOP            reduce using rule 42 (expression -> ( expression ) .)
    THEN            reduce using rule 42 (expression -> ( expression ) .)
    )               reduce using rule 42 (expression -> ( expression ) .)
    ,               reduce using rule 42 (expression -> ( expression ) .)
    }               reduce using rule 42 (expression -> ( expression ) .)
    POOL            reduce using rule 42 (expression -> ( expression ) .)
    ELSE            reduce using rule 42 (expression -> ( expression ) .)
    error           reduce using rule 42 (expression -> ( expression ) .)
    IN              reduce using rule 42 (expression -> ( expression ) .)
    FI              reduce using rule 42 (expression -> ( expression ) .)


state 116

    (11) caracteristica -> OBJECTID ( ) : TYPEID { error . }
    (21) expression -> error . TYPEID
    }               shift and go to state 134
    TYPEID          shift and go to state 74


state 117

    (13) caracteristica -> OBJECTID ( ) : TYPEID { expression . }
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    }               shift and go to state 135
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 118

    (12) caracteristica -> OBJECTID ( formales ) : TYPEID { . expression }
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 136

state 119

    (32) expression -> OBJECTID ( parametros ) .
    .               reduce using rule 32 (expression -> OBJECTID ( parametros ) .)
    @               reduce using rule 32 (expression -> OBJECTID ( parametros ) .)
    =               reduce using rule 32 (expression -> OBJECTID ( parametros ) .)
    LE              reduce using rule 32 (expression -> OBJECTID ( parametros ) .)
    <               reduce using rule 32 (expression -> OBJECTID ( parametros ) .)
    /               reduce using rule 32 (expression -> OBJECTID ( parametros ) .)
    *               reduce using rule 32 (expression -> OBJECTID ( parametros ) .)
    -               reduce using rule 32 (expression -> OBJECTID ( parametros ) .)
    +               reduce using rule 32 (expression -> OBJECTID ( parametros ) .)
    ;               reduce using rule 32 (expression -> OBJECTID ( parametros ) .)
    OF              reduce using rule 32 (expression -> OBJECTID ( parametros ) .)
    LOOP            reduce using rule 32 (expression -> OBJECTID ( parametros ) .)
    THEN            reduce using rule 32 (expression -> OBJECTID ( parametros ) .)
    )               reduce using rule 32 (expression -> OBJECTID ( parametros ) .)
    ,               reduce using rule 32 (expression -> OBJECTID ( parametros ) .)
    }               reduce using rule 32 (expression -> OBJECTID ( parametros ) .)
    POOL            reduce using rule 32 (expression -> OBJECTID ( parametros ) .)
    ELSE            reduce using rule 32 (expression -> OBJECTID ( parametros ) .)
    error           reduce using rule 32 (expression -> OBJECTID ( parametros ) .)
    IN              reduce using rule 32 (expression -> OBJECTID ( parametros ) .)
    FI              reduce using rule 32 (expression -> OBJECTID ( parametros ) .)


state 120

    (56) parametros -> parametros , . expression
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 137

state 121

    (34) expression -> expression . OBJECTID ( . parametros )
    (35) expression -> expression . OBJECTID ( . )
    (56) parametros -> . parametros , expression
    (57) parametros -> . expression
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    )               shift and go to state 139
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 92
    parametros                     shift and go to state 138

state 122

    (36) expression -> expression @ TYPEID . . OBJECTID ( parametros )
    (37) expression -> expression @ TYPEID . . OBJECTID ( )
    OBJECTID        shift and go to state 140


state 123

    (20) expression -> CASE error OF darrowlist . ESAC
    (62) darrowlist -> darrowlist . OBJECTID : TYPEID DARROW expression ;
    ESAC            shift and go to state 141
    OBJECTID        shift and go to state 142


state 124

    (63) darrowlist -> OBJECTID . : TYPEID DARROW expression ;
    :               shift and go to state 143


state 125

    (23) expression -> CASE expression OF darrowlist . ESAC
    (62) darrowlist -> darrowlist . OBJECTID : TYPEID DARROW expression ;
    ESAC            shift and go to state 144
    OBJECTID        shift and go to state 142


state 126

    (22) expression -> LET OBJECTID : TYPEID . error IN expression
    (60) let_decl -> OBJECTID : TYPEID . ASSIGN expression
    (61) let_decl -> OBJECTID : TYPEID .
    error           shift and go to state 145
    ASSIGN          shift and go to state 146
    IN              reduce using rule 61 (let_decl -> OBJECTID : TYPEID .)
    ,               reduce using rule 61 (let_decl -> OBJECTID : TYPEID .)


state 127

    (25) expression -> LET let_list IN expression .
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    =               reduce using rule 25 (expression -> LET let_list IN expression .)
    LE              reduce using rule 25 (expression -> LET let_list IN expression .)
    <               reduce using rule 25 (expression -> LET let_list IN expression .)
    ;               reduce using rule 25 (expression -> LET let_list IN expression .)
    OF              reduce using rule 25 (expression -> LET let_list IN expression .)
    LOOP            reduce using rule 25 (expression -> LET let_list IN expression .)
    THEN            reduce using rule 25 (expression -> LET let_list IN expression .)
    )               reduce using rule 25 (expression -> LET let_list IN expression .)
    ,               reduce using rule 25 (expression -> LET let_list IN expression .)
    }               reduce using rule 25 (expression -> LET let_list IN expression .)
    POOL            reduce using rule 25 (expression -> LET let_list IN expression .)
    ELSE            reduce using rule 25 (expression -> LET let_list IN expression .)
    error           reduce using rule 25 (expression -> LET let_list IN expression .)
    IN              reduce using rule 25 (expression -> LET let_list IN expression .)
    FI              reduce using rule 25 (expression -> LET let_list IN expression .)
    .               shift and go to state 63
    @               shift and go to state 64
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 128

    (59) let_list -> let_list , let_decl .
    IN              reduce using rule 59 (let_list -> let_list , let_decl .)
    ,               reduce using rule 59 (let_list -> let_list , let_decl .)


state 129

    (60) let_decl -> OBJECTID . : TYPEID ASSIGN expression
    (61) let_decl -> OBJECTID . : TYPEID
    :               shift and go to state 147


state 130

    (24) expression -> WHILE expression LOOP expression . POOL
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    POOL            shift and go to state 148
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 131

    (26) expression -> IF expression THEN expression . ELSE expression FI
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    ELSE            shift and go to state 149
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 132

    (51) expressions -> expressions WHILE expression . LOOP expression error ;
    (52) expressions -> expressions WHILE expression . error expression POOL ;
    (24) expression -> WHILE expression . LOOP expression POOL
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    LOOP            shift and go to state 150
    error           shift and go to state 151
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 133

    (54) expressions -> expressions expression ; .
    }               reduce using rule 54 (expressions -> expressions expression ; .)
    WHILE           reduce using rule 54 (expressions -> expressions expression ; .)
    CASE            reduce using rule 54 (expressions -> expressions expression ; .)
    error           reduce using rule 54 (expressions -> expressions expression ; .)
    LET             reduce using rule 54 (expressions -> expressions expression ; .)
    IF              reduce using rule 54 (expressions -> expressions expression ; .)
    {               reduce using rule 54 (expressions -> expressions expression ; .)
    BOOL_CONST      reduce using rule 54 (expressions -> expressions expression ; .)
    STR_CONST       reduce using rule 54 (expressions -> expressions expression ; .)
    INT_CONST       reduce using rule 54 (expressions -> expressions expression ; .)
    OBJECTID        reduce using rule 54 (expressions -> expressions expression ; .)
    ~               reduce using rule 54 (expressions -> expressions expression ; .)
    NEW             reduce using rule 54 (expressions -> expressions expression ; .)
    ISVOID          reduce using rule 54 (expressions -> expressions expression ; .)
    NOT             reduce using rule 54 (expressions -> expressions expression ; .)
    (               reduce using rule 54 (expressions -> expressions expression ; .)


state 134

    (11) caracteristica -> OBJECTID ( ) : TYPEID { error } .
    ;               reduce using rule 11 (caracteristica -> OBJECTID ( ) : TYPEID { error } .)


state 135

    (13) caracteristica -> OBJECTID ( ) : TYPEID { expression } .
    ;               reduce using rule 13 (caracteristica -> OBJECTID ( ) : TYPEID { expression } .)


state 136

    (12) caracteristica -> OBJECTID ( formales ) : TYPEID { expression . }
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    }               shift and go to state 152
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 137

    (56) parametros -> parametros , expression .
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    )               reduce using rule 56 (parametros -> parametros , expression .)
    ,               reduce using rule 56 (parametros -> parametros , expression .)
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 138

    (34) expression -> expression . OBJECTID ( parametros . )
    (56) parametros -> parametros . , expression
    )               shift and go to state 153
    ,               shift and go to state 120


state 139

    (35) expression -> expression . OBJECTID ( ) .
    .               reduce using rule 35 (expression -> expression . OBJECTID ( ) .)
    @               reduce using rule 35 (expression -> expression . OBJECTID ( ) .)
    =               reduce using rule 35 (expression -> expression . OBJECTID ( ) .)
    LE              reduce using rule 35 (expression -> expression . OBJECTID ( ) .)
    <               reduce using rule 35 (expression -> expression . OBJECTID ( ) .)
    /               reduce using rule 35 (expression -> expression . OBJECTID ( ) .)
    *               reduce using rule 35 (expression -> expression . OBJECTID ( ) .)
    -               reduce using rule 35 (expression -> expression . OBJECTID ( ) .)
    +               reduce using rule 35 (expression -> expression . OBJECTID ( ) .)
    ;               reduce using rule 35 (expression -> expression . OBJECTID ( ) .)
    OF              reduce using rule 35 (expression -> expression . OBJECTID ( ) .)
    LOOP            reduce using rule 35 (expression -> expression . OBJECTID ( ) .)
    THEN            reduce using rule 35 (expression -> expression . OBJECTID ( ) .)
    )               reduce using rule 35 (expression -> expression . OBJECTID ( ) .)
    ,               reduce using rule 35 (expression -> expression . OBJECTID ( ) .)
    }               reduce using rule 35 (expression -> expression . OBJECTID ( ) .)
    POOL            reduce using rule 35 (expression -> expression . OBJECTID ( ) .)
    ELSE            reduce using rule 35 (expression -> expression . OBJECTID ( ) .)
    error           reduce using rule 35 (expression -> expression . OBJECTID ( ) .)
    IN              reduce using rule 35 (expression -> expression . OBJECTID ( ) .)
    FI              reduce using rule 35 (expression -> expression . OBJECTID ( ) .)


state 140

    (36) expression -> expression @ TYPEID . OBJECTID . ( parametros )
    (37) expression -> expression @ TYPEID . OBJECTID . ( )
    (               shift and go to state 154


state 141

    (20) expression -> CASE error OF darrowlist ESAC .
    .               reduce using rule 20 (expression -> CASE error OF darrowlist ESAC .)
    @               reduce using rule 20 (expression -> CASE error OF darrowlist ESAC .)
    =               reduce using rule 20 (expression -> CASE error OF darrowlist ESAC .)
    LE              reduce using rule 20 (expression -> CASE error OF darrowlist ESAC .)
    <               reduce using rule 20 (expression -> CASE error OF darrowlist ESAC .)
    /               reduce using rule 20 (expression -> CASE error OF darrowlist ESAC .)
    *               reduce using rule 20 (expression -> CASE error OF darrowlist ESAC .)
    -               reduce using rule 20 (expression -> CASE error OF darrowlist ESAC .)
    +               reduce using rule 20 (expression -> CASE error OF darrowlist ESAC .)
    ;               reduce using rule 20 (expression -> CASE error OF darrowlist ESAC .)
    OF              reduce using rule 20 (expression -> CASE error OF darrowlist ESAC .)
    LOOP            reduce using rule 20 (expression -> CASE error OF darrowlist ESAC .)
    THEN            reduce using rule 20 (expression -> CASE error OF darrowlist ESAC .)
    )               reduce using rule 20 (expression -> CASE error OF darrowlist ESAC .)
    ,               reduce using rule 20 (expression -> CASE error OF darrowlist ESAC .)
    }               reduce using rule 20 (expression -> CASE error OF darrowlist ESAC .)
    POOL            reduce using rule 20 (expression -> CASE error OF darrowlist ESAC .)
    ELSE            reduce using rule 20 (expression -> CASE error OF darrowlist ESAC .)
    error           reduce using rule 20 (expression -> CASE error OF darrowlist ESAC .)
    IN              reduce using rule 20 (expression -> CASE error OF darrowlist ESAC .)
    FI              reduce using rule 20 (expression -> CASE error OF darrowlist ESAC .)


state 142

    (62) darrowlist -> darrowlist OBJECTID . : TYPEID DARROW expression ;
    :               shift and go to state 155


state 143

    (63) darrowlist -> OBJECTID : . TYPEID DARROW expression ;
    TYPEID          shift and go to state 156


state 144

    (23) expression -> CASE expression OF darrowlist ESAC .
    .               reduce using rule 23 (expression -> CASE expression OF darrowlist ESAC .)
    @               reduce using rule 23 (expression -> CASE expression OF darrowlist ESAC .)
    =               reduce using rule 23 (expression -> CASE expression OF darrowlist ESAC .)
    LE              reduce using rule 23 (expression -> CASE expression OF darrowlist ESAC .)
    <               reduce using rule 23 (expression -> CASE expression OF darrowlist ESAC .)
    /               reduce using rule 23 (expression -> CASE expression OF darrowlist ESAC .)
    *               reduce using rule 23 (expression -> CASE expression OF darrowlist ESAC .)
    -               reduce using rule 23 (expression -> CASE expression OF darrowlist ESAC .)
    +               reduce using rule 23 (expression -> CASE expression OF darrowlist ESAC .)
    ;               reduce using rule 23 (expression -> CASE expression OF darrowlist ESAC .)
    OF              reduce using rule 23 (expression -> CASE expression OF darrowlist ESAC .)
    LOOP            reduce using rule 23 (expression -> CASE expression OF darrowlist ESAC .)
    THEN            reduce using rule 23 (expression -> CASE expression OF darrowlist ESAC .)
    )               reduce using rule 23 (expression -> CASE expression OF darrowlist ESAC .)
    ,               reduce using rule 23 (expression -> CASE expression OF darrowlist ESAC .)
    }               reduce using rule 23 (expression -> CASE expression OF darrowlist ESAC .)
    POOL            reduce using rule 23 (expression -> CASE expression OF darrowlist ESAC .)
    ELSE            reduce using rule 23 (expression -> CASE expression OF darrowlist ESAC .)
    error           reduce using rule 23 (expression -> CASE expression OF darrowlist ESAC .)
    IN              reduce using rule 23 (expression -> CASE expression OF darrowlist ESAC .)
    FI              reduce using rule 23 (expression -> CASE expression OF darrowlist ESAC .)


state 145

    (22) expression -> LET OBJECTID : TYPEID error . IN expression
    IN              shift and go to state 157


state 146

    (60) let_decl -> OBJECTID : TYPEID ASSIGN . expression
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 158

state 147

    (60) let_decl -> OBJECTID : . TYPEID ASSIGN expression
    (61) let_decl -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 159


state 148

    (24) expression -> WHILE expression LOOP expression POOL .
    .               reduce using rule 24 (expression -> WHILE expression LOOP expression POOL .)
    @               reduce using rule 24 (expression -> WHILE expression LOOP expression POOL .)
    =               reduce using rule 24 (expression -> WHILE expression LOOP expression POOL .)
    LE              reduce using rule 24 (expression -> WHILE expression LOOP expression POOL .)
    <               reduce using rule 24 (expression -> WHILE expression LOOP expression POOL .)
    /               reduce using rule 24 (expression -> WHILE expression LOOP expression POOL .)
    *               reduce using rule 24 (expression -> WHILE expression LOOP expression POOL .)
    -               reduce using rule 24 (expression -> WHILE expression LOOP expression POOL .)
    +               reduce using rule 24 (expression -> WHILE expression LOOP expression POOL .)
    ;               reduce using rule 24 (expression -> WHILE expression LOOP expression POOL .)
    OF              reduce using rule 24 (expression -> WHILE expression LOOP expression POOL .)
    LOOP            reduce using rule 24 (expression -> WHILE expression LOOP expression POOL .)
    THEN            reduce using rule 24 (expression -> WHILE expression LOOP expression POOL .)
    )               reduce using rule 24 (expression -> WHILE expression LOOP expression POOL .)
    ,               reduce using rule 24 (expression -> WHILE expression LOOP expression POOL .)
    }               reduce using rule 24 (expression -> WHILE expression LOOP expression POOL .)
    POOL            reduce using rule 24 (expression -> WHILE expression LOOP expression POOL .)
    ELSE            reduce using rule 24 (expression -> WHILE expression LOOP expression POOL .)
    error           reduce using rule 24 (expression -> WHILE expression LOOP expression POOL .)
    IN              reduce using rule 24 (expression -> WHILE expression LOOP expression POOL .)
    FI              reduce using rule 24 (expression -> WHILE expression LOOP expression POOL .)


state 149

    (26) expression -> IF expression THEN expression ELSE . expression FI
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 160

state 150

    (51) expressions -> expressions WHILE expression LOOP . expression error ;
    (24) expression -> WHILE expression LOOP . expression POOL
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 161

state 151

    (52) expressions -> expressions WHILE expression error . expression POOL ;
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 162

state 152

    (12) caracteristica -> OBJECTID ( formales ) : TYPEID { expression } .
    ;               reduce using rule 12 (caracteristica -> OBJECTID ( formales ) : TYPEID { expression } .)


state 153

    (34) expression -> expression . OBJECTID ( parametros ) .
    .               reduce using rule 34 (expression -> expression . OBJECTID ( parametros ) .)
    @               reduce using rule 34 (expression -> expression . OBJECTID ( parametros ) .)
    =               reduce using rule 34 (expression -> expression . OBJECTID ( parametros ) .)
    LE              reduce using rule 34 (expression -> expression . OBJECTID ( parametros ) .)
    <               reduce using rule 34 (expression -> expression . OBJECTID ( parametros ) .)
    /               reduce using rule 34 (expression -> expression . OBJECTID ( parametros ) .)
    *               reduce using rule 34 (expression -> expression . OBJECTID ( parametros ) .)
    -               reduce using rule 34 (expression -> expression . OBJECTID ( parametros ) .)
    +               reduce using rule 34 (expression -> expression . OBJECTID ( parametros ) .)
    ;               reduce using rule 34 (expression -> expression . OBJECTID ( parametros ) .)
    OF              reduce using rule 34 (expression -> expression . OBJECTID ( parametros ) .)
    LOOP            reduce using rule 34 (expression -> expression . OBJECTID ( parametros ) .)
    THEN            reduce using rule 34 (expression -> expression . OBJECTID ( parametros ) .)
    )               reduce using rule 34 (expression -> expression . OBJECTID ( parametros ) .)
    ,               reduce using rule 34 (expression -> expression . OBJECTID ( parametros ) .)
    }               reduce using rule 34 (expression -> expression . OBJECTID ( parametros ) .)
    POOL            reduce using rule 34 (expression -> expression . OBJECTID ( parametros ) .)
    ELSE            reduce using rule 34 (expression -> expression . OBJECTID ( parametros ) .)
    error           reduce using rule 34 (expression -> expression . OBJECTID ( parametros ) .)
    IN              reduce using rule 34 (expression -> expression . OBJECTID ( parametros ) .)
    FI              reduce using rule 34 (expression -> expression . OBJECTID ( parametros ) .)


state 154

    (36) expression -> expression @ TYPEID . OBJECTID ( . parametros )
    (37) expression -> expression @ TYPEID . OBJECTID ( . )
    (56) parametros -> . parametros , expression
    (57) parametros -> . expression
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    )               shift and go to state 164
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 92
    parametros                     shift and go to state 163

state 155

    (62) darrowlist -> darrowlist OBJECTID : . TYPEID DARROW expression ;
    TYPEID          shift and go to state 165


state 156

    (63) darrowlist -> OBJECTID : TYPEID . DARROW expression ;
    DARROW          shift and go to state 166


state 157

    (22) expression -> LET OBJECTID : TYPEID error IN . expression
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 167

state 158

    (60) let_decl -> OBJECTID : TYPEID ASSIGN expression .
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    IN              reduce using rule 60 (let_decl -> OBJECTID : TYPEID ASSIGN expression .)
    ,               reduce using rule 60 (let_decl -> OBJECTID : TYPEID ASSIGN expression .)
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 159

    (60) let_decl -> OBJECTID : TYPEID . ASSIGN expression
    (61) let_decl -> OBJECTID : TYPEID .
    ASSIGN          shift and go to state 146
    IN              reduce using rule 61 (let_decl -> OBJECTID : TYPEID .)
    ,               reduce using rule 61 (let_decl -> OBJECTID : TYPEID .)


state 160

    (26) expression -> IF expression THEN expression ELSE expression . FI
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    FI              shift and go to state 168
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 161

    (51) expressions -> expressions WHILE expression LOOP expression . error ;
    (24) expression -> WHILE expression LOOP expression . POOL
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    error           shift and go to state 169
    POOL            shift and go to state 148
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 162

    (52) expressions -> expressions WHILE expression error expression . POOL ;
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    POOL            shift and go to state 170
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 163

    (36) expression -> expression @ TYPEID . OBJECTID ( parametros . )
    (56) parametros -> parametros . , expression
    )               shift and go to state 171
    ,               shift and go to state 120


state 164

    (37) expression -> expression @ TYPEID . OBJECTID ( ) .
    .               reduce using rule 37 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    @               reduce using rule 37 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    =               reduce using rule 37 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    LE              reduce using rule 37 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    <               reduce using rule 37 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    /               reduce using rule 37 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    *               reduce using rule 37 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    -               reduce using rule 37 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    +               reduce using rule 37 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    ;               reduce using rule 37 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    OF              reduce using rule 37 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    LOOP            reduce using rule 37 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    THEN            reduce using rule 37 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    )               reduce using rule 37 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    ,               reduce using rule 37 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    }               reduce using rule 37 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    POOL            reduce using rule 37 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    ELSE            reduce using rule 37 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    error           reduce using rule 37 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    IN              reduce using rule 37 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    FI              reduce using rule 37 (expression -> expression @ TYPEID . OBJECTID ( ) .)


state 165

    (62) darrowlist -> darrowlist OBJECTID : TYPEID . DARROW expression ;
    DARROW          shift and go to state 172


state 166

    (63) darrowlist -> OBJECTID : TYPEID DARROW . expression ;
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 173

state 167

    (22) expression -> LET OBJECTID : TYPEID error IN expression .
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    =               reduce using rule 22 (expression -> LET OBJECTID : TYPEID error IN expression .)
    LE              reduce using rule 22 (expression -> LET OBJECTID : TYPEID error IN expression .)
    <               reduce using rule 22 (expression -> LET OBJECTID : TYPEID error IN expression .)
    ;               reduce using rule 22 (expression -> LET OBJECTID : TYPEID error IN expression .)
    OF              reduce using rule 22 (expression -> LET OBJECTID : TYPEID error IN expression .)
    LOOP            reduce using rule 22 (expression -> LET OBJECTID : TYPEID error IN expression .)
    THEN            reduce using rule 22 (expression -> LET OBJECTID : TYPEID error IN expression .)
    )               reduce using rule 22 (expression -> LET OBJECTID : TYPEID error IN expression .)
    ,               reduce using rule 22 (expression -> LET OBJECTID : TYPEID error IN expression .)
    }               reduce using rule 22 (expression -> LET OBJECTID : TYPEID error IN expression .)
    POOL            reduce using rule 22 (expression -> LET OBJECTID : TYPEID error IN expression .)
    ELSE            reduce using rule 22 (expression -> LET OBJECTID : TYPEID error IN expression .)
    error           reduce using rule 22 (expression -> LET OBJECTID : TYPEID error IN expression .)
    IN              reduce using rule 22 (expression -> LET OBJECTID : TYPEID error IN expression .)
    FI              reduce using rule 22 (expression -> LET OBJECTID : TYPEID error IN expression .)
    .               shift and go to state 63
    @               shift and go to state 64
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 168

    (26) expression -> IF expression THEN expression ELSE expression FI .
    .               reduce using rule 26 (expression -> IF expression THEN expression ELSE expression FI .)
    @               reduce using rule 26 (expression -> IF expression THEN expression ELSE expression FI .)
    =               reduce using rule 26 (expression -> IF expression THEN expression ELSE expression FI .)
    LE              reduce using rule 26 (expression -> IF expression THEN expression ELSE expression FI .)
    <               reduce using rule 26 (expression -> IF expression THEN expression ELSE expression FI .)
    /               reduce using rule 26 (expression -> IF expression THEN expression ELSE expression FI .)
    *               reduce using rule 26 (expression -> IF expression THEN expression ELSE expression FI .)
    -               reduce using rule 26 (expression -> IF expression THEN expression ELSE expression FI .)
    +               reduce using rule 26 (expression -> IF expression THEN expression ELSE expression FI .)
    ;               reduce using rule 26 (expression -> IF expression THEN expression ELSE expression FI .)
    OF              reduce using rule 26 (expression -> IF expression THEN expression ELSE expression FI .)
    LOOP            reduce using rule 26 (expression -> IF expression THEN expression ELSE expression FI .)
    THEN            reduce using rule 26 (expression -> IF expression THEN expression ELSE expression FI .)
    )               reduce using rule 26 (expression -> IF expression THEN expression ELSE expression FI .)
    ,               reduce using rule 26 (expression -> IF expression THEN expression ELSE expression FI .)
    }               reduce using rule 26 (expression -> IF expression THEN expression ELSE expression FI .)
    POOL            reduce using rule 26 (expression -> IF expression THEN expression ELSE expression FI .)
    ELSE            reduce using rule 26 (expression -> IF expression THEN expression ELSE expression FI .)
    error           reduce using rule 26 (expression -> IF expression THEN expression ELSE expression FI .)
    IN              reduce using rule 26 (expression -> IF expression THEN expression ELSE expression FI .)
    FI              reduce using rule 26 (expression -> IF expression THEN expression ELSE expression FI .)


state 169

    (51) expressions -> expressions WHILE expression LOOP expression error . ;
    ;               shift and go to state 174


state 170

    (52) expressions -> expressions WHILE expression error expression POOL . ;
    ;               shift and go to state 175


state 171

    (36) expression -> expression @ TYPEID . OBJECTID ( parametros ) .
    .               reduce using rule 36 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    @               reduce using rule 36 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    =               reduce using rule 36 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    LE              reduce using rule 36 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    <               reduce using rule 36 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    /               reduce using rule 36 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    *               reduce using rule 36 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    -               reduce using rule 36 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    +               reduce using rule 36 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    ;               reduce using rule 36 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    OF              reduce using rule 36 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    LOOP            reduce using rule 36 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    THEN            reduce using rule 36 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    )               reduce using rule 36 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    ,               reduce using rule 36 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    }               reduce using rule 36 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    POOL            reduce using rule 36 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    ELSE            reduce using rule 36 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    error           reduce using rule 36 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    IN              reduce using rule 36 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)
    FI              reduce using rule 36 (expression -> expression @ TYPEID . OBJECTID ( parametros ) .)


state 172

    (62) darrowlist -> darrowlist OBJECTID : TYPEID DARROW . expression ;
    (20) expression -> . CASE error OF darrowlist ESAC
    (21) expression -> . error TYPEID
    (22) expression -> . LET OBJECTID : TYPEID error IN expression
    (23) expression -> . CASE expression OF darrowlist ESAC
    (24) expression -> . WHILE expression LOOP expression POOL
    (25) expression -> . LET let_list IN expression
    (26) expression -> . IF expression THEN expression ELSE expression FI
    (27) expression -> . { expressions }
    (28) expression -> . BOOL_CONST
    (29) expression -> . STR_CONST
    (30) expression -> . INT_CONST
    (31) expression -> . OBJECTID
    (32) expression -> . OBJECTID ( parametros )
    (33) expression -> . OBJECTID ( )
    (34) expression -> . expression . OBJECTID ( parametros )
    (35) expression -> . expression . OBJECTID ( )
    (36) expression -> . expression @ TYPEID . OBJECTID ( parametros )
    (37) expression -> . expression @ TYPEID . OBJECTID ( )
    (38) expression -> . ~ expression
    (39) expression -> . NEW TYPEID
    (40) expression -> . ISVOID expression
    (41) expression -> . NOT expression
    (42) expression -> . ( expression )
    (43) expression -> . expression = expression
    (44) expression -> . expression LE expression
    (45) expression -> . expression < expression
    (46) expression -> . expression / expression
    (47) expression -> . expression * expression
    (48) expression -> . expression - expression
    (49) expression -> . expression + expression
    (50) expression -> . OBJECTID ASSIGN expression
    CASE            shift and go to state 42
    error           shift and go to state 43
    LET             shift and go to state 44
    WHILE           shift and go to state 45
    IF              shift and go to state 46
    {               shift and go to state 47
    BOOL_CONST      shift and go to state 48
    STR_CONST       shift and go to state 49
    INT_CONST       shift and go to state 50
    OBJECTID        shift and go to state 40
    ~               shift and go to state 52
    NEW             shift and go to state 53
    ISVOID          shift and go to state 54
    NOT             shift and go to state 55
    (               shift and go to state 51

    expression                     shift and go to state 176

state 173

    (63) darrowlist -> OBJECTID : TYPEID DARROW expression . ;
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    ;               shift and go to state 177
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 174

    (51) expressions -> expressions WHILE expression LOOP expression error ; .
    }               reduce using rule 51 (expressions -> expressions WHILE expression LOOP expression error ; .)
    WHILE           reduce using rule 51 (expressions -> expressions WHILE expression LOOP expression error ; .)
    CASE            reduce using rule 51 (expressions -> expressions WHILE expression LOOP expression error ; .)
    error           reduce using rule 51 (expressions -> expressions WHILE expression LOOP expression error ; .)
    LET             reduce using rule 51 (expressions -> expressions WHILE expression LOOP expression error ; .)
    IF              reduce using rule 51 (expressions -> expressions WHILE expression LOOP expression error ; .)
    {               reduce using rule 51 (expressions -> expressions WHILE expression LOOP expression error ; .)
    BOOL_CONST      reduce using rule 51 (expressions -> expressions WHILE expression LOOP expression error ; .)
    STR_CONST       reduce using rule 51 (expressions -> expressions WHILE expression LOOP expression error ; .)
    INT_CONST       reduce using rule 51 (expressions -> expressions WHILE expression LOOP expression error ; .)
    OBJECTID        reduce using rule 51 (expressions -> expressions WHILE expression LOOP expression error ; .)
    ~               reduce using rule 51 (expressions -> expressions WHILE expression LOOP expression error ; .)
    NEW             reduce using rule 51 (expressions -> expressions WHILE expression LOOP expression error ; .)
    ISVOID          reduce using rule 51 (expressions -> expressions WHILE expression LOOP expression error ; .)
    NOT             reduce using rule 51 (expressions -> expressions WHILE expression LOOP expression error ; .)
    (               reduce using rule 51 (expressions -> expressions WHILE expression LOOP expression error ; .)


state 175

    (52) expressions -> expressions WHILE expression error expression POOL ; .
    }               reduce using rule 52 (expressions -> expressions WHILE expression error expression POOL ; .)
    WHILE           reduce using rule 52 (expressions -> expressions WHILE expression error expression POOL ; .)
    CASE            reduce using rule 52 (expressions -> expressions WHILE expression error expression POOL ; .)
    error           reduce using rule 52 (expressions -> expressions WHILE expression error expression POOL ; .)
    LET             reduce using rule 52 (expressions -> expressions WHILE expression error expression POOL ; .)
    IF              reduce using rule 52 (expressions -> expressions WHILE expression error expression POOL ; .)
    {               reduce using rule 52 (expressions -> expressions WHILE expression error expression POOL ; .)
    BOOL_CONST      reduce using rule 52 (expressions -> expressions WHILE expression error expression POOL ; .)
    STR_CONST       reduce using rule 52 (expressions -> expressions WHILE expression error expression POOL ; .)
    INT_CONST       reduce using rule 52 (expressions -> expressions WHILE expression error expression POOL ; .)
    OBJECTID        reduce using rule 52 (expressions -> expressions WHILE expression error expression POOL ; .)
    ~               reduce using rule 52 (expressions -> expressions WHILE expression error expression POOL ; .)
    NEW             reduce using rule 52 (expressions -> expressions WHILE expression error expression POOL ; .)
    ISVOID          reduce using rule 52 (expressions -> expressions WHILE expression error expression POOL ; .)
    NOT             reduce using rule 52 (expressions -> expressions WHILE expression error expression POOL ; .)
    (               reduce using rule 52 (expressions -> expressions WHILE expression error expression POOL ; .)


state 176

    (62) darrowlist -> darrowlist OBJECTID : TYPEID DARROW expression . ;
    (34) expression -> expression . . OBJECTID ( parametros )
    (35) expression -> expression . . OBJECTID ( )
    (36) expression -> expression . @ TYPEID . OBJECTID ( parametros )
    (37) expression -> expression . @ TYPEID . OBJECTID ( )
    (43) expression -> expression . = expression
    (44) expression -> expression . LE expression
    (45) expression -> expression . < expression
    (46) expression -> expression . / expression
    (47) expression -> expression . * expression
    (48) expression -> expression . - expression
    (49) expression -> expression . + expression
    ;               shift and go to state 178
    .               shift and go to state 63
    @               shift and go to state 64
    =               shift and go to state 65
    LE              shift and go to state 66
    <               shift and go to state 67
    /               shift and go to state 68
    *               shift and go to state 69
    -               shift and go to state 70
    +               shift and go to state 71


state 177

    (63) darrowlist -> OBJECTID : TYPEID DARROW expression ; .
    ESAC            reduce using rule 63 (darrowlist -> OBJECTID : TYPEID DARROW expression ; .)
    OBJECTID        reduce using rule 63 (darrowlist -> OBJECTID : TYPEID DARROW expression ; .)


state 178

    (62) darrowlist -> darrowlist OBJECTID : TYPEID DARROW expression ; .
    ESAC            reduce using rule 62 (darrowlist -> darrowlist OBJECTID : TYPEID DARROW expression ; .)
    OBJECTID        reduce using rule 62 (darrowlist -> darrowlist OBJECTID : TYPEID DARROW expression ; .)
