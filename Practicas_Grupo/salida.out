Grammar:

Rule 0     S' -> programa
Rule 1     programa -> clases
Rule 2     clases -> clases clase ;
Rule 3     clases -> clase ;
Rule 4     clase -> CLASS TYPEID INHERITS TYPEID { componentes }
Rule 5     clase -> CLASS TYPEID { componentes }
Rule 6     clase -> CLASS TYPEID INHERITS TYPEID { }
Rule 7     clase -> CLASS TYPEID { }
Rule 8     componentes -> componentes componente ;
Rule 9     componentes -> componente ;
Rule 10    componente -> OBJECTID : TYPEID ASSIGN expresion  [precedence=right, level=1]
Rule 11    componente -> OBJECTID : TYPEID
Rule 12    componente -> OBJECTID ( error ) : TYPEID { expresion }
Rule 13    componente -> OBJECTID ( formales ) : TYPEID { error }
Rule 14    componente -> OBJECTID ( formales ) : TYPEID { expresion }
Rule 15    componente -> OBJECTID ( ) : TYPEID { error }
Rule 16    componente -> OBJECTID ( ) : TYPEID { expresion }
Rule 17    formales -> formales , formal
Rule 18    formales -> formal
Rule 19    formal -> OBJECTID : TYPEID
Rule 20    expresion -> BOOL_CONST
Rule 21    expresion -> STR_CONST
Rule 22    expresion -> INT_CONST
Rule 23    expresion -> OBJECTID
Rule 24    expresion -> ( expresion )
Rule 25    expresion -> NOT expresion  [precedence=left, level=2]
Rule 26    expresion -> expresion = expresion  [precedence=nonassoc, level=3]
Rule 27    expresion -> expresion LE expresion  [precedence=nonassoc, level=3]
Rule 28    expresion -> expresion < expresion  [precedence=nonassoc, level=3]
Rule 29    expresion -> ~ expresion  [precedence=left, level=7]
Rule 30    expresion -> expresion / expresion  [precedence=left, level=5]
Rule 31    expresion -> expresion * expresion  [precedence=left, level=5]
Rule 32    expresion -> expresion - expresion  [precedence=left, level=4]
Rule 33    expresion -> expresion + expresion  [precedence=left, level=4]
Rule 34    expresion -> ISVOID error
Rule 35    expresion -> ISVOID expresion  [precedence=left, level=6]
Rule 36    expresion -> error TYPEID
Rule 37    expresion -> NEW TYPEID
Rule 38    expresion -> CASE expresion OF ramas ESAC
Rule 39    expresion -> LET declslet IN expresion
Rule 40    expresion -> { expresiones }
Rule 41    expresion -> WHILE expresion LOOP expresion POOL
Rule 42    expresion -> WHILE expresion LOOP error LOOP
Rule 43    expresion -> IF expresion THEN expresion ELSE expresion FI
Rule 44    expresion -> OBJECTID ( params )
Rule 45    expresion -> OBJECTID ( )
Rule 46    expresion -> expresion @ TYPEID . OBJECTID ( params )
Rule 47    expresion -> expresion . OBJECTID ( params )
Rule 48    expresion -> expresion @ TYPEID . OBJECTID ( )
Rule 49    expresion -> expresion . OBJECTID ( )
Rule 50    expresion -> OBJECTID ASSIGN expresion  [precedence=right, level=1]
Rule 51    params -> params , expresion
Rule 52    params -> expresion
Rule 53    expresiones -> error ;
Rule 54    expresiones -> expresiones expresion ;
Rule 55    expresiones -> expresion ;
Rule 56    decllet -> OBJECTID : TYPEID
Rule 57    decllet -> OBJECTID : TYPEID ASSIGN expresion  [precedence=right, level=1]
Rule 58    declslet -> decllet
Rule 59    declslet -> declslet , decllet
Rule 60    ramas -> ramas rama ;
Rule 61    ramas -> rama ;
Rule 62    rama -> OBJECTID : TYPEID DARROW expresion

Terminals, with rules where they appear:

(                    : 12 13 14 15 16 24 44 45 46 47 48 49
)                    : 12 13 14 15 16 24 44 45 46 47 48 49
*                    : 31
+                    : 33
,                    : 17 51 59
-                    : 32
.                    : 46 47 48 49
/                    : 30
:                    : 10 11 12 13 14 15 16 19 56 57 62
;                    : 2 3 8 9 53 54 55 60 61
<                    : 28
=                    : 26
@                    : 46 48
ASSIGN               : 10 50 57
BOOL_CONST           : 20
CASE                 : 38
CLASS                : 4 5 6 7
DARROW               : 62
ELSE                 : 43
ESAC                 : 38
FI                   : 43
IF                   : 43
IN                   : 39
INHERITS             : 4 6
INT_CONST            : 22
ISVOID               : 34 35
LE                   : 27
LET                  : 39
LOOP                 : 41 42 42
NEW                  : 37
NOT                  : 25
OBJECTID             : 10 11 12 13 14 15 16 19 23 44 45 46 47 48 49 50 56 57 62
OF                   : 38
POOL                 : 41
STR_CONST            : 21
THEN                 : 43
TYPEID               : 4 4 5 6 6 7 10 11 12 13 14 15 16 19 36 37 46 48 56 57 62
WHILE                : 41 42
error                : 12 13 15 34 36 42 53
{                    : 4 5 6 7 12 13 14 15 16 40
}                    : 4 5 6 7 12 13 14 15 16 40
~                    : 29

Nonterminals, with rules where they appear:

clase                : 2 3
clases               : 1 2
componente           : 8 9
componentes          : 4 5 8
decllet              : 58 59
declslet             : 39 59
expresion            : 10 12 14 16 24 25 26 26 27 27 28 28 29 30 30 31 31 32 32 33 33 35 38 39 41 41 42 43 43 43 46 47 48 49 50 51 52 54 55 57 62
expresiones          : 40 54
formal               : 17 18
formales             : 13 14 17
params               : 44 46 47 51
programa             : 0
rama                 : 60 61
ramas                : 38 60


state 0

    (0) S' -> . programa
    (1) programa -> . clases
    (2) clases -> . clases clase ;
    (3) clases -> . clase ;
    (4) clase -> . CLASS TYPEID INHERITS TYPEID { componentes }
    (5) clase -> . CLASS TYPEID { componentes }
    (6) clase -> . CLASS TYPEID INHERITS TYPEID { }
    (7) clase -> . CLASS TYPEID { }
    CLASS           shift and go to state 4

    programa                       shift and go to state 1
    clases                         shift and go to state 2
    clase                          shift and go to state 3

state 1

    (0) S' -> programa .


state 2

    (1) programa -> clases .
    (2) clases -> clases . clase ;
    (4) clase -> . CLASS TYPEID INHERITS TYPEID { componentes }
    (5) clase -> . CLASS TYPEID { componentes }
    (6) clase -> . CLASS TYPEID INHERITS TYPEID { }
    (7) clase -> . CLASS TYPEID { }
    $end            reduce using rule 1 (programa -> clases .)
    CLASS           shift and go to state 4

    clase                          shift and go to state 5

state 3

    (3) clases -> clase . ;
    ;               shift and go to state 6


state 4

    (4) clase -> CLASS . TYPEID INHERITS TYPEID { componentes }
    (5) clase -> CLASS . TYPEID { componentes }
    (6) clase -> CLASS . TYPEID INHERITS TYPEID { }
    (7) clase -> CLASS . TYPEID { }
    TYPEID          shift and go to state 7


state 5

    (2) clases -> clases clase . ;
    ;               shift and go to state 8


state 6

    (3) clases -> clase ; .
    CLASS           reduce using rule 3 (clases -> clase ; .)
    $end            reduce using rule 3 (clases -> clase ; .)


state 7

    (4) clase -> CLASS TYPEID . INHERITS TYPEID { componentes }
    (5) clase -> CLASS TYPEID . { componentes }
    (6) clase -> CLASS TYPEID . INHERITS TYPEID { }
    (7) clase -> CLASS TYPEID . { }
    INHERITS        shift and go to state 9
    {               shift and go to state 10


state 8

    (2) clases -> clases clase ; .
    CLASS           reduce using rule 2 (clases -> clases clase ; .)
    $end            reduce using rule 2 (clases -> clases clase ; .)


state 9

    (4) clase -> CLASS TYPEID INHERITS . TYPEID { componentes }
    (6) clase -> CLASS TYPEID INHERITS . TYPEID { }
    TYPEID          shift and go to state 11


state 10

    (5) clase -> CLASS TYPEID { . componentes }
    (7) clase -> CLASS TYPEID { . }
    (8) componentes -> . componentes componente ;
    (9) componentes -> . componente ;
    (10) componente -> . OBJECTID : TYPEID ASSIGN expresion
    (11) componente -> . OBJECTID : TYPEID
    (12) componente -> . OBJECTID ( error ) : TYPEID { expresion }
    (13) componente -> . OBJECTID ( formales ) : TYPEID { error }
    (14) componente -> . OBJECTID ( formales ) : TYPEID { expresion }
    (15) componente -> . OBJECTID ( ) : TYPEID { error }
    (16) componente -> . OBJECTID ( ) : TYPEID { expresion }
    }               shift and go to state 13
    OBJECTID        shift and go to state 15

    componentes                    shift and go to state 12
    componente                     shift and go to state 14

state 11

    (4) clase -> CLASS TYPEID INHERITS TYPEID . { componentes }
    (6) clase -> CLASS TYPEID INHERITS TYPEID . { }
    {               shift and go to state 16


state 12

    (5) clase -> CLASS TYPEID { componentes . }
    (8) componentes -> componentes . componente ;
    (10) componente -> . OBJECTID : TYPEID ASSIGN expresion
    (11) componente -> . OBJECTID : TYPEID
    (12) componente -> . OBJECTID ( error ) : TYPEID { expresion }
    (13) componente -> . OBJECTID ( formales ) : TYPEID { error }
    (14) componente -> . OBJECTID ( formales ) : TYPEID { expresion }
    (15) componente -> . OBJECTID ( ) : TYPEID { error }
    (16) componente -> . OBJECTID ( ) : TYPEID { expresion }
    }               shift and go to state 17
    OBJECTID        shift and go to state 15

    componente                     shift and go to state 18

state 13

    (7) clase -> CLASS TYPEID { } .
    ;               reduce using rule 7 (clase -> CLASS TYPEID { } .)


state 14

    (9) componentes -> componente . ;
    ;               shift and go to state 19


state 15

    (10) componente -> OBJECTID . : TYPEID ASSIGN expresion
    (11) componente -> OBJECTID . : TYPEID
    (12) componente -> OBJECTID . ( error ) : TYPEID { expresion }
    (13) componente -> OBJECTID . ( formales ) : TYPEID { error }
    (14) componente -> OBJECTID . ( formales ) : TYPEID { expresion }
    (15) componente -> OBJECTID . ( ) : TYPEID { error }
    (16) componente -> OBJECTID . ( ) : TYPEID { expresion }
    :               shift and go to state 20
    (               shift and go to state 21


state 16

    (4) clase -> CLASS TYPEID INHERITS TYPEID { . componentes }
    (6) clase -> CLASS TYPEID INHERITS TYPEID { . }
    (8) componentes -> . componentes componente ;
    (9) componentes -> . componente ;
    (10) componente -> . OBJECTID : TYPEID ASSIGN expresion
    (11) componente -> . OBJECTID : TYPEID
    (12) componente -> . OBJECTID ( error ) : TYPEID { expresion }
    (13) componente -> . OBJECTID ( formales ) : TYPEID { error }
    (14) componente -> . OBJECTID ( formales ) : TYPEID { expresion }
    (15) componente -> . OBJECTID ( ) : TYPEID { error }
    (16) componente -> . OBJECTID ( ) : TYPEID { expresion }
    }               shift and go to state 23
    OBJECTID        shift and go to state 15

    componentes                    shift and go to state 22
    componente                     shift and go to state 14

state 17

    (5) clase -> CLASS TYPEID { componentes } .
    ;               reduce using rule 5 (clase -> CLASS TYPEID { componentes } .)


state 18

    (8) componentes -> componentes componente . ;
    ;               shift and go to state 24


state 19

    (9) componentes -> componente ; .
    }               reduce using rule 9 (componentes -> componente ; .)
    OBJECTID        reduce using rule 9 (componentes -> componente ; .)


state 20

    (10) componente -> OBJECTID : . TYPEID ASSIGN expresion
    (11) componente -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 25


state 21

    (12) componente -> OBJECTID ( . error ) : TYPEID { expresion }
    (13) componente -> OBJECTID ( . formales ) : TYPEID { error }
    (14) componente -> OBJECTID ( . formales ) : TYPEID { expresion }
    (15) componente -> OBJECTID ( . ) : TYPEID { error }
    (16) componente -> OBJECTID ( . ) : TYPEID { expresion }
    (17) formales -> . formales , formal
    (18) formales -> . formal
    (19) formal -> . OBJECTID : TYPEID
    error           shift and go to state 27
    )               shift and go to state 28
    OBJECTID        shift and go to state 26

    formales                       shift and go to state 29
    formal                         shift and go to state 30

state 22

    (4) clase -> CLASS TYPEID INHERITS TYPEID { componentes . }
    (8) componentes -> componentes . componente ;
    (10) componente -> . OBJECTID : TYPEID ASSIGN expresion
    (11) componente -> . OBJECTID : TYPEID
    (12) componente -> . OBJECTID ( error ) : TYPEID { expresion }
    (13) componente -> . OBJECTID ( formales ) : TYPEID { error }
    (14) componente -> . OBJECTID ( formales ) : TYPEID { expresion }
    (15) componente -> . OBJECTID ( ) : TYPEID { error }
    (16) componente -> . OBJECTID ( ) : TYPEID { expresion }
    }               shift and go to state 31
    OBJECTID        shift and go to state 15

    componente                     shift and go to state 18

state 23

    (6) clase -> CLASS TYPEID INHERITS TYPEID { } .
    ;               reduce using rule 6 (clase -> CLASS TYPEID INHERITS TYPEID { } .)


state 24

    (8) componentes -> componentes componente ; .
    }               reduce using rule 8 (componentes -> componentes componente ; .)
    OBJECTID        reduce using rule 8 (componentes -> componentes componente ; .)


state 25

    (10) componente -> OBJECTID : TYPEID . ASSIGN expresion
    (11) componente -> OBJECTID : TYPEID .
    ASSIGN          shift and go to state 32
    ;               reduce using rule 11 (componente -> OBJECTID : TYPEID .)


state 26

    (19) formal -> OBJECTID . : TYPEID
    :               shift and go to state 33


state 27

    (12) componente -> OBJECTID ( error . ) : TYPEID { expresion }
    )               shift and go to state 34


state 28

    (15) componente -> OBJECTID ( ) . : TYPEID { error }
    (16) componente -> OBJECTID ( ) . : TYPEID { expresion }
    :               shift and go to state 35


state 29

    (13) componente -> OBJECTID ( formales . ) : TYPEID { error }
    (14) componente -> OBJECTID ( formales . ) : TYPEID { expresion }
    (17) formales -> formales . , formal
    )               shift and go to state 36
    ,               shift and go to state 37


state 30

    (18) formales -> formal .
    )               reduce using rule 18 (formales -> formal .)
    ,               reduce using rule 18 (formales -> formal .)


state 31

    (4) clase -> CLASS TYPEID INHERITS TYPEID { componentes } .
    ;               reduce using rule 4 (clase -> CLASS TYPEID INHERITS TYPEID { componentes } .)


state 32

    (10) componente -> OBJECTID : TYPEID ASSIGN . expresion
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . OBJECTID
    (24) expresion -> . ( expresion )
    (25) expresion -> . NOT expresion
    (26) expresion -> . expresion = expresion
    (27) expresion -> . expresion LE expresion
    (28) expresion -> . expresion < expresion
    (29) expresion -> . ~ expresion
    (30) expresion -> . expresion / expresion
    (31) expresion -> . expresion * expresion
    (32) expresion -> . expresion - expresion
    (33) expresion -> . expresion + expresion
    (34) expresion -> . ISVOID error
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . error TYPEID
    (37) expresion -> . NEW TYPEID
    (38) expresion -> . CASE expresion OF ramas ESAC
    (39) expresion -> . LET declslet IN expresion
    (40) expresion -> . { expresiones }
    (41) expresion -> . WHILE expresion LOOP expresion POOL
    (42) expresion -> . WHILE expresion LOOP error LOOP
    (43) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (44) expresion -> . OBJECTID ( params )
    (45) expresion -> . OBJECTID ( )
    (46) expresion -> . expresion @ TYPEID . OBJECTID ( params )
    (47) expresion -> . expresion . OBJECTID ( params )
    (48) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (49) expresion -> . expresion . OBJECTID ( )
    (50) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    error           shift and go to state 47
    NEW             shift and go to state 48
    CASE            shift and go to state 49
    LET             shift and go to state 50
    {               shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53

    expresion                      shift and go to state 39

state 33

    (19) formal -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 54


state 34

    (12) componente -> OBJECTID ( error ) . : TYPEID { expresion }
    :               shift and go to state 55


state 35

    (15) componente -> OBJECTID ( ) : . TYPEID { error }
    (16) componente -> OBJECTID ( ) : . TYPEID { expresion }
    TYPEID          shift and go to state 56


state 36

    (13) componente -> OBJECTID ( formales ) . : TYPEID { error }
    (14) componente -> OBJECTID ( formales ) . : TYPEID { expresion }
    :               shift and go to state 57


state 37

    (17) formales -> formales , . formal
    (19) formal -> . OBJECTID : TYPEID
    OBJECTID        shift and go to state 26

    formal                         shift and go to state 58

state 38

    (23) expresion -> OBJECTID .
    (44) expresion -> OBJECTID . ( params )
    (45) expresion -> OBJECTID . ( )
    (50) expresion -> OBJECTID . ASSIGN expresion
    =               reduce using rule 23 (expresion -> OBJECTID .)
    LE              reduce using rule 23 (expresion -> OBJECTID .)
    <               reduce using rule 23 (expresion -> OBJECTID .)
    /               reduce using rule 23 (expresion -> OBJECTID .)
    *               reduce using rule 23 (expresion -> OBJECTID .)
    -               reduce using rule 23 (expresion -> OBJECTID .)
    +               reduce using rule 23 (expresion -> OBJECTID .)
    @               reduce using rule 23 (expresion -> OBJECTID .)
    .               reduce using rule 23 (expresion -> OBJECTID .)
    ;               reduce using rule 23 (expresion -> OBJECTID .)
    )               reduce using rule 23 (expresion -> OBJECTID .)
    OF              reduce using rule 23 (expresion -> OBJECTID .)
    LOOP            reduce using rule 23 (expresion -> OBJECTID .)
    THEN            reduce using rule 23 (expresion -> OBJECTID .)
    ,               reduce using rule 23 (expresion -> OBJECTID .)
    }               reduce using rule 23 (expresion -> OBJECTID .)
    POOL            reduce using rule 23 (expresion -> OBJECTID .)
    ELSE            reduce using rule 23 (expresion -> OBJECTID .)
    IN              reduce using rule 23 (expresion -> OBJECTID .)
    FI              reduce using rule 23 (expresion -> OBJECTID .)
    (               shift and go to state 59
    ASSIGN          shift and go to state 60


state 39

    (10) componente -> OBJECTID : TYPEID ASSIGN expresion .
    (26) expresion -> expresion . = expresion
    (27) expresion -> expresion . LE expresion
    (28) expresion -> expresion . < expresion
    (30) expresion -> expresion . / expresion
    (31) expresion -> expresion . * expresion
    (32) expresion -> expresion . - expresion
    (33) expresion -> expresion . + expresion
    (46) expresion -> expresion . @ TYPEID . OBJECTID ( params )
    (47) expresion -> expresion . . OBJECTID ( params )
    (48) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (49) expresion -> expresion . . OBJECTID ( )
    ;               reduce using rule 10 (componente -> OBJECTID : TYPEID ASSIGN expresion .)
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69


state 40

    (20) expresion -> BOOL_CONST .
    =               reduce using rule 20 (expresion -> BOOL_CONST .)
    LE              reduce using rule 20 (expresion -> BOOL_CONST .)
    <               reduce using rule 20 (expresion -> BOOL_CONST .)
    /               reduce using rule 20 (expresion -> BOOL_CONST .)
    *               reduce using rule 20 (expresion -> BOOL_CONST .)
    -               reduce using rule 20 (expresion -> BOOL_CONST .)
    +               reduce using rule 20 (expresion -> BOOL_CONST .)
    @               reduce using rule 20 (expresion -> BOOL_CONST .)
    .               reduce using rule 20 (expresion -> BOOL_CONST .)
    ;               reduce using rule 20 (expresion -> BOOL_CONST .)
    )               reduce using rule 20 (expresion -> BOOL_CONST .)
    OF              reduce using rule 20 (expresion -> BOOL_CONST .)
    LOOP            reduce using rule 20 (expresion -> BOOL_CONST .)
    THEN            reduce using rule 20 (expresion -> BOOL_CONST .)
    ,               reduce using rule 20 (expresion -> BOOL_CONST .)
    }               reduce using rule 20 (expresion -> BOOL_CONST .)
    POOL            reduce using rule 20 (expresion -> BOOL_CONST .)
    ELSE            reduce using rule 20 (expresion -> BOOL_CONST .)
    IN              reduce using rule 20 (expresion -> BOOL_CONST .)
    FI              reduce using rule 20 (expresion -> BOOL_CONST .)


state 41

    (21) expresion -> STR_CONST .
    =               reduce using rule 21 (expresion -> STR_CONST .)
    LE              reduce using rule 21 (expresion -> STR_CONST .)
    <               reduce using rule 21 (expresion -> STR_CONST .)
    /               reduce using rule 21 (expresion -> STR_CONST .)
    *               reduce using rule 21 (expresion -> STR_CONST .)
    -               reduce using rule 21 (expresion -> STR_CONST .)
    +               reduce using rule 21 (expresion -> STR_CONST .)
    @               reduce using rule 21 (expresion -> STR_CONST .)
    .               reduce using rule 21 (expresion -> STR_CONST .)
    ;               reduce using rule 21 (expresion -> STR_CONST .)
    )               reduce using rule 21 (expresion -> STR_CONST .)
    OF              reduce using rule 21 (expresion -> STR_CONST .)
    LOOP            reduce using rule 21 (expresion -> STR_CONST .)
    THEN            reduce using rule 21 (expresion -> STR_CONST .)
    ,               reduce using rule 21 (expresion -> STR_CONST .)
    }               reduce using rule 21 (expresion -> STR_CONST .)
    POOL            reduce using rule 21 (expresion -> STR_CONST .)
    ELSE            reduce using rule 21 (expresion -> STR_CONST .)
    IN              reduce using rule 21 (expresion -> STR_CONST .)
    FI              reduce using rule 21 (expresion -> STR_CONST .)


state 42

    (22) expresion -> INT_CONST .
    =               reduce using rule 22 (expresion -> INT_CONST .)
    LE              reduce using rule 22 (expresion -> INT_CONST .)
    <               reduce using rule 22 (expresion -> INT_CONST .)
    /               reduce using rule 22 (expresion -> INT_CONST .)
    *               reduce using rule 22 (expresion -> INT_CONST .)
    -               reduce using rule 22 (expresion -> INT_CONST .)
    +               reduce using rule 22 (expresion -> INT_CONST .)
    @               reduce using rule 22 (expresion -> INT_CONST .)
    .               reduce using rule 22 (expresion -> INT_CONST .)
    ;               reduce using rule 22 (expresion -> INT_CONST .)
    )               reduce using rule 22 (expresion -> INT_CONST .)
    OF              reduce using rule 22 (expresion -> INT_CONST .)
    LOOP            reduce using rule 22 (expresion -> INT_CONST .)
    THEN            reduce using rule 22 (expresion -> INT_CONST .)
    ,               reduce using rule 22 (expresion -> INT_CONST .)
    }               reduce using rule 22 (expresion -> INT_CONST .)
    POOL            reduce using rule 22 (expresion -> INT_CONST .)
    ELSE            reduce using rule 22 (expresion -> INT_CONST .)
    IN              reduce using rule 22 (expresion -> INT_CONST .)
    FI              reduce using rule 22 (expresion -> INT_CONST .)


state 43

    (24) expresion -> ( . expresion )
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . OBJECTID
    (24) expresion -> . ( expresion )
    (25) expresion -> . NOT expresion
    (26) expresion -> . expresion = expresion
    (27) expresion -> . expresion LE expresion
    (28) expresion -> . expresion < expresion
    (29) expresion -> . ~ expresion
    (30) expresion -> . expresion / expresion
    (31) expresion -> . expresion * expresion
    (32) expresion -> . expresion - expresion
    (33) expresion -> . expresion + expresion
    (34) expresion -> . ISVOID error
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . error TYPEID
    (37) expresion -> . NEW TYPEID
    (38) expresion -> . CASE expresion OF ramas ESAC
    (39) expresion -> . LET declslet IN expresion
    (40) expresion -> . { expresiones }
    (41) expresion -> . WHILE expresion LOOP expresion POOL
    (42) expresion -> . WHILE expresion LOOP error LOOP
    (43) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (44) expresion -> . OBJECTID ( params )
    (45) expresion -> . OBJECTID ( )
    (46) expresion -> . expresion @ TYPEID . OBJECTID ( params )
    (47) expresion -> . expresion . OBJECTID ( params )
    (48) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (49) expresion -> . expresion . OBJECTID ( )
    (50) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    error           shift and go to state 47
    NEW             shift and go to state 48
    CASE            shift and go to state 49
    LET             shift and go to state 50
    {               shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53

    expresion                      shift and go to state 70

state 44

    (25) expresion -> NOT . expresion
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . OBJECTID
    (24) expresion -> . ( expresion )
    (25) expresion -> . NOT expresion
    (26) expresion -> . expresion = expresion
    (27) expresion -> . expresion LE expresion
    (28) expresion -> . expresion < expresion
    (29) expresion -> . ~ expresion
    (30) expresion -> . expresion / expresion
    (31) expresion -> . expresion * expresion
    (32) expresion -> . expresion - expresion
    (33) expresion -> . expresion + expresion
    (34) expresion -> . ISVOID error
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . error TYPEID
    (37) expresion -> . NEW TYPEID
    (38) expresion -> . CASE expresion OF ramas ESAC
    (39) expresion -> . LET declslet IN expresion
    (40) expresion -> . { expresiones }
    (41) expresion -> . WHILE expresion LOOP expresion POOL
    (42) expresion -> . WHILE expresion LOOP error LOOP
    (43) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (44) expresion -> . OBJECTID ( params )
    (45) expresion -> . OBJECTID ( )
    (46) expresion -> . expresion @ TYPEID . OBJECTID ( params )
    (47) expresion -> . expresion . OBJECTID ( params )
    (48) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (49) expresion -> . expresion . OBJECTID ( )
    (50) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    error           shift and go to state 47
    NEW             shift and go to state 48
    CASE            shift and go to state 49
    LET             shift and go to state 50
    {               shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53

    expresion                      shift and go to state 71

state 45

    (29) expresion -> ~ . expresion
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . OBJECTID
    (24) expresion -> . ( expresion )
    (25) expresion -> . NOT expresion
    (26) expresion -> . expresion = expresion
    (27) expresion -> . expresion LE expresion
    (28) expresion -> . expresion < expresion
    (29) expresion -> . ~ expresion
    (30) expresion -> . expresion / expresion
    (31) expresion -> . expresion * expresion
    (32) expresion -> . expresion - expresion
    (33) expresion -> . expresion + expresion
    (34) expresion -> . ISVOID error
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . error TYPEID
    (37) expresion -> . NEW TYPEID
    (38) expresion -> . CASE expresion OF ramas ESAC
    (39) expresion -> . LET declslet IN expresion
    (40) expresion -> . { expresiones }
    (41) expresion -> . WHILE expresion LOOP expresion POOL
    (42) expresion -> . WHILE expresion LOOP error LOOP
    (43) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (44) expresion -> . OBJECTID ( params )
    (45) expresion -> . OBJECTID ( )
    (46) expresion -> . expresion @ TYPEID . OBJECTID ( params )
    (47) expresion -> . expresion . OBJECTID ( params )
    (48) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (49) expresion -> . expresion . OBJECTID ( )
    (50) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    error           shift and go to state 47
    NEW             shift and go to state 48
    CASE            shift and go to state 49
    LET             shift and go to state 50
    {               shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53

    expresion                      shift and go to state 72

state 46

    (34) expresion -> ISVOID . error
    (35) expresion -> ISVOID . expresion
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . OBJECTID
    (24) expresion -> . ( expresion )
    (25) expresion -> . NOT expresion
    (26) expresion -> . expresion = expresion
    (27) expresion -> . expresion LE expresion
    (28) expresion -> . expresion < expresion
    (29) expresion -> . ~ expresion
    (30) expresion -> . expresion / expresion
    (31) expresion -> . expresion * expresion
    (32) expresion -> . expresion - expresion
    (33) expresion -> . expresion + expresion
    (34) expresion -> . ISVOID error
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . error TYPEID
    (37) expresion -> . NEW TYPEID
    (38) expresion -> . CASE expresion OF ramas ESAC
    (39) expresion -> . LET declslet IN expresion
    (40) expresion -> . { expresiones }
    (41) expresion -> . WHILE expresion LOOP expresion POOL
    (42) expresion -> . WHILE expresion LOOP error LOOP
    (43) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (44) expresion -> . OBJECTID ( params )
    (45) expresion -> . OBJECTID ( )
    (46) expresion -> . expresion @ TYPEID . OBJECTID ( params )
    (47) expresion -> . expresion . OBJECTID ( params )
    (48) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (49) expresion -> . expresion . OBJECTID ( )
    (50) expresion -> . OBJECTID ASSIGN expresion
    error           shift and go to state 73
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 48
    CASE            shift and go to state 49
    LET             shift and go to state 50
    {               shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53

    expresion                      shift and go to state 74

state 47

    (36) expresion -> error . TYPEID
    TYPEID          shift and go to state 75


state 48

    (37) expresion -> NEW . TYPEID
    TYPEID          shift and go to state 76


state 49

    (38) expresion -> CASE . expresion OF ramas ESAC
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . OBJECTID
    (24) expresion -> . ( expresion )
    (25) expresion -> . NOT expresion
    (26) expresion -> . expresion = expresion
    (27) expresion -> . expresion LE expresion
    (28) expresion -> . expresion < expresion
    (29) expresion -> . ~ expresion
    (30) expresion -> . expresion / expresion
    (31) expresion -> . expresion * expresion
    (32) expresion -> . expresion - expresion
    (33) expresion -> . expresion + expresion
    (34) expresion -> . ISVOID error
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . error TYPEID
    (37) expresion -> . NEW TYPEID
    (38) expresion -> . CASE expresion OF ramas ESAC
    (39) expresion -> . LET declslet IN expresion
    (40) expresion -> . { expresiones }
    (41) expresion -> . WHILE expresion LOOP expresion POOL
    (42) expresion -> . WHILE expresion LOOP error LOOP
    (43) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (44) expresion -> . OBJECTID ( params )
    (45) expresion -> . OBJECTID ( )
    (46) expresion -> . expresion @ TYPEID . OBJECTID ( params )
    (47) expresion -> . expresion . OBJECTID ( params )
    (48) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (49) expresion -> . expresion . OBJECTID ( )
    (50) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    error           shift and go to state 47
    NEW             shift and go to state 48
    CASE            shift and go to state 49
    LET             shift and go to state 50
    {               shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53

    expresion                      shift and go to state 77

state 50

    (39) expresion -> LET . declslet IN expresion
    (58) declslet -> . decllet
    (59) declslet -> . declslet , decllet
    (56) decllet -> . OBJECTID : TYPEID
    (57) decllet -> . OBJECTID : TYPEID ASSIGN expresion
    OBJECTID        shift and go to state 80

    declslet                       shift and go to state 78
    decllet                        shift and go to state 79

state 51

    (40) expresion -> { . expresiones }
    (53) expresiones -> . error ;
    (54) expresiones -> . expresiones expresion ;
    (55) expresiones -> . expresion ;
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . OBJECTID
    (24) expresion -> . ( expresion )
    (25) expresion -> . NOT expresion
    (26) expresion -> . expresion = expresion
    (27) expresion -> . expresion LE expresion
    (28) expresion -> . expresion < expresion
    (29) expresion -> . ~ expresion
    (30) expresion -> . expresion / expresion
    (31) expresion -> . expresion * expresion
    (32) expresion -> . expresion - expresion
    (33) expresion -> . expresion + expresion
    (34) expresion -> . ISVOID error
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . error TYPEID
    (37) expresion -> . NEW TYPEID
    (38) expresion -> . CASE expresion OF ramas ESAC
    (39) expresion -> . LET declslet IN expresion
    (40) expresion -> . { expresiones }
    (41) expresion -> . WHILE expresion LOOP expresion POOL
    (42) expresion -> . WHILE expresion LOOP error LOOP
    (43) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (44) expresion -> . OBJECTID ( params )
    (45) expresion -> . OBJECTID ( )
    (46) expresion -> . expresion @ TYPEID . OBJECTID ( params )
    (47) expresion -> . expresion . OBJECTID ( params )
    (48) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (49) expresion -> . expresion . OBJECTID ( )
    (50) expresion -> . OBJECTID ASSIGN expresion
    error           shift and go to state 82
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 48
    CASE            shift and go to state 49
    LET             shift and go to state 50
    {               shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53

    expresiones                    shift and go to state 81
    expresion                      shift and go to state 83

state 52

    (41) expresion -> WHILE . expresion LOOP expresion POOL
    (42) expresion -> WHILE . expresion LOOP error LOOP
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . OBJECTID
    (24) expresion -> . ( expresion )
    (25) expresion -> . NOT expresion
    (26) expresion -> . expresion = expresion
    (27) expresion -> . expresion LE expresion
    (28) expresion -> . expresion < expresion
    (29) expresion -> . ~ expresion
    (30) expresion -> . expresion / expresion
    (31) expresion -> . expresion * expresion
    (32) expresion -> . expresion - expresion
    (33) expresion -> . expresion + expresion
    (34) expresion -> . ISVOID error
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . error TYPEID
    (37) expresion -> . NEW TYPEID
    (38) expresion -> . CASE expresion OF ramas ESAC
    (39) expresion -> . LET declslet IN expresion
    (40) expresion -> . { expresiones }
    (41) expresion -> . WHILE expresion LOOP expresion POOL
    (42) expresion -> . WHILE expresion LOOP error LOOP
    (43) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (44) expresion -> . OBJECTID ( params )
    (45) expresion -> . OBJECTID ( )
    (46) expresion -> . expresion @ TYPEID . OBJECTID ( params )
    (47) expresion -> . expresion . OBJECTID ( params )
    (48) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (49) expresion -> . expresion . OBJECTID ( )
    (50) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    error           shift and go to state 47
    NEW             shift and go to state 48
    CASE            shift and go to state 49
    LET             shift and go to state 50
    {               shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53

    expresion                      shift and go to state 84

state 53

    (43) expresion -> IF . expresion THEN expresion ELSE expresion FI
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . OBJECTID
    (24) expresion -> . ( expresion )
    (25) expresion -> . NOT expresion
    (26) expresion -> . expresion = expresion
    (27) expresion -> . expresion LE expresion
    (28) expresion -> . expresion < expresion
    (29) expresion -> . ~ expresion
    (30) expresion -> . expresion / expresion
    (31) expresion -> . expresion * expresion
    (32) expresion -> . expresion - expresion
    (33) expresion -> . expresion + expresion
    (34) expresion -> . ISVOID error
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . error TYPEID
    (37) expresion -> . NEW TYPEID
    (38) expresion -> . CASE expresion OF ramas ESAC
    (39) expresion -> . LET declslet IN expresion
    (40) expresion -> . { expresiones }
    (41) expresion -> . WHILE expresion LOOP expresion POOL
    (42) expresion -> . WHILE expresion LOOP error LOOP
    (43) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (44) expresion -> . OBJECTID ( params )
    (45) expresion -> . OBJECTID ( )
    (46) expresion -> . expresion @ TYPEID . OBJECTID ( params )
    (47) expresion -> . expresion . OBJECTID ( params )
    (48) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (49) expresion -> . expresion . OBJECTID ( )
    (50) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    error           shift and go to state 47
    NEW             shift and go to state 48
    CASE            shift and go to state 49
    LET             shift and go to state 50
    {               shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53

    expresion                      shift and go to state 85

state 54

    (19) formal -> OBJECTID : TYPEID .
    )               reduce using rule 19 (formal -> OBJECTID : TYPEID .)
    ,               reduce using rule 19 (formal -> OBJECTID : TYPEID .)


state 55

    (12) componente -> OBJECTID ( error ) : . TYPEID { expresion }
    TYPEID          shift and go to state 86


state 56

    (15) componente -> OBJECTID ( ) : TYPEID . { error }
    (16) componente -> OBJECTID ( ) : TYPEID . { expresion }
    {               shift and go to state 87


state 57

    (13) componente -> OBJECTID ( formales ) : . TYPEID { error }
    (14) componente -> OBJECTID ( formales ) : . TYPEID { expresion }
    TYPEID          shift and go to state 88


state 58

    (17) formales -> formales , formal .
    )               reduce using rule 17 (formales -> formales , formal .)
    ,               reduce using rule 17 (formales -> formales , formal .)


state 59

    (44) expresion -> OBJECTID ( . params )
    (45) expresion -> OBJECTID ( . )
    (51) params -> . params , expresion
    (52) params -> . expresion
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . OBJECTID
    (24) expresion -> . ( expresion )
    (25) expresion -> . NOT expresion
    (26) expresion -> . expresion = expresion
    (27) expresion -> . expresion LE expresion
    (28) expresion -> . expresion < expresion
    (29) expresion -> . ~ expresion
    (30) expresion -> . expresion / expresion
    (31) expresion -> . expresion * expresion
    (32) expresion -> . expresion - expresion
    (33) expresion -> . expresion + expresion
    (34) expresion -> . ISVOID error
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . error TYPEID
    (37) expresion -> . NEW TYPEID
    (38) expresion -> . CASE expresion OF ramas ESAC
    (39) expresion -> . LET declslet IN expresion
    (40) expresion -> . { expresiones }
    (41) expresion -> . WHILE expresion LOOP expresion POOL
    (42) expresion -> . WHILE expresion LOOP error LOOP
    (43) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (44) expresion -> . OBJECTID ( params )
    (45) expresion -> . OBJECTID ( )
    (46) expresion -> . expresion @ TYPEID . OBJECTID ( params )
    (47) expresion -> . expresion . OBJECTID ( params )
    (48) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (49) expresion -> . expresion . OBJECTID ( )
    (50) expresion -> . OBJECTID ASSIGN expresion
    )               shift and go to state 90
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    error           shift and go to state 47
    NEW             shift and go to state 48
    CASE            shift and go to state 49
    LET             shift and go to state 50
    {               shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53

    params                         shift and go to state 89
    expresion                      shift and go to state 91

state 60

    (50) expresion -> OBJECTID ASSIGN . expresion
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . OBJECTID
    (24) expresion -> . ( expresion )
    (25) expresion -> . NOT expresion
    (26) expresion -> . expresion = expresion
    (27) expresion -> . expresion LE expresion
    (28) expresion -> . expresion < expresion
    (29) expresion -> . ~ expresion
    (30) expresion -> . expresion / expresion
    (31) expresion -> . expresion * expresion
    (32) expresion -> . expresion - expresion
    (33) expresion -> . expresion + expresion
    (34) expresion -> . ISVOID error
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . error TYPEID
    (37) expresion -> . NEW TYPEID
    (38) expresion -> . CASE expresion OF ramas ESAC
    (39) expresion -> . LET declslet IN expresion
    (40) expresion -> . { expresiones }
    (41) expresion -> . WHILE expresion LOOP expresion POOL
    (42) expresion -> . WHILE expresion LOOP error LOOP
    (43) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (44) expresion -> . OBJECTID ( params )
    (45) expresion -> . OBJECTID ( )
    (46) expresion -> . expresion @ TYPEID . OBJECTID ( params )
    (47) expresion -> . expresion . OBJECTID ( params )
    (48) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (49) expresion -> . expresion . OBJECTID ( )
    (50) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    error           shift and go to state 47
    NEW             shift and go to state 48
    CASE            shift and go to state 49
    LET             shift and go to state 50
    {               shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53

    expresion                      shift and go to state 92

state 61

    (26) expresion -> expresion = . expresion
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . OBJECTID
    (24) expresion -> . ( expresion )
    (25) expresion -> . NOT expresion
    (26) expresion -> . expresion = expresion
    (27) expresion -> . expresion LE expresion
    (28) expresion -> . expresion < expresion
    (29) expresion -> . ~ expresion
    (30) expresion -> . expresion / expresion
    (31) expresion -> . expresion * expresion
    (32) expresion -> . expresion - expresion
    (33) expresion -> . expresion + expresion
    (34) expresion -> . ISVOID error
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . error TYPEID
    (37) expresion -> . NEW TYPEID
    (38) expresion -> . CASE expresion OF ramas ESAC
    (39) expresion -> . LET declslet IN expresion
    (40) expresion -> . { expresiones }
    (41) expresion -> . WHILE expresion LOOP expresion POOL
    (42) expresion -> . WHILE expresion LOOP error LOOP
    (43) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (44) expresion -> . OBJECTID ( params )
    (45) expresion -> . OBJECTID ( )
    (46) expresion -> . expresion @ TYPEID . OBJECTID ( params )
    (47) expresion -> . expresion . OBJECTID ( params )
    (48) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (49) expresion -> . expresion . OBJECTID ( )
    (50) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    error           shift and go to state 47
    NEW             shift and go to state 48
    CASE            shift and go to state 49
    LET             shift and go to state 50
    {               shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53

    expresion                      shift and go to state 93

state 62

    (27) expresion -> expresion LE . expresion
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . OBJECTID
    (24) expresion -> . ( expresion )
    (25) expresion -> . NOT expresion
    (26) expresion -> . expresion = expresion
    (27) expresion -> . expresion LE expresion
    (28) expresion -> . expresion < expresion
    (29) expresion -> . ~ expresion
    (30) expresion -> . expresion / expresion
    (31) expresion -> . expresion * expresion
    (32) expresion -> . expresion - expresion
    (33) expresion -> . expresion + expresion
    (34) expresion -> . ISVOID error
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . error TYPEID
    (37) expresion -> . NEW TYPEID
    (38) expresion -> . CASE expresion OF ramas ESAC
    (39) expresion -> . LET declslet IN expresion
    (40) expresion -> . { expresiones }
    (41) expresion -> . WHILE expresion LOOP expresion POOL
    (42) expresion -> . WHILE expresion LOOP error LOOP
    (43) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (44) expresion -> . OBJECTID ( params )
    (45) expresion -> . OBJECTID ( )
    (46) expresion -> . expresion @ TYPEID . OBJECTID ( params )
    (47) expresion -> . expresion . OBJECTID ( params )
    (48) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (49) expresion -> . expresion . OBJECTID ( )
    (50) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    error           shift and go to state 47
    NEW             shift and go to state 48
    CASE            shift and go to state 49
    LET             shift and go to state 50
    {               shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53

    expresion                      shift and go to state 94

state 63

    (28) expresion -> expresion < . expresion
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . OBJECTID
    (24) expresion -> . ( expresion )
    (25) expresion -> . NOT expresion
    (26) expresion -> . expresion = expresion
    (27) expresion -> . expresion LE expresion
    (28) expresion -> . expresion < expresion
    (29) expresion -> . ~ expresion
    (30) expresion -> . expresion / expresion
    (31) expresion -> . expresion * expresion
    (32) expresion -> . expresion - expresion
    (33) expresion -> . expresion + expresion
    (34) expresion -> . ISVOID error
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . error TYPEID
    (37) expresion -> . NEW TYPEID
    (38) expresion -> . CASE expresion OF ramas ESAC
    (39) expresion -> . LET declslet IN expresion
    (40) expresion -> . { expresiones }
    (41) expresion -> . WHILE expresion LOOP expresion POOL
    (42) expresion -> . WHILE expresion LOOP error LOOP
    (43) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (44) expresion -> . OBJECTID ( params )
    (45) expresion -> . OBJECTID ( )
    (46) expresion -> . expresion @ TYPEID . OBJECTID ( params )
    (47) expresion -> . expresion . OBJECTID ( params )
    (48) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (49) expresion -> . expresion . OBJECTID ( )
    (50) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    error           shift and go to state 47
    NEW             shift and go to state 48
    CASE            shift and go to state 49
    LET             shift and go to state 50
    {               shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53

    expresion                      shift and go to state 95

state 64

    (30) expresion -> expresion / . expresion
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . OBJECTID
    (24) expresion -> . ( expresion )
    (25) expresion -> . NOT expresion
    (26) expresion -> . expresion = expresion
    (27) expresion -> . expresion LE expresion
    (28) expresion -> . expresion < expresion
    (29) expresion -> . ~ expresion
    (30) expresion -> . expresion / expresion
    (31) expresion -> . expresion * expresion
    (32) expresion -> . expresion - expresion
    (33) expresion -> . expresion + expresion
    (34) expresion -> . ISVOID error
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . error TYPEID
    (37) expresion -> . NEW TYPEID
    (38) expresion -> . CASE expresion OF ramas ESAC
    (39) expresion -> . LET declslet IN expresion
    (40) expresion -> . { expresiones }
    (41) expresion -> . WHILE expresion LOOP expresion POOL
    (42) expresion -> . WHILE expresion LOOP error LOOP
    (43) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (44) expresion -> . OBJECTID ( params )
    (45) expresion -> . OBJECTID ( )
    (46) expresion -> . expresion @ TYPEID . OBJECTID ( params )
    (47) expresion -> . expresion . OBJECTID ( params )
    (48) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (49) expresion -> . expresion . OBJECTID ( )
    (50) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    error           shift and go to state 47
    NEW             shift and go to state 48
    CASE            shift and go to state 49
    LET             shift and go to state 50
    {               shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53

    expresion                      shift and go to state 96

state 65

    (31) expresion -> expresion * . expresion
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . OBJECTID
    (24) expresion -> . ( expresion )
    (25) expresion -> . NOT expresion
    (26) expresion -> . expresion = expresion
    (27) expresion -> . expresion LE expresion
    (28) expresion -> . expresion < expresion
    (29) expresion -> . ~ expresion
    (30) expresion -> . expresion / expresion
    (31) expresion -> . expresion * expresion
    (32) expresion -> . expresion - expresion
    (33) expresion -> . expresion + expresion
    (34) expresion -> . ISVOID error
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . error TYPEID
    (37) expresion -> . NEW TYPEID
    (38) expresion -> . CASE expresion OF ramas ESAC
    (39) expresion -> . LET declslet IN expresion
    (40) expresion -> . { expresiones }
    (41) expresion -> . WHILE expresion LOOP expresion POOL
    (42) expresion -> . WHILE expresion LOOP error LOOP
    (43) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (44) expresion -> . OBJECTID ( params )
    (45) expresion -> . OBJECTID ( )
    (46) expresion -> . expresion @ TYPEID . OBJECTID ( params )
    (47) expresion -> . expresion . OBJECTID ( params )
    (48) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (49) expresion -> . expresion . OBJECTID ( )
    (50) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    error           shift and go to state 47
    NEW             shift and go to state 48
    CASE            shift and go to state 49
    LET             shift and go to state 50
    {               shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53

    expresion                      shift and go to state 97

state 66

    (32) expresion -> expresion - . expresion
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . OBJECTID
    (24) expresion -> . ( expresion )
    (25) expresion -> . NOT expresion
    (26) expresion -> . expresion = expresion
    (27) expresion -> . expresion LE expresion
    (28) expresion -> . expresion < expresion
    (29) expresion -> . ~ expresion
    (30) expresion -> . expresion / expresion
    (31) expresion -> . expresion * expresion
    (32) expresion -> . expresion - expresion
    (33) expresion -> . expresion + expresion
    (34) expresion -> . ISVOID error
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . error TYPEID
    (37) expresion -> . NEW TYPEID
    (38) expresion -> . CASE expresion OF ramas ESAC
    (39) expresion -> . LET declslet IN expresion
    (40) expresion -> . { expresiones }
    (41) expresion -> . WHILE expresion LOOP expresion POOL
    (42) expresion -> . WHILE expresion LOOP error LOOP
    (43) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (44) expresion -> . OBJECTID ( params )
    (45) expresion -> . OBJECTID ( )
    (46) expresion -> . expresion @ TYPEID . OBJECTID ( params )
    (47) expresion -> . expresion . OBJECTID ( params )
    (48) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (49) expresion -> . expresion . OBJECTID ( )
    (50) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    error           shift and go to state 47
    NEW             shift and go to state 48
    CASE            shift and go to state 49
    LET             shift and go to state 50
    {               shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53

    expresion                      shift and go to state 98

state 67

    (33) expresion -> expresion + . expresion
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . OBJECTID
    (24) expresion -> . ( expresion )
    (25) expresion -> . NOT expresion
    (26) expresion -> . expresion = expresion
    (27) expresion -> . expresion LE expresion
    (28) expresion -> . expresion < expresion
    (29) expresion -> . ~ expresion
    (30) expresion -> . expresion / expresion
    (31) expresion -> . expresion * expresion
    (32) expresion -> . expresion - expresion
    (33) expresion -> . expresion + expresion
    (34) expresion -> . ISVOID error
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . error TYPEID
    (37) expresion -> . NEW TYPEID
    (38) expresion -> . CASE expresion OF ramas ESAC
    (39) expresion -> . LET declslet IN expresion
    (40) expresion -> . { expresiones }
    (41) expresion -> . WHILE expresion LOOP expresion POOL
    (42) expresion -> . WHILE expresion LOOP error LOOP
    (43) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (44) expresion -> . OBJECTID ( params )
    (45) expresion -> . OBJECTID ( )
    (46) expresion -> . expresion @ TYPEID . OBJECTID ( params )
    (47) expresion -> . expresion . OBJECTID ( params )
    (48) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (49) expresion -> . expresion . OBJECTID ( )
    (50) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    error           shift and go to state 47
    NEW             shift and go to state 48
    CASE            shift and go to state 49
    LET             shift and go to state 50
    {               shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53

    expresion                      shift and go to state 99

state 68

    (46) expresion -> expresion @ . TYPEID . OBJECTID ( params )
    (48) expresion -> expresion @ . TYPEID . OBJECTID ( )
    TYPEID          shift and go to state 100


state 69

    (47) expresion -> expresion . . OBJECTID ( params )
    (49) expresion -> expresion . . OBJECTID ( )
    OBJECTID        shift and go to state 101


state 70

    (24) expresion -> ( expresion . )
    (26) expresion -> expresion . = expresion
    (27) expresion -> expresion . LE expresion
    (28) expresion -> expresion . < expresion
    (30) expresion -> expresion . / expresion
    (31) expresion -> expresion . * expresion
    (32) expresion -> expresion . - expresion
    (33) expresion -> expresion . + expresion
    (46) expresion -> expresion . @ TYPEID . OBJECTID ( params )
    (47) expresion -> expresion . . OBJECTID ( params )
    (48) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (49) expresion -> expresion . . OBJECTID ( )
    )               shift and go to state 102
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69


state 71

    (25) expresion -> NOT expresion .
    (26) expresion -> expresion . = expresion
    (27) expresion -> expresion . LE expresion
    (28) expresion -> expresion . < expresion
    (30) expresion -> expresion . / expresion
    (31) expresion -> expresion . * expresion
    (32) expresion -> expresion . - expresion
    (33) expresion -> expresion . + expresion
    (46) expresion -> expresion . @ TYPEID . OBJECTID ( params )
    (47) expresion -> expresion . . OBJECTID ( params )
    (48) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (49) expresion -> expresion . . OBJECTID ( )
    ;               reduce using rule 25 (expresion -> NOT expresion .)
    )               reduce using rule 25 (expresion -> NOT expresion .)
    OF              reduce using rule 25 (expresion -> NOT expresion .)
    LOOP            reduce using rule 25 (expresion -> NOT expresion .)
    THEN            reduce using rule 25 (expresion -> NOT expresion .)
    ,               reduce using rule 25 (expresion -> NOT expresion .)
    }               reduce using rule 25 (expresion -> NOT expresion .)
    POOL            reduce using rule 25 (expresion -> NOT expresion .)
    ELSE            reduce using rule 25 (expresion -> NOT expresion .)
    IN              reduce using rule 25 (expresion -> NOT expresion .)
    FI              reduce using rule 25 (expresion -> NOT expresion .)
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69


state 72

    (29) expresion -> ~ expresion .
    (26) expresion -> expresion . = expresion
    (27) expresion -> expresion . LE expresion
    (28) expresion -> expresion . < expresion
    (30) expresion -> expresion . / expresion
    (31) expresion -> expresion . * expresion
    (32) expresion -> expresion . - expresion
    (33) expresion -> expresion . + expresion
    (46) expresion -> expresion . @ TYPEID . OBJECTID ( params )
    (47) expresion -> expresion . . OBJECTID ( params )
    (48) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (49) expresion -> expresion . . OBJECTID ( )
    =               reduce using rule 29 (expresion -> ~ expresion .)
    LE              reduce using rule 29 (expresion -> ~ expresion .)
    <               reduce using rule 29 (expresion -> ~ expresion .)
    /               reduce using rule 29 (expresion -> ~ expresion .)
    *               reduce using rule 29 (expresion -> ~ expresion .)
    -               reduce using rule 29 (expresion -> ~ expresion .)
    +               reduce using rule 29 (expresion -> ~ expresion .)
    ;               reduce using rule 29 (expresion -> ~ expresion .)
    )               reduce using rule 29 (expresion -> ~ expresion .)
    OF              reduce using rule 29 (expresion -> ~ expresion .)
    LOOP            reduce using rule 29 (expresion -> ~ expresion .)
    THEN            reduce using rule 29 (expresion -> ~ expresion .)
    ,               reduce using rule 29 (expresion -> ~ expresion .)
    }               reduce using rule 29 (expresion -> ~ expresion .)
    POOL            reduce using rule 29 (expresion -> ~ expresion .)
    ELSE            reduce using rule 29 (expresion -> ~ expresion .)
    IN              reduce using rule 29 (expresion -> ~ expresion .)
    FI              reduce using rule 29 (expresion -> ~ expresion .)
    @               shift and go to state 68
    .               shift and go to state 69


state 73

    (34) expresion -> ISVOID error .
    (36) expresion -> error . TYPEID
    =               reduce using rule 34 (expresion -> ISVOID error .)
    LE              reduce using rule 34 (expresion -> ISVOID error .)
    <               reduce using rule 34 (expresion -> ISVOID error .)
    /               reduce using rule 34 (expresion -> ISVOID error .)
    *               reduce using rule 34 (expresion -> ISVOID error .)
    -               reduce using rule 34 (expresion -> ISVOID error .)
    +               reduce using rule 34 (expresion -> ISVOID error .)
    @               reduce using rule 34 (expresion -> ISVOID error .)
    .               reduce using rule 34 (expresion -> ISVOID error .)
    ;               reduce using rule 34 (expresion -> ISVOID error .)
    )               reduce using rule 34 (expresion -> ISVOID error .)
    OF              reduce using rule 34 (expresion -> ISVOID error .)
    LOOP            reduce using rule 34 (expresion -> ISVOID error .)
    THEN            reduce using rule 34 (expresion -> ISVOID error .)
    ,               reduce using rule 34 (expresion -> ISVOID error .)
    }               reduce using rule 34 (expresion -> ISVOID error .)
    POOL            reduce using rule 34 (expresion -> ISVOID error .)
    ELSE            reduce using rule 34 (expresion -> ISVOID error .)
    IN              reduce using rule 34 (expresion -> ISVOID error .)
    FI              reduce using rule 34 (expresion -> ISVOID error .)
    TYPEID          shift and go to state 75


state 74

    (35) expresion -> ISVOID expresion .
    (26) expresion -> expresion . = expresion
    (27) expresion -> expresion . LE expresion
    (28) expresion -> expresion . < expresion
    (30) expresion -> expresion . / expresion
    (31) expresion -> expresion . * expresion
    (32) expresion -> expresion . - expresion
    (33) expresion -> expresion . + expresion
    (46) expresion -> expresion . @ TYPEID . OBJECTID ( params )
    (47) expresion -> expresion . . OBJECTID ( params )
    (48) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (49) expresion -> expresion . . OBJECTID ( )
    =               reduce using rule 35 (expresion -> ISVOID expresion .)
    LE              reduce using rule 35 (expresion -> ISVOID expresion .)
    <               reduce using rule 35 (expresion -> ISVOID expresion .)
    /               reduce using rule 35 (expresion -> ISVOID expresion .)
    *               reduce using rule 35 (expresion -> ISVOID expresion .)
    -               reduce using rule 35 (expresion -> ISVOID expresion .)
    +               reduce using rule 35 (expresion -> ISVOID expresion .)
    ;               reduce using rule 35 (expresion -> ISVOID expresion .)
    )               reduce using rule 35 (expresion -> ISVOID expresion .)
    OF              reduce using rule 35 (expresion -> ISVOID expresion .)
    LOOP            reduce using rule 35 (expresion -> ISVOID expresion .)
    THEN            reduce using rule 35 (expresion -> ISVOID expresion .)
    ,               reduce using rule 35 (expresion -> ISVOID expresion .)
    }               reduce using rule 35 (expresion -> ISVOID expresion .)
    POOL            reduce using rule 35 (expresion -> ISVOID expresion .)
    ELSE            reduce using rule 35 (expresion -> ISVOID expresion .)
    IN              reduce using rule 35 (expresion -> ISVOID expresion .)
    FI              reduce using rule 35 (expresion -> ISVOID expresion .)
    @               shift and go to state 68
    .               shift and go to state 69


state 75

    (36) expresion -> error TYPEID .
    =               reduce using rule 36 (expresion -> error TYPEID .)
    LE              reduce using rule 36 (expresion -> error TYPEID .)
    <               reduce using rule 36 (expresion -> error TYPEID .)
    /               reduce using rule 36 (expresion -> error TYPEID .)
    *               reduce using rule 36 (expresion -> error TYPEID .)
    -               reduce using rule 36 (expresion -> error TYPEID .)
    +               reduce using rule 36 (expresion -> error TYPEID .)
    @               reduce using rule 36 (expresion -> error TYPEID .)
    .               reduce using rule 36 (expresion -> error TYPEID .)
    ;               reduce using rule 36 (expresion -> error TYPEID .)
    )               reduce using rule 36 (expresion -> error TYPEID .)
    OF              reduce using rule 36 (expresion -> error TYPEID .)
    LOOP            reduce using rule 36 (expresion -> error TYPEID .)
    THEN            reduce using rule 36 (expresion -> error TYPEID .)
    ,               reduce using rule 36 (expresion -> error TYPEID .)
    }               reduce using rule 36 (expresion -> error TYPEID .)
    POOL            reduce using rule 36 (expresion -> error TYPEID .)
    ELSE            reduce using rule 36 (expresion -> error TYPEID .)
    IN              reduce using rule 36 (expresion -> error TYPEID .)
    FI              reduce using rule 36 (expresion -> error TYPEID .)


state 76

    (37) expresion -> NEW TYPEID .
    =               reduce using rule 37 (expresion -> NEW TYPEID .)
    LE              reduce using rule 37 (expresion -> NEW TYPEID .)
    <               reduce using rule 37 (expresion -> NEW TYPEID .)
    /               reduce using rule 37 (expresion -> NEW TYPEID .)
    *               reduce using rule 37 (expresion -> NEW TYPEID .)
    -               reduce using rule 37 (expresion -> NEW TYPEID .)
    +               reduce using rule 37 (expresion -> NEW TYPEID .)
    @               reduce using rule 37 (expresion -> NEW TYPEID .)
    .               reduce using rule 37 (expresion -> NEW TYPEID .)
    ;               reduce using rule 37 (expresion -> NEW TYPEID .)
    )               reduce using rule 37 (expresion -> NEW TYPEID .)
    OF              reduce using rule 37 (expresion -> NEW TYPEID .)
    LOOP            reduce using rule 37 (expresion -> NEW TYPEID .)
    THEN            reduce using rule 37 (expresion -> NEW TYPEID .)
    ,               reduce using rule 37 (expresion -> NEW TYPEID .)
    }               reduce using rule 37 (expresion -> NEW TYPEID .)
    POOL            reduce using rule 37 (expresion -> NEW TYPEID .)
    ELSE            reduce using rule 37 (expresion -> NEW TYPEID .)
    IN              reduce using rule 37 (expresion -> NEW TYPEID .)
    FI              reduce using rule 37 (expresion -> NEW TYPEID .)


state 77

    (38) expresion -> CASE expresion . OF ramas ESAC
    (26) expresion -> expresion . = expresion
    (27) expresion -> expresion . LE expresion
    (28) expresion -> expresion . < expresion
    (30) expresion -> expresion . / expresion
    (31) expresion -> expresion . * expresion
    (32) expresion -> expresion . - expresion
    (33) expresion -> expresion . + expresion
    (46) expresion -> expresion . @ TYPEID . OBJECTID ( params )
    (47) expresion -> expresion . . OBJECTID ( params )
    (48) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (49) expresion -> expresion . . OBJECTID ( )
    OF              shift and go to state 103
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69


state 78

    (39) expresion -> LET declslet . IN expresion
    (59) declslet -> declslet . , decllet
    IN              shift and go to state 104
    ,               shift and go to state 105


state 79

    (58) declslet -> decllet .
    IN              reduce using rule 58 (declslet -> decllet .)
    ,               reduce using rule 58 (declslet -> decllet .)


state 80

    (56) decllet -> OBJECTID . : TYPEID
    (57) decllet -> OBJECTID . : TYPEID ASSIGN expresion
    :               shift and go to state 106


state 81

    (40) expresion -> { expresiones . }
    (54) expresiones -> expresiones . expresion ;
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . OBJECTID
    (24) expresion -> . ( expresion )
    (25) expresion -> . NOT expresion
    (26) expresion -> . expresion = expresion
    (27) expresion -> . expresion LE expresion
    (28) expresion -> . expresion < expresion
    (29) expresion -> . ~ expresion
    (30) expresion -> . expresion / expresion
    (31) expresion -> . expresion * expresion
    (32) expresion -> . expresion - expresion
    (33) expresion -> . expresion + expresion
    (34) expresion -> . ISVOID error
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . error TYPEID
    (37) expresion -> . NEW TYPEID
    (38) expresion -> . CASE expresion OF ramas ESAC
    (39) expresion -> . LET declslet IN expresion
    (40) expresion -> . { expresiones }
    (41) expresion -> . WHILE expresion LOOP expresion POOL
    (42) expresion -> . WHILE expresion LOOP error LOOP
    (43) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (44) expresion -> . OBJECTID ( params )
    (45) expresion -> . OBJECTID ( )
    (46) expresion -> . expresion @ TYPEID . OBJECTID ( params )
    (47) expresion -> . expresion . OBJECTID ( params )
    (48) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (49) expresion -> . expresion . OBJECTID ( )
    (50) expresion -> . OBJECTID ASSIGN expresion
    }               shift and go to state 107
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    error           shift and go to state 47
    NEW             shift and go to state 48
    CASE            shift and go to state 49
    LET             shift and go to state 50
    {               shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53

    expresion                      shift and go to state 108

state 82

    (53) expresiones -> error . ;
    (36) expresion -> error . TYPEID
    ;               shift and go to state 109
    TYPEID          shift and go to state 75


state 83

    (55) expresiones -> expresion . ;
    (26) expresion -> expresion . = expresion
    (27) expresion -> expresion . LE expresion
    (28) expresion -> expresion . < expresion
    (30) expresion -> expresion . / expresion
    (31) expresion -> expresion . * expresion
    (32) expresion -> expresion . - expresion
    (33) expresion -> expresion . + expresion
    (46) expresion -> expresion . @ TYPEID . OBJECTID ( params )
    (47) expresion -> expresion . . OBJECTID ( params )
    (48) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (49) expresion -> expresion . . OBJECTID ( )
    ;               shift and go to state 110
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69


state 84

    (41) expresion -> WHILE expresion . LOOP expresion POOL
    (42) expresion -> WHILE expresion . LOOP error LOOP
    (26) expresion -> expresion . = expresion
    (27) expresion -> expresion . LE expresion
    (28) expresion -> expresion . < expresion
    (30) expresion -> expresion . / expresion
    (31) expresion -> expresion . * expresion
    (32) expresion -> expresion . - expresion
    (33) expresion -> expresion . + expresion
    (46) expresion -> expresion . @ TYPEID . OBJECTID ( params )
    (47) expresion -> expresion . . OBJECTID ( params )
    (48) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (49) expresion -> expresion . . OBJECTID ( )
    LOOP            shift and go to state 111
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69


state 85

    (43) expresion -> IF expresion . THEN expresion ELSE expresion FI
    (26) expresion -> expresion . = expresion
    (27) expresion -> expresion . LE expresion
    (28) expresion -> expresion . < expresion
    (30) expresion -> expresion . / expresion
    (31) expresion -> expresion . * expresion
    (32) expresion -> expresion . - expresion
    (33) expresion -> expresion . + expresion
    (46) expresion -> expresion . @ TYPEID . OBJECTID ( params )
    (47) expresion -> expresion . . OBJECTID ( params )
    (48) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (49) expresion -> expresion . . OBJECTID ( )
    THEN            shift and go to state 112
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69


state 86

    (12) componente -> OBJECTID ( error ) : TYPEID . { expresion }
    {               shift and go to state 113


state 87

    (15) componente -> OBJECTID ( ) : TYPEID { . error }
    (16) componente -> OBJECTID ( ) : TYPEID { . expresion }
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . OBJECTID
    (24) expresion -> . ( expresion )
    (25) expresion -> . NOT expresion
    (26) expresion -> . expresion = expresion
    (27) expresion -> . expresion LE expresion
    (28) expresion -> . expresion < expresion
    (29) expresion -> . ~ expresion
    (30) expresion -> . expresion / expresion
    (31) expresion -> . expresion * expresion
    (32) expresion -> . expresion - expresion
    (33) expresion -> . expresion + expresion
    (34) expresion -> . ISVOID error
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . error TYPEID
    (37) expresion -> . NEW TYPEID
    (38) expresion -> . CASE expresion OF ramas ESAC
    (39) expresion -> . LET declslet IN expresion
    (40) expresion -> . { expresiones }
    (41) expresion -> . WHILE expresion LOOP expresion POOL
    (42) expresion -> . WHILE expresion LOOP error LOOP
    (43) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (44) expresion -> . OBJECTID ( params )
    (45) expresion -> . OBJECTID ( )
    (46) expresion -> . expresion @ TYPEID . OBJECTID ( params )
    (47) expresion -> . expresion . OBJECTID ( params )
    (48) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (49) expresion -> . expresion . OBJECTID ( )
    (50) expresion -> . OBJECTID ASSIGN expresion
    error           shift and go to state 114
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 48
    CASE            shift and go to state 49
    LET             shift and go to state 50
    {               shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53

    expresion                      shift and go to state 115

state 88

    (13) componente -> OBJECTID ( formales ) : TYPEID . { error }
    (14) componente -> OBJECTID ( formales ) : TYPEID . { expresion }
    {               shift and go to state 116


state 89

    (44) expresion -> OBJECTID ( params . )
    (51) params -> params . , expresion
    )               shift and go to state 117
    ,               shift and go to state 118


state 90

    (45) expresion -> OBJECTID ( ) .
    =               reduce using rule 45 (expresion -> OBJECTID ( ) .)
    LE              reduce using rule 45 (expresion -> OBJECTID ( ) .)
    <               reduce using rule 45 (expresion -> OBJECTID ( ) .)
    /               reduce using rule 45 (expresion -> OBJECTID ( ) .)
    *               reduce using rule 45 (expresion -> OBJECTID ( ) .)
    -               reduce using rule 45 (expresion -> OBJECTID ( ) .)
    +               reduce using rule 45 (expresion -> OBJECTID ( ) .)
    @               reduce using rule 45 (expresion -> OBJECTID ( ) .)
    .               reduce using rule 45 (expresion -> OBJECTID ( ) .)
    ;               reduce using rule 45 (expresion -> OBJECTID ( ) .)
    )               reduce using rule 45 (expresion -> OBJECTID ( ) .)
    OF              reduce using rule 45 (expresion -> OBJECTID ( ) .)
    LOOP            reduce using rule 45 (expresion -> OBJECTID ( ) .)
    THEN            reduce using rule 45 (expresion -> OBJECTID ( ) .)
    ,               reduce using rule 45 (expresion -> OBJECTID ( ) .)
    }               reduce using rule 45 (expresion -> OBJECTID ( ) .)
    POOL            reduce using rule 45 (expresion -> OBJECTID ( ) .)
    ELSE            reduce using rule 45 (expresion -> OBJECTID ( ) .)
    IN              reduce using rule 45 (expresion -> OBJECTID ( ) .)
    FI              reduce using rule 45 (expresion -> OBJECTID ( ) .)


state 91

    (52) params -> expresion .
    (26) expresion -> expresion . = expresion
    (27) expresion -> expresion . LE expresion
    (28) expresion -> expresion . < expresion
    (30) expresion -> expresion . / expresion
    (31) expresion -> expresion . * expresion
    (32) expresion -> expresion . - expresion
    (33) expresion -> expresion . + expresion
    (46) expresion -> expresion . @ TYPEID . OBJECTID ( params )
    (47) expresion -> expresion . . OBJECTID ( params )
    (48) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (49) expresion -> expresion . . OBJECTID ( )
    )               reduce using rule 52 (params -> expresion .)
    ,               reduce using rule 52 (params -> expresion .)
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69


state 92

    (50) expresion -> OBJECTID ASSIGN expresion .
    (26) expresion -> expresion . = expresion
    (27) expresion -> expresion . LE expresion
    (28) expresion -> expresion . < expresion
    (30) expresion -> expresion . / expresion
    (31) expresion -> expresion . * expresion
    (32) expresion -> expresion . - expresion
    (33) expresion -> expresion . + expresion
    (46) expresion -> expresion . @ TYPEID . OBJECTID ( params )
    (47) expresion -> expresion . . OBJECTID ( params )
    (48) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (49) expresion -> expresion . . OBJECTID ( )
    ;               reduce using rule 50 (expresion -> OBJECTID ASSIGN expresion .)
    )               reduce using rule 50 (expresion -> OBJECTID ASSIGN expresion .)
    OF              reduce using rule 50 (expresion -> OBJECTID ASSIGN expresion .)
    LOOP            reduce using rule 50 (expresion -> OBJECTID ASSIGN expresion .)
    THEN            reduce using rule 50 (expresion -> OBJECTID ASSIGN expresion .)
    ,               reduce using rule 50 (expresion -> OBJECTID ASSIGN expresion .)
    }               reduce using rule 50 (expresion -> OBJECTID ASSIGN expresion .)
    POOL            reduce using rule 50 (expresion -> OBJECTID ASSIGN expresion .)
    ELSE            reduce using rule 50 (expresion -> OBJECTID ASSIGN expresion .)
    IN              reduce using rule 50 (expresion -> OBJECTID ASSIGN expresion .)
    FI              reduce using rule 50 (expresion -> OBJECTID ASSIGN expresion .)
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69


state 93

    (26) expresion -> expresion = expresion .
    (26) expresion -> expresion . = expresion
    (27) expresion -> expresion . LE expresion
    (28) expresion -> expresion . < expresion
    (30) expresion -> expresion . / expresion
    (31) expresion -> expresion . * expresion
    (32) expresion -> expresion . - expresion
    (33) expresion -> expresion . + expresion
    (46) expresion -> expresion . @ TYPEID . OBJECTID ( params )
    (47) expresion -> expresion . . OBJECTID ( params )
    (48) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (49) expresion -> expresion . . OBJECTID ( )
    =               reduce using rule 26 (expresion -> expresion = expresion .)
    LE              reduce using rule 26 (expresion -> expresion = expresion .)
    <               reduce using rule 26 (expresion -> expresion = expresion .)
    ;               reduce using rule 26 (expresion -> expresion = expresion .)
    )               reduce using rule 26 (expresion -> expresion = expresion .)
    OF              reduce using rule 26 (expresion -> expresion = expresion .)
    LOOP            reduce using rule 26 (expresion -> expresion = expresion .)
    THEN            reduce using rule 26 (expresion -> expresion = expresion .)
    ,               reduce using rule 26 (expresion -> expresion = expresion .)
    }               reduce using rule 26 (expresion -> expresion = expresion .)
    POOL            reduce using rule 26 (expresion -> expresion = expresion .)
    ELSE            reduce using rule 26 (expresion -> expresion = expresion .)
    IN              reduce using rule 26 (expresion -> expresion = expresion .)
    FI              reduce using rule 26 (expresion -> expresion = expresion .)
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69


state 94

    (27) expresion -> expresion LE expresion .
    (26) expresion -> expresion . = expresion
    (27) expresion -> expresion . LE expresion
    (28) expresion -> expresion . < expresion
    (30) expresion -> expresion . / expresion
    (31) expresion -> expresion . * expresion
    (32) expresion -> expresion . - expresion
    (33) expresion -> expresion . + expresion
    (46) expresion -> expresion . @ TYPEID . OBJECTID ( params )
    (47) expresion -> expresion . . OBJECTID ( params )
    (48) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (49) expresion -> expresion . . OBJECTID ( )
    =               reduce using rule 27 (expresion -> expresion LE expresion .)
    LE              reduce using rule 27 (expresion -> expresion LE expresion .)
    <               reduce using rule 27 (expresion -> expresion LE expresion .)
    ;               reduce using rule 27 (expresion -> expresion LE expresion .)
    )               reduce using rule 27 (expresion -> expresion LE expresion .)
    OF              reduce using rule 27 (expresion -> expresion LE expresion .)
    LOOP            reduce using rule 27 (expresion -> expresion LE expresion .)
    THEN            reduce using rule 27 (expresion -> expresion LE expresion .)
    ,               reduce using rule 27 (expresion -> expresion LE expresion .)
    }               reduce using rule 27 (expresion -> expresion LE expresion .)
    POOL            reduce using rule 27 (expresion -> expresion LE expresion .)
    ELSE            reduce using rule 27 (expresion -> expresion LE expresion .)
    IN              reduce using rule 27 (expresion -> expresion LE expresion .)
    FI              reduce using rule 27 (expresion -> expresion LE expresion .)
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69


state 95

    (28) expresion -> expresion < expresion .
    (26) expresion -> expresion . = expresion
    (27) expresion -> expresion . LE expresion
    (28) expresion -> expresion . < expresion
    (30) expresion -> expresion . / expresion
    (31) expresion -> expresion . * expresion
    (32) expresion -> expresion . - expresion
    (33) expresion -> expresion . + expresion
    (46) expresion -> expresion . @ TYPEID . OBJECTID ( params )
    (47) expresion -> expresion . . OBJECTID ( params )
    (48) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (49) expresion -> expresion . . OBJECTID ( )
    =               reduce using rule 28 (expresion -> expresion < expresion .)
    LE              reduce using rule 28 (expresion -> expresion < expresion .)
    <               reduce using rule 28 (expresion -> expresion < expresion .)
    ;               reduce using rule 28 (expresion -> expresion < expresion .)
    )               reduce using rule 28 (expresion -> expresion < expresion .)
    OF              reduce using rule 28 (expresion -> expresion < expresion .)
    LOOP            reduce using rule 28 (expresion -> expresion < expresion .)
    THEN            reduce using rule 28 (expresion -> expresion < expresion .)
    ,               reduce using rule 28 (expresion -> expresion < expresion .)
    }               reduce using rule 28 (expresion -> expresion < expresion .)
    POOL            reduce using rule 28 (expresion -> expresion < expresion .)
    ELSE            reduce using rule 28 (expresion -> expresion < expresion .)
    IN              reduce using rule 28 (expresion -> expresion < expresion .)
    FI              reduce using rule 28 (expresion -> expresion < expresion .)
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69


state 96

    (30) expresion -> expresion / expresion .
    (26) expresion -> expresion . = expresion
    (27) expresion -> expresion . LE expresion
    (28) expresion -> expresion . < expresion
    (30) expresion -> expresion . / expresion
    (31) expresion -> expresion . * expresion
    (32) expresion -> expresion . - expresion
    (33) expresion -> expresion . + expresion
    (46) expresion -> expresion . @ TYPEID . OBJECTID ( params )
    (47) expresion -> expresion . . OBJECTID ( params )
    (48) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (49) expresion -> expresion . . OBJECTID ( )
    =               reduce using rule 30 (expresion -> expresion / expresion .)
    LE              reduce using rule 30 (expresion -> expresion / expresion .)
    <               reduce using rule 30 (expresion -> expresion / expresion .)
    /               reduce using rule 30 (expresion -> expresion / expresion .)
    *               reduce using rule 30 (expresion -> expresion / expresion .)
    -               reduce using rule 30 (expresion -> expresion / expresion .)
    +               reduce using rule 30 (expresion -> expresion / expresion .)
    ;               reduce using rule 30 (expresion -> expresion / expresion .)
    )               reduce using rule 30 (expresion -> expresion / expresion .)
    OF              reduce using rule 30 (expresion -> expresion / expresion .)
    LOOP            reduce using rule 30 (expresion -> expresion / expresion .)
    THEN            reduce using rule 30 (expresion -> expresion / expresion .)
    ,               reduce using rule 30 (expresion -> expresion / expresion .)
    }               reduce using rule 30 (expresion -> expresion / expresion .)
    POOL            reduce using rule 30 (expresion -> expresion / expresion .)
    ELSE            reduce using rule 30 (expresion -> expresion / expresion .)
    IN              reduce using rule 30 (expresion -> expresion / expresion .)
    FI              reduce using rule 30 (expresion -> expresion / expresion .)
    @               shift and go to state 68
    .               shift and go to state 69


state 97

    (31) expresion -> expresion * expresion .
    (26) expresion -> expresion . = expresion
    (27) expresion -> expresion . LE expresion
    (28) expresion -> expresion . < expresion
    (30) expresion -> expresion . / expresion
    (31) expresion -> expresion . * expresion
    (32) expresion -> expresion . - expresion
    (33) expresion -> expresion . + expresion
    (46) expresion -> expresion . @ TYPEID . OBJECTID ( params )
    (47) expresion -> expresion . . OBJECTID ( params )
    (48) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (49) expresion -> expresion . . OBJECTID ( )
    =               reduce using rule 31 (expresion -> expresion * expresion .)
    LE              reduce using rule 31 (expresion -> expresion * expresion .)
    <               reduce using rule 31 (expresion -> expresion * expresion .)
    /               reduce using rule 31 (expresion -> expresion * expresion .)
    *               reduce using rule 31 (expresion -> expresion * expresion .)
    -               reduce using rule 31 (expresion -> expresion * expresion .)
    +               reduce using rule 31 (expresion -> expresion * expresion .)
    ;               reduce using rule 31 (expresion -> expresion * expresion .)
    )               reduce using rule 31 (expresion -> expresion * expresion .)
    OF              reduce using rule 31 (expresion -> expresion * expresion .)
    LOOP            reduce using rule 31 (expresion -> expresion * expresion .)
    THEN            reduce using rule 31 (expresion -> expresion * expresion .)
    ,               reduce using rule 31 (expresion -> expresion * expresion .)
    }               reduce using rule 31 (expresion -> expresion * expresion .)
    POOL            reduce using rule 31 (expresion -> expresion * expresion .)
    ELSE            reduce using rule 31 (expresion -> expresion * expresion .)
    IN              reduce using rule 31 (expresion -> expresion * expresion .)
    FI              reduce using rule 31 (expresion -> expresion * expresion .)
    @               shift and go to state 68
    .               shift and go to state 69


state 98

    (32) expresion -> expresion - expresion .
    (26) expresion -> expresion . = expresion
    (27) expresion -> expresion . LE expresion
    (28) expresion -> expresion . < expresion
    (30) expresion -> expresion . / expresion
    (31) expresion -> expresion . * expresion
    (32) expresion -> expresion . - expresion
    (33) expresion -> expresion . + expresion
    (46) expresion -> expresion . @ TYPEID . OBJECTID ( params )
    (47) expresion -> expresion . . OBJECTID ( params )
    (48) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (49) expresion -> expresion . . OBJECTID ( )
    =               reduce using rule 32 (expresion -> expresion - expresion .)
    LE              reduce using rule 32 (expresion -> expresion - expresion .)
    <               reduce using rule 32 (expresion -> expresion - expresion .)
    -               reduce using rule 32 (expresion -> expresion - expresion .)
    +               reduce using rule 32 (expresion -> expresion - expresion .)
    ;               reduce using rule 32 (expresion -> expresion - expresion .)
    )               reduce using rule 32 (expresion -> expresion - expresion .)
    OF              reduce using rule 32 (expresion -> expresion - expresion .)
    LOOP            reduce using rule 32 (expresion -> expresion - expresion .)
    THEN            reduce using rule 32 (expresion -> expresion - expresion .)
    ,               reduce using rule 32 (expresion -> expresion - expresion .)
    }               reduce using rule 32 (expresion -> expresion - expresion .)
    POOL            reduce using rule 32 (expresion -> expresion - expresion .)
    ELSE            reduce using rule 32 (expresion -> expresion - expresion .)
    IN              reduce using rule 32 (expresion -> expresion - expresion .)
    FI              reduce using rule 32 (expresion -> expresion - expresion .)
    /               shift and go to state 64
    *               shift and go to state 65
    @               shift and go to state 68
    .               shift and go to state 69


state 99

    (33) expresion -> expresion + expresion .
    (26) expresion -> expresion . = expresion
    (27) expresion -> expresion . LE expresion
    (28) expresion -> expresion . < expresion
    (30) expresion -> expresion . / expresion
    (31) expresion -> expresion . * expresion
    (32) expresion -> expresion . - expresion
    (33) expresion -> expresion . + expresion
    (46) expresion -> expresion . @ TYPEID . OBJECTID ( params )
    (47) expresion -> expresion . . OBJECTID ( params )
    (48) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (49) expresion -> expresion . . OBJECTID ( )
    =               reduce using rule 33 (expresion -> expresion + expresion .)
    LE              reduce using rule 33 (expresion -> expresion + expresion .)
    <               reduce using rule 33 (expresion -> expresion + expresion .)
    -               reduce using rule 33 (expresion -> expresion + expresion .)
    +               reduce using rule 33 (expresion -> expresion + expresion .)
    ;               reduce using rule 33 (expresion -> expresion + expresion .)
    )               reduce using rule 33 (expresion -> expresion + expresion .)
    OF              reduce using rule 33 (expresion -> expresion + expresion .)
    LOOP            reduce using rule 33 (expresion -> expresion + expresion .)
    THEN            reduce using rule 33 (expresion -> expresion + expresion .)
    ,               reduce using rule 33 (expresion -> expresion + expresion .)
    }               reduce using rule 33 (expresion -> expresion + expresion .)
    POOL            reduce using rule 33 (expresion -> expresion + expresion .)
    ELSE            reduce using rule 33 (expresion -> expresion + expresion .)
    IN              reduce using rule 33 (expresion -> expresion + expresion .)
    FI              reduce using rule 33 (expresion -> expresion + expresion .)
    /               shift and go to state 64
    *               shift and go to state 65
    @               shift and go to state 68
    .               shift and go to state 69


state 100

    (46) expresion -> expresion @ TYPEID . . OBJECTID ( params )
    (48) expresion -> expresion @ TYPEID . . OBJECTID ( )
    .               shift and go to state 119


state 101

    (47) expresion -> expresion . OBJECTID . ( params )
    (49) expresion -> expresion . OBJECTID . ( )
    (               shift and go to state 120


state 102

    (24) expresion -> ( expresion ) .
    =               reduce using rule 24 (expresion -> ( expresion ) .)
    LE              reduce using rule 24 (expresion -> ( expresion ) .)
    <               reduce using rule 24 (expresion -> ( expresion ) .)
    /               reduce using rule 24 (expresion -> ( expresion ) .)
    *               reduce using rule 24 (expresion -> ( expresion ) .)
    -               reduce using rule 24 (expresion -> ( expresion ) .)
    +               reduce using rule 24 (expresion -> ( expresion ) .)
    @               reduce using rule 24 (expresion -> ( expresion ) .)
    .               reduce using rule 24 (expresion -> ( expresion ) .)
    ;               reduce using rule 24 (expresion -> ( expresion ) .)
    )               reduce using rule 24 (expresion -> ( expresion ) .)
    OF              reduce using rule 24 (expresion -> ( expresion ) .)
    LOOP            reduce using rule 24 (expresion -> ( expresion ) .)
    THEN            reduce using rule 24 (expresion -> ( expresion ) .)
    ,               reduce using rule 24 (expresion -> ( expresion ) .)
    }               reduce using rule 24 (expresion -> ( expresion ) .)
    POOL            reduce using rule 24 (expresion -> ( expresion ) .)
    ELSE            reduce using rule 24 (expresion -> ( expresion ) .)
    IN              reduce using rule 24 (expresion -> ( expresion ) .)
    FI              reduce using rule 24 (expresion -> ( expresion ) .)


state 103

    (38) expresion -> CASE expresion OF . ramas ESAC
    (60) ramas -> . ramas rama ;
    (61) ramas -> . rama ;
    (62) rama -> . OBJECTID : TYPEID DARROW expresion
    OBJECTID        shift and go to state 123

    ramas                          shift and go to state 121
    rama                           shift and go to state 122

state 104

    (39) expresion -> LET declslet IN . expresion
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . OBJECTID
    (24) expresion -> . ( expresion )
    (25) expresion -> . NOT expresion
    (26) expresion -> . expresion = expresion
    (27) expresion -> . expresion LE expresion
    (28) expresion -> . expresion < expresion
    (29) expresion -> . ~ expresion
    (30) expresion -> . expresion / expresion
    (31) expresion -> . expresion * expresion
    (32) expresion -> . expresion - expresion
    (33) expresion -> . expresion + expresion
    (34) expresion -> . ISVOID error
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . error TYPEID
    (37) expresion -> . NEW TYPEID
    (38) expresion -> . CASE expresion OF ramas ESAC
    (39) expresion -> . LET declslet IN expresion
    (40) expresion -> . { expresiones }
    (41) expresion -> . WHILE expresion LOOP expresion POOL
    (42) expresion -> . WHILE expresion LOOP error LOOP
    (43) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (44) expresion -> . OBJECTID ( params )
    (45) expresion -> . OBJECTID ( )
    (46) expresion -> . expresion @ TYPEID . OBJECTID ( params )
    (47) expresion -> . expresion . OBJECTID ( params )
    (48) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (49) expresion -> . expresion . OBJECTID ( )
    (50) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    error           shift and go to state 47
    NEW             shift and go to state 48
    CASE            shift and go to state 49
    LET             shift and go to state 50
    {               shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53

    expresion                      shift and go to state 124

state 105

    (59) declslet -> declslet , . decllet
    (56) decllet -> . OBJECTID : TYPEID
    (57) decllet -> . OBJECTID : TYPEID ASSIGN expresion
    OBJECTID        shift and go to state 80

    decllet                        shift and go to state 125

state 106

    (56) decllet -> OBJECTID : . TYPEID
    (57) decllet -> OBJECTID : . TYPEID ASSIGN expresion
    TYPEID          shift and go to state 126


state 107

    (40) expresion -> { expresiones } .
    =               reduce using rule 40 (expresion -> { expresiones } .)
    LE              reduce using rule 40 (expresion -> { expresiones } .)
    <               reduce using rule 40 (expresion -> { expresiones } .)
    /               reduce using rule 40 (expresion -> { expresiones } .)
    *               reduce using rule 40 (expresion -> { expresiones } .)
    -               reduce using rule 40 (expresion -> { expresiones } .)
    +               reduce using rule 40 (expresion -> { expresiones } .)
    @               reduce using rule 40 (expresion -> { expresiones } .)
    .               reduce using rule 40 (expresion -> { expresiones } .)
    ;               reduce using rule 40 (expresion -> { expresiones } .)
    )               reduce using rule 40 (expresion -> { expresiones } .)
    OF              reduce using rule 40 (expresion -> { expresiones } .)
    LOOP            reduce using rule 40 (expresion -> { expresiones } .)
    THEN            reduce using rule 40 (expresion -> { expresiones } .)
    ,               reduce using rule 40 (expresion -> { expresiones } .)
    }               reduce using rule 40 (expresion -> { expresiones } .)
    POOL            reduce using rule 40 (expresion -> { expresiones } .)
    ELSE            reduce using rule 40 (expresion -> { expresiones } .)
    IN              reduce using rule 40 (expresion -> { expresiones } .)
    FI              reduce using rule 40 (expresion -> { expresiones } .)


state 108

    (54) expresiones -> expresiones expresion . ;
    (26) expresion -> expresion . = expresion
    (27) expresion -> expresion . LE expresion
    (28) expresion -> expresion . < expresion
    (30) expresion -> expresion . / expresion
    (31) expresion -> expresion . * expresion
    (32) expresion -> expresion . - expresion
    (33) expresion -> expresion . + expresion
    (46) expresion -> expresion . @ TYPEID . OBJECTID ( params )
    (47) expresion -> expresion . . OBJECTID ( params )
    (48) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (49) expresion -> expresion . . OBJECTID ( )
    ;               shift and go to state 127
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69


state 109

    (53) expresiones -> error ; .
    }               reduce using rule 53 (expresiones -> error ; .)
    BOOL_CONST      reduce using rule 53 (expresiones -> error ; .)
    STR_CONST       reduce using rule 53 (expresiones -> error ; .)
    INT_CONST       reduce using rule 53 (expresiones -> error ; .)
    OBJECTID        reduce using rule 53 (expresiones -> error ; .)
    (               reduce using rule 53 (expresiones -> error ; .)
    NOT             reduce using rule 53 (expresiones -> error ; .)
    ~               reduce using rule 53 (expresiones -> error ; .)
    ISVOID          reduce using rule 53 (expresiones -> error ; .)
    error           reduce using rule 53 (expresiones -> error ; .)
    NEW             reduce using rule 53 (expresiones -> error ; .)
    CASE            reduce using rule 53 (expresiones -> error ; .)
    LET             reduce using rule 53 (expresiones -> error ; .)
    {               reduce using rule 53 (expresiones -> error ; .)
    WHILE           reduce using rule 53 (expresiones -> error ; .)
    IF              reduce using rule 53 (expresiones -> error ; .)


state 110

    (55) expresiones -> expresion ; .
    }               reduce using rule 55 (expresiones -> expresion ; .)
    BOOL_CONST      reduce using rule 55 (expresiones -> expresion ; .)
    STR_CONST       reduce using rule 55 (expresiones -> expresion ; .)
    INT_CONST       reduce using rule 55 (expresiones -> expresion ; .)
    OBJECTID        reduce using rule 55 (expresiones -> expresion ; .)
    (               reduce using rule 55 (expresiones -> expresion ; .)
    NOT             reduce using rule 55 (expresiones -> expresion ; .)
    ~               reduce using rule 55 (expresiones -> expresion ; .)
    ISVOID          reduce using rule 55 (expresiones -> expresion ; .)
    error           reduce using rule 55 (expresiones -> expresion ; .)
    NEW             reduce using rule 55 (expresiones -> expresion ; .)
    CASE            reduce using rule 55 (expresiones -> expresion ; .)
    LET             reduce using rule 55 (expresiones -> expresion ; .)
    {               reduce using rule 55 (expresiones -> expresion ; .)
    WHILE           reduce using rule 55 (expresiones -> expresion ; .)
    IF              reduce using rule 55 (expresiones -> expresion ; .)


state 111

    (41) expresion -> WHILE expresion LOOP . expresion POOL
    (42) expresion -> WHILE expresion LOOP . error LOOP
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . OBJECTID
    (24) expresion -> . ( expresion )
    (25) expresion -> . NOT expresion
    (26) expresion -> . expresion = expresion
    (27) expresion -> . expresion LE expresion
    (28) expresion -> . expresion < expresion
    (29) expresion -> . ~ expresion
    (30) expresion -> . expresion / expresion
    (31) expresion -> . expresion * expresion
    (32) expresion -> . expresion - expresion
    (33) expresion -> . expresion + expresion
    (34) expresion -> . ISVOID error
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . error TYPEID
    (37) expresion -> . NEW TYPEID
    (38) expresion -> . CASE expresion OF ramas ESAC
    (39) expresion -> . LET declslet IN expresion
    (40) expresion -> . { expresiones }
    (41) expresion -> . WHILE expresion LOOP expresion POOL
    (42) expresion -> . WHILE expresion LOOP error LOOP
    (43) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (44) expresion -> . OBJECTID ( params )
    (45) expresion -> . OBJECTID ( )
    (46) expresion -> . expresion @ TYPEID . OBJECTID ( params )
    (47) expresion -> . expresion . OBJECTID ( params )
    (48) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (49) expresion -> . expresion . OBJECTID ( )
    (50) expresion -> . OBJECTID ASSIGN expresion
    error           shift and go to state 129
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 48
    CASE            shift and go to state 49
    LET             shift and go to state 50
    {               shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53

    expresion                      shift and go to state 128

state 112

    (43) expresion -> IF expresion THEN . expresion ELSE expresion FI
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . OBJECTID
    (24) expresion -> . ( expresion )
    (25) expresion -> . NOT expresion
    (26) expresion -> . expresion = expresion
    (27) expresion -> . expresion LE expresion
    (28) expresion -> . expresion < expresion
    (29) expresion -> . ~ expresion
    (30) expresion -> . expresion / expresion
    (31) expresion -> . expresion * expresion
    (32) expresion -> . expresion - expresion
    (33) expresion -> . expresion + expresion
    (34) expresion -> . ISVOID error
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . error TYPEID
    (37) expresion -> . NEW TYPEID
    (38) expresion -> . CASE expresion OF ramas ESAC
    (39) expresion -> . LET declslet IN expresion
    (40) expresion -> . { expresiones }
    (41) expresion -> . WHILE expresion LOOP expresion POOL
    (42) expresion -> . WHILE expresion LOOP error LOOP
    (43) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (44) expresion -> . OBJECTID ( params )
    (45) expresion -> . OBJECTID ( )
    (46) expresion -> . expresion @ TYPEID . OBJECTID ( params )
    (47) expresion -> . expresion . OBJECTID ( params )
    (48) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (49) expresion -> . expresion . OBJECTID ( )
    (50) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    error           shift and go to state 47
    NEW             shift and go to state 48
    CASE            shift and go to state 49
    LET             shift and go to state 50
    {               shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53

    expresion                      shift and go to state 130

state 113

    (12) componente -> OBJECTID ( error ) : TYPEID { . expresion }
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . OBJECTID
    (24) expresion -> . ( expresion )
    (25) expresion -> . NOT expresion
    (26) expresion -> . expresion = expresion
    (27) expresion -> . expresion LE expresion
    (28) expresion -> . expresion < expresion
    (29) expresion -> . ~ expresion
    (30) expresion -> . expresion / expresion
    (31) expresion -> . expresion * expresion
    (32) expresion -> . expresion - expresion
    (33) expresion -> . expresion + expresion
    (34) expresion -> . ISVOID error
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . error TYPEID
    (37) expresion -> . NEW TYPEID
    (38) expresion -> . CASE expresion OF ramas ESAC
    (39) expresion -> . LET declslet IN expresion
    (40) expresion -> . { expresiones }
    (41) expresion -> . WHILE expresion LOOP expresion POOL
    (42) expresion -> . WHILE expresion LOOP error LOOP
    (43) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (44) expresion -> . OBJECTID ( params )
    (45) expresion -> . OBJECTID ( )
    (46) expresion -> . expresion @ TYPEID . OBJECTID ( params )
    (47) expresion -> . expresion . OBJECTID ( params )
    (48) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (49) expresion -> . expresion . OBJECTID ( )
    (50) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    error           shift and go to state 47
    NEW             shift and go to state 48
    CASE            shift and go to state 49
    LET             shift and go to state 50
    {               shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53

    expresion                      shift and go to state 131

state 114

    (15) componente -> OBJECTID ( ) : TYPEID { error . }
    (36) expresion -> error . TYPEID
    }               shift and go to state 132
    TYPEID          shift and go to state 75


state 115

    (16) componente -> OBJECTID ( ) : TYPEID { expresion . }
    (26) expresion -> expresion . = expresion
    (27) expresion -> expresion . LE expresion
    (28) expresion -> expresion . < expresion
    (30) expresion -> expresion . / expresion
    (31) expresion -> expresion . * expresion
    (32) expresion -> expresion . - expresion
    (33) expresion -> expresion . + expresion
    (46) expresion -> expresion . @ TYPEID . OBJECTID ( params )
    (47) expresion -> expresion . . OBJECTID ( params )
    (48) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (49) expresion -> expresion . . OBJECTID ( )
    }               shift and go to state 133
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69


state 116

    (13) componente -> OBJECTID ( formales ) : TYPEID { . error }
    (14) componente -> OBJECTID ( formales ) : TYPEID { . expresion }
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . OBJECTID
    (24) expresion -> . ( expresion )
    (25) expresion -> . NOT expresion
    (26) expresion -> . expresion = expresion
    (27) expresion -> . expresion LE expresion
    (28) expresion -> . expresion < expresion
    (29) expresion -> . ~ expresion
    (30) expresion -> . expresion / expresion
    (31) expresion -> . expresion * expresion
    (32) expresion -> . expresion - expresion
    (33) expresion -> . expresion + expresion
    (34) expresion -> . ISVOID error
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . error TYPEID
    (37) expresion -> . NEW TYPEID
    (38) expresion -> . CASE expresion OF ramas ESAC
    (39) expresion -> . LET declslet IN expresion
    (40) expresion -> . { expresiones }
    (41) expresion -> . WHILE expresion LOOP expresion POOL
    (42) expresion -> . WHILE expresion LOOP error LOOP
    (43) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (44) expresion -> . OBJECTID ( params )
    (45) expresion -> . OBJECTID ( )
    (46) expresion -> . expresion @ TYPEID . OBJECTID ( params )
    (47) expresion -> . expresion . OBJECTID ( params )
    (48) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (49) expresion -> . expresion . OBJECTID ( )
    (50) expresion -> . OBJECTID ASSIGN expresion
    error           shift and go to state 134
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 48
    CASE            shift and go to state 49
    LET             shift and go to state 50
    {               shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53

    expresion                      shift and go to state 135

state 117

    (44) expresion -> OBJECTID ( params ) .
    =               reduce using rule 44 (expresion -> OBJECTID ( params ) .)
    LE              reduce using rule 44 (expresion -> OBJECTID ( params ) .)
    <               reduce using rule 44 (expresion -> OBJECTID ( params ) .)
    /               reduce using rule 44 (expresion -> OBJECTID ( params ) .)
    *               reduce using rule 44 (expresion -> OBJECTID ( params ) .)
    -               reduce using rule 44 (expresion -> OBJECTID ( params ) .)
    +               reduce using rule 44 (expresion -> OBJECTID ( params ) .)
    @               reduce using rule 44 (expresion -> OBJECTID ( params ) .)
    .               reduce using rule 44 (expresion -> OBJECTID ( params ) .)
    ;               reduce using rule 44 (expresion -> OBJECTID ( params ) .)
    )               reduce using rule 44 (expresion -> OBJECTID ( params ) .)
    OF              reduce using rule 44 (expresion -> OBJECTID ( params ) .)
    LOOP            reduce using rule 44 (expresion -> OBJECTID ( params ) .)
    THEN            reduce using rule 44 (expresion -> OBJECTID ( params ) .)
    ,               reduce using rule 44 (expresion -> OBJECTID ( params ) .)
    }               reduce using rule 44 (expresion -> OBJECTID ( params ) .)
    POOL            reduce using rule 44 (expresion -> OBJECTID ( params ) .)
    ELSE            reduce using rule 44 (expresion -> OBJECTID ( params ) .)
    IN              reduce using rule 44 (expresion -> OBJECTID ( params ) .)
    FI              reduce using rule 44 (expresion -> OBJECTID ( params ) .)


state 118

    (51) params -> params , . expresion
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . OBJECTID
    (24) expresion -> . ( expresion )
    (25) expresion -> . NOT expresion
    (26) expresion -> . expresion = expresion
    (27) expresion -> . expresion LE expresion
    (28) expresion -> . expresion < expresion
    (29) expresion -> . ~ expresion
    (30) expresion -> . expresion / expresion
    (31) expresion -> . expresion * expresion
    (32) expresion -> . expresion - expresion
    (33) expresion -> . expresion + expresion
    (34) expresion -> . ISVOID error
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . error TYPEID
    (37) expresion -> . NEW TYPEID
    (38) expresion -> . CASE expresion OF ramas ESAC
    (39) expresion -> . LET declslet IN expresion
    (40) expresion -> . { expresiones }
    (41) expresion -> . WHILE expresion LOOP expresion POOL
    (42) expresion -> . WHILE expresion LOOP error LOOP
    (43) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (44) expresion -> . OBJECTID ( params )
    (45) expresion -> . OBJECTID ( )
    (46) expresion -> . expresion @ TYPEID . OBJECTID ( params )
    (47) expresion -> . expresion . OBJECTID ( params )
    (48) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (49) expresion -> . expresion . OBJECTID ( )
    (50) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    error           shift and go to state 47
    NEW             shift and go to state 48
    CASE            shift and go to state 49
    LET             shift and go to state 50
    {               shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53

    expresion                      shift and go to state 136

state 119

    (46) expresion -> expresion @ TYPEID . . OBJECTID ( params )
    (48) expresion -> expresion @ TYPEID . . OBJECTID ( )
    OBJECTID        shift and go to state 137


state 120

    (47) expresion -> expresion . OBJECTID ( . params )
    (49) expresion -> expresion . OBJECTID ( . )
    (51) params -> . params , expresion
    (52) params -> . expresion
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . OBJECTID
    (24) expresion -> . ( expresion )
    (25) expresion -> . NOT expresion
    (26) expresion -> . expresion = expresion
    (27) expresion -> . expresion LE expresion
    (28) expresion -> . expresion < expresion
    (29) expresion -> . ~ expresion
    (30) expresion -> . expresion / expresion
    (31) expresion -> . expresion * expresion
    (32) expresion -> . expresion - expresion
    (33) expresion -> . expresion + expresion
    (34) expresion -> . ISVOID error
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . error TYPEID
    (37) expresion -> . NEW TYPEID
    (38) expresion -> . CASE expresion OF ramas ESAC
    (39) expresion -> . LET declslet IN expresion
    (40) expresion -> . { expresiones }
    (41) expresion -> . WHILE expresion LOOP expresion POOL
    (42) expresion -> . WHILE expresion LOOP error LOOP
    (43) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (44) expresion -> . OBJECTID ( params )
    (45) expresion -> . OBJECTID ( )
    (46) expresion -> . expresion @ TYPEID . OBJECTID ( params )
    (47) expresion -> . expresion . OBJECTID ( params )
    (48) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (49) expresion -> . expresion . OBJECTID ( )
    (50) expresion -> . OBJECTID ASSIGN expresion
    )               shift and go to state 139
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    error           shift and go to state 47
    NEW             shift and go to state 48
    CASE            shift and go to state 49
    LET             shift and go to state 50
    {               shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53

    expresion                      shift and go to state 91
    params                         shift and go to state 138

state 121

    (38) expresion -> CASE expresion OF ramas . ESAC
    (60) ramas -> ramas . rama ;
    (62) rama -> . OBJECTID : TYPEID DARROW expresion
    ESAC            shift and go to state 140
    OBJECTID        shift and go to state 123

    rama                           shift and go to state 141

state 122

    (61) ramas -> rama . ;
    ;               shift and go to state 142


state 123

    (62) rama -> OBJECTID . : TYPEID DARROW expresion
    :               shift and go to state 143


state 124

    (39) expresion -> LET declslet IN expresion .
    (26) expresion -> expresion . = expresion
    (27) expresion -> expresion . LE expresion
    (28) expresion -> expresion . < expresion
    (30) expresion -> expresion . / expresion
    (31) expresion -> expresion . * expresion
    (32) expresion -> expresion . - expresion
    (33) expresion -> expresion . + expresion
    (46) expresion -> expresion . @ TYPEID . OBJECTID ( params )
    (47) expresion -> expresion . . OBJECTID ( params )
    (48) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (49) expresion -> expresion . . OBJECTID ( )
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 39 (expresion -> LET declslet IN expresion .)
    )               reduce using rule 39 (expresion -> LET declslet IN expresion .)
    OF              reduce using rule 39 (expresion -> LET declslet IN expresion .)
    LOOP            reduce using rule 39 (expresion -> LET declslet IN expresion .)
    THEN            reduce using rule 39 (expresion -> LET declslet IN expresion .)
    ,               reduce using rule 39 (expresion -> LET declslet IN expresion .)
    }               reduce using rule 39 (expresion -> LET declslet IN expresion .)
    POOL            reduce using rule 39 (expresion -> LET declslet IN expresion .)
    ELSE            reduce using rule 39 (expresion -> LET declslet IN expresion .)
    IN              reduce using rule 39 (expresion -> LET declslet IN expresion .)
    FI              reduce using rule 39 (expresion -> LET declslet IN expresion .)
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69


state 125

    (59) declslet -> declslet , decllet .
    IN              reduce using rule 59 (declslet -> declslet , decllet .)
    ,               reduce using rule 59 (declslet -> declslet , decllet .)


state 126

    (56) decllet -> OBJECTID : TYPEID .
    (57) decllet -> OBJECTID : TYPEID . ASSIGN expresion
    IN              reduce using rule 56 (decllet -> OBJECTID : TYPEID .)
    ,               reduce using rule 56 (decllet -> OBJECTID : TYPEID .)
    ASSIGN          shift and go to state 144


state 127

    (54) expresiones -> expresiones expresion ; .
    }               reduce using rule 54 (expresiones -> expresiones expresion ; .)
    BOOL_CONST      reduce using rule 54 (expresiones -> expresiones expresion ; .)
    STR_CONST       reduce using rule 54 (expresiones -> expresiones expresion ; .)
    INT_CONST       reduce using rule 54 (expresiones -> expresiones expresion ; .)
    OBJECTID        reduce using rule 54 (expresiones -> expresiones expresion ; .)
    (               reduce using rule 54 (expresiones -> expresiones expresion ; .)
    NOT             reduce using rule 54 (expresiones -> expresiones expresion ; .)
    ~               reduce using rule 54 (expresiones -> expresiones expresion ; .)
    ISVOID          reduce using rule 54 (expresiones -> expresiones expresion ; .)
    error           reduce using rule 54 (expresiones -> expresiones expresion ; .)
    NEW             reduce using rule 54 (expresiones -> expresiones expresion ; .)
    CASE            reduce using rule 54 (expresiones -> expresiones expresion ; .)
    LET             reduce using rule 54 (expresiones -> expresiones expresion ; .)
    {               reduce using rule 54 (expresiones -> expresiones expresion ; .)
    WHILE           reduce using rule 54 (expresiones -> expresiones expresion ; .)
    IF              reduce using rule 54 (expresiones -> expresiones expresion ; .)


state 128

    (41) expresion -> WHILE expresion LOOP expresion . POOL
    (26) expresion -> expresion . = expresion
    (27) expresion -> expresion . LE expresion
    (28) expresion -> expresion . < expresion
    (30) expresion -> expresion . / expresion
    (31) expresion -> expresion . * expresion
    (32) expresion -> expresion . - expresion
    (33) expresion -> expresion . + expresion
    (46) expresion -> expresion . @ TYPEID . OBJECTID ( params )
    (47) expresion -> expresion . . OBJECTID ( params )
    (48) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (49) expresion -> expresion . . OBJECTID ( )
    POOL            shift and go to state 145
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69


state 129

    (42) expresion -> WHILE expresion LOOP error . LOOP
    (36) expresion -> error . TYPEID
    LOOP            shift and go to state 146
    TYPEID          shift and go to state 75


state 130

    (43) expresion -> IF expresion THEN expresion . ELSE expresion FI
    (26) expresion -> expresion . = expresion
    (27) expresion -> expresion . LE expresion
    (28) expresion -> expresion . < expresion
    (30) expresion -> expresion . / expresion
    (31) expresion -> expresion . * expresion
    (32) expresion -> expresion . - expresion
    (33) expresion -> expresion . + expresion
    (46) expresion -> expresion . @ TYPEID . OBJECTID ( params )
    (47) expresion -> expresion . . OBJECTID ( params )
    (48) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (49) expresion -> expresion . . OBJECTID ( )
    ELSE            shift and go to state 147
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69


state 131

    (12) componente -> OBJECTID ( error ) : TYPEID { expresion . }
    (26) expresion -> expresion . = expresion
    (27) expresion -> expresion . LE expresion
    (28) expresion -> expresion . < expresion
    (30) expresion -> expresion . / expresion
    (31) expresion -> expresion . * expresion
    (32) expresion -> expresion . - expresion
    (33) expresion -> expresion . + expresion
    (46) expresion -> expresion . @ TYPEID . OBJECTID ( params )
    (47) expresion -> expresion . . OBJECTID ( params )
    (48) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (49) expresion -> expresion . . OBJECTID ( )
    }               shift and go to state 148
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69


state 132

    (15) componente -> OBJECTID ( ) : TYPEID { error } .
    ;               reduce using rule 15 (componente -> OBJECTID ( ) : TYPEID { error } .)


state 133

    (16) componente -> OBJECTID ( ) : TYPEID { expresion } .
    ;               reduce using rule 16 (componente -> OBJECTID ( ) : TYPEID { expresion } .)


state 134

    (13) componente -> OBJECTID ( formales ) : TYPEID { error . }
    (36) expresion -> error . TYPEID
    }               shift and go to state 149
    TYPEID          shift and go to state 75


state 135

    (14) componente -> OBJECTID ( formales ) : TYPEID { expresion . }
    (26) expresion -> expresion . = expresion
    (27) expresion -> expresion . LE expresion
    (28) expresion -> expresion . < expresion
    (30) expresion -> expresion . / expresion
    (31) expresion -> expresion . * expresion
    (32) expresion -> expresion . - expresion
    (33) expresion -> expresion . + expresion
    (46) expresion -> expresion . @ TYPEID . OBJECTID ( params )
    (47) expresion -> expresion . . OBJECTID ( params )
    (48) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (49) expresion -> expresion . . OBJECTID ( )
    }               shift and go to state 150
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69


state 136

    (51) params -> params , expresion .
    (26) expresion -> expresion . = expresion
    (27) expresion -> expresion . LE expresion
    (28) expresion -> expresion . < expresion
    (30) expresion -> expresion . / expresion
    (31) expresion -> expresion . * expresion
    (32) expresion -> expresion . - expresion
    (33) expresion -> expresion . + expresion
    (46) expresion -> expresion . @ TYPEID . OBJECTID ( params )
    (47) expresion -> expresion . . OBJECTID ( params )
    (48) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (49) expresion -> expresion . . OBJECTID ( )
    )               reduce using rule 51 (params -> params , expresion .)
    ,               reduce using rule 51 (params -> params , expresion .)
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69


state 137

    (46) expresion -> expresion @ TYPEID . OBJECTID . ( params )
    (48) expresion -> expresion @ TYPEID . OBJECTID . ( )
    (               shift and go to state 151


state 138

    (47) expresion -> expresion . OBJECTID ( params . )
    (51) params -> params . , expresion
    )               shift and go to state 152
    ,               shift and go to state 118


state 139

    (49) expresion -> expresion . OBJECTID ( ) .
    =               reduce using rule 49 (expresion -> expresion . OBJECTID ( ) .)
    LE              reduce using rule 49 (expresion -> expresion . OBJECTID ( ) .)
    <               reduce using rule 49 (expresion -> expresion . OBJECTID ( ) .)
    /               reduce using rule 49 (expresion -> expresion . OBJECTID ( ) .)
    *               reduce using rule 49 (expresion -> expresion . OBJECTID ( ) .)
    -               reduce using rule 49 (expresion -> expresion . OBJECTID ( ) .)
    +               reduce using rule 49 (expresion -> expresion . OBJECTID ( ) .)
    @               reduce using rule 49 (expresion -> expresion . OBJECTID ( ) .)
    .               reduce using rule 49 (expresion -> expresion . OBJECTID ( ) .)
    ;               reduce using rule 49 (expresion -> expresion . OBJECTID ( ) .)
    )               reduce using rule 49 (expresion -> expresion . OBJECTID ( ) .)
    OF              reduce using rule 49 (expresion -> expresion . OBJECTID ( ) .)
    LOOP            reduce using rule 49 (expresion -> expresion . OBJECTID ( ) .)
    THEN            reduce using rule 49 (expresion -> expresion . OBJECTID ( ) .)
    ,               reduce using rule 49 (expresion -> expresion . OBJECTID ( ) .)
    }               reduce using rule 49 (expresion -> expresion . OBJECTID ( ) .)
    POOL            reduce using rule 49 (expresion -> expresion . OBJECTID ( ) .)
    ELSE            reduce using rule 49 (expresion -> expresion . OBJECTID ( ) .)
    IN              reduce using rule 49 (expresion -> expresion . OBJECTID ( ) .)
    FI              reduce using rule 49 (expresion -> expresion . OBJECTID ( ) .)


state 140

    (38) expresion -> CASE expresion OF ramas ESAC .
    =               reduce using rule 38 (expresion -> CASE expresion OF ramas ESAC .)
    LE              reduce using rule 38 (expresion -> CASE expresion OF ramas ESAC .)
    <               reduce using rule 38 (expresion -> CASE expresion OF ramas ESAC .)
    /               reduce using rule 38 (expresion -> CASE expresion OF ramas ESAC .)
    *               reduce using rule 38 (expresion -> CASE expresion OF ramas ESAC .)
    -               reduce using rule 38 (expresion -> CASE expresion OF ramas ESAC .)
    +               reduce using rule 38 (expresion -> CASE expresion OF ramas ESAC .)
    @               reduce using rule 38 (expresion -> CASE expresion OF ramas ESAC .)
    .               reduce using rule 38 (expresion -> CASE expresion OF ramas ESAC .)
    ;               reduce using rule 38 (expresion -> CASE expresion OF ramas ESAC .)
    )               reduce using rule 38 (expresion -> CASE expresion OF ramas ESAC .)
    OF              reduce using rule 38 (expresion -> CASE expresion OF ramas ESAC .)
    LOOP            reduce using rule 38 (expresion -> CASE expresion OF ramas ESAC .)
    THEN            reduce using rule 38 (expresion -> CASE expresion OF ramas ESAC .)
    ,               reduce using rule 38 (expresion -> CASE expresion OF ramas ESAC .)
    }               reduce using rule 38 (expresion -> CASE expresion OF ramas ESAC .)
    POOL            reduce using rule 38 (expresion -> CASE expresion OF ramas ESAC .)
    ELSE            reduce using rule 38 (expresion -> CASE expresion OF ramas ESAC .)
    IN              reduce using rule 38 (expresion -> CASE expresion OF ramas ESAC .)
    FI              reduce using rule 38 (expresion -> CASE expresion OF ramas ESAC .)


state 141

    (60) ramas -> ramas rama . ;
    ;               shift and go to state 153


state 142

    (61) ramas -> rama ; .
    ESAC            reduce using rule 61 (ramas -> rama ; .)
    OBJECTID        reduce using rule 61 (ramas -> rama ; .)


state 143

    (62) rama -> OBJECTID : . TYPEID DARROW expresion
    TYPEID          shift and go to state 154


state 144

    (57) decllet -> OBJECTID : TYPEID ASSIGN . expresion
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . OBJECTID
    (24) expresion -> . ( expresion )
    (25) expresion -> . NOT expresion
    (26) expresion -> . expresion = expresion
    (27) expresion -> . expresion LE expresion
    (28) expresion -> . expresion < expresion
    (29) expresion -> . ~ expresion
    (30) expresion -> . expresion / expresion
    (31) expresion -> . expresion * expresion
    (32) expresion -> . expresion - expresion
    (33) expresion -> . expresion + expresion
    (34) expresion -> . ISVOID error
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . error TYPEID
    (37) expresion -> . NEW TYPEID
    (38) expresion -> . CASE expresion OF ramas ESAC
    (39) expresion -> . LET declslet IN expresion
    (40) expresion -> . { expresiones }
    (41) expresion -> . WHILE expresion LOOP expresion POOL
    (42) expresion -> . WHILE expresion LOOP error LOOP
    (43) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (44) expresion -> . OBJECTID ( params )
    (45) expresion -> . OBJECTID ( )
    (46) expresion -> . expresion @ TYPEID . OBJECTID ( params )
    (47) expresion -> . expresion . OBJECTID ( params )
    (48) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (49) expresion -> . expresion . OBJECTID ( )
    (50) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    error           shift and go to state 47
    NEW             shift and go to state 48
    CASE            shift and go to state 49
    LET             shift and go to state 50
    {               shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53

    expresion                      shift and go to state 155

state 145

    (41) expresion -> WHILE expresion LOOP expresion POOL .
    =               reduce using rule 41 (expresion -> WHILE expresion LOOP expresion POOL .)
    LE              reduce using rule 41 (expresion -> WHILE expresion LOOP expresion POOL .)
    <               reduce using rule 41 (expresion -> WHILE expresion LOOP expresion POOL .)
    /               reduce using rule 41 (expresion -> WHILE expresion LOOP expresion POOL .)
    *               reduce using rule 41 (expresion -> WHILE expresion LOOP expresion POOL .)
    -               reduce using rule 41 (expresion -> WHILE expresion LOOP expresion POOL .)
    +               reduce using rule 41 (expresion -> WHILE expresion LOOP expresion POOL .)
    @               reduce using rule 41 (expresion -> WHILE expresion LOOP expresion POOL .)
    .               reduce using rule 41 (expresion -> WHILE expresion LOOP expresion POOL .)
    ;               reduce using rule 41 (expresion -> WHILE expresion LOOP expresion POOL .)
    )               reduce using rule 41 (expresion -> WHILE expresion LOOP expresion POOL .)
    OF              reduce using rule 41 (expresion -> WHILE expresion LOOP expresion POOL .)
    LOOP            reduce using rule 41 (expresion -> WHILE expresion LOOP expresion POOL .)
    THEN            reduce using rule 41 (expresion -> WHILE expresion LOOP expresion POOL .)
    ,               reduce using rule 41 (expresion -> WHILE expresion LOOP expresion POOL .)
    }               reduce using rule 41 (expresion -> WHILE expresion LOOP expresion POOL .)
    POOL            reduce using rule 41 (expresion -> WHILE expresion LOOP expresion POOL .)
    ELSE            reduce using rule 41 (expresion -> WHILE expresion LOOP expresion POOL .)
    IN              reduce using rule 41 (expresion -> WHILE expresion LOOP expresion POOL .)
    FI              reduce using rule 41 (expresion -> WHILE expresion LOOP expresion POOL .)


state 146

    (42) expresion -> WHILE expresion LOOP error LOOP .
    =               reduce using rule 42 (expresion -> WHILE expresion LOOP error LOOP .)
    LE              reduce using rule 42 (expresion -> WHILE expresion LOOP error LOOP .)
    <               reduce using rule 42 (expresion -> WHILE expresion LOOP error LOOP .)
    /               reduce using rule 42 (expresion -> WHILE expresion LOOP error LOOP .)
    *               reduce using rule 42 (expresion -> WHILE expresion LOOP error LOOP .)
    -               reduce using rule 42 (expresion -> WHILE expresion LOOP error LOOP .)
    +               reduce using rule 42 (expresion -> WHILE expresion LOOP error LOOP .)
    @               reduce using rule 42 (expresion -> WHILE expresion LOOP error LOOP .)
    .               reduce using rule 42 (expresion -> WHILE expresion LOOP error LOOP .)
    ;               reduce using rule 42 (expresion -> WHILE expresion LOOP error LOOP .)
    )               reduce using rule 42 (expresion -> WHILE expresion LOOP error LOOP .)
    OF              reduce using rule 42 (expresion -> WHILE expresion LOOP error LOOP .)
    LOOP            reduce using rule 42 (expresion -> WHILE expresion LOOP error LOOP .)
    THEN            reduce using rule 42 (expresion -> WHILE expresion LOOP error LOOP .)
    ,               reduce using rule 42 (expresion -> WHILE expresion LOOP error LOOP .)
    }               reduce using rule 42 (expresion -> WHILE expresion LOOP error LOOP .)
    POOL            reduce using rule 42 (expresion -> WHILE expresion LOOP error LOOP .)
    ELSE            reduce using rule 42 (expresion -> WHILE expresion LOOP error LOOP .)
    IN              reduce using rule 42 (expresion -> WHILE expresion LOOP error LOOP .)
    FI              reduce using rule 42 (expresion -> WHILE expresion LOOP error LOOP .)


state 147

    (43) expresion -> IF expresion THEN expresion ELSE . expresion FI
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . OBJECTID
    (24) expresion -> . ( expresion )
    (25) expresion -> . NOT expresion
    (26) expresion -> . expresion = expresion
    (27) expresion -> . expresion LE expresion
    (28) expresion -> . expresion < expresion
    (29) expresion -> . ~ expresion
    (30) expresion -> . expresion / expresion
    (31) expresion -> . expresion * expresion
    (32) expresion -> . expresion - expresion
    (33) expresion -> . expresion + expresion
    (34) expresion -> . ISVOID error
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . error TYPEID
    (37) expresion -> . NEW TYPEID
    (38) expresion -> . CASE expresion OF ramas ESAC
    (39) expresion -> . LET declslet IN expresion
    (40) expresion -> . { expresiones }
    (41) expresion -> . WHILE expresion LOOP expresion POOL
    (42) expresion -> . WHILE expresion LOOP error LOOP
    (43) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (44) expresion -> . OBJECTID ( params )
    (45) expresion -> . OBJECTID ( )
    (46) expresion -> . expresion @ TYPEID . OBJECTID ( params )
    (47) expresion -> . expresion . OBJECTID ( params )
    (48) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (49) expresion -> . expresion . OBJECTID ( )
    (50) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    error           shift and go to state 47
    NEW             shift and go to state 48
    CASE            shift and go to state 49
    LET             shift and go to state 50
    {               shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53

    expresion                      shift and go to state 156

state 148

    (12) componente -> OBJECTID ( error ) : TYPEID { expresion } .
    ;               reduce using rule 12 (componente -> OBJECTID ( error ) : TYPEID { expresion } .)


state 149

    (13) componente -> OBJECTID ( formales ) : TYPEID { error } .
    ;               reduce using rule 13 (componente -> OBJECTID ( formales ) : TYPEID { error } .)


state 150

    (14) componente -> OBJECTID ( formales ) : TYPEID { expresion } .
    ;               reduce using rule 14 (componente -> OBJECTID ( formales ) : TYPEID { expresion } .)


state 151

    (46) expresion -> expresion @ TYPEID . OBJECTID ( . params )
    (48) expresion -> expresion @ TYPEID . OBJECTID ( . )
    (51) params -> . params , expresion
    (52) params -> . expresion
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . OBJECTID
    (24) expresion -> . ( expresion )
    (25) expresion -> . NOT expresion
    (26) expresion -> . expresion = expresion
    (27) expresion -> . expresion LE expresion
    (28) expresion -> . expresion < expresion
    (29) expresion -> . ~ expresion
    (30) expresion -> . expresion / expresion
    (31) expresion -> . expresion * expresion
    (32) expresion -> . expresion - expresion
    (33) expresion -> . expresion + expresion
    (34) expresion -> . ISVOID error
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . error TYPEID
    (37) expresion -> . NEW TYPEID
    (38) expresion -> . CASE expresion OF ramas ESAC
    (39) expresion -> . LET declslet IN expresion
    (40) expresion -> . { expresiones }
    (41) expresion -> . WHILE expresion LOOP expresion POOL
    (42) expresion -> . WHILE expresion LOOP error LOOP
    (43) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (44) expresion -> . OBJECTID ( params )
    (45) expresion -> . OBJECTID ( )
    (46) expresion -> . expresion @ TYPEID . OBJECTID ( params )
    (47) expresion -> . expresion . OBJECTID ( params )
    (48) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (49) expresion -> . expresion . OBJECTID ( )
    (50) expresion -> . OBJECTID ASSIGN expresion
    )               shift and go to state 158
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    error           shift and go to state 47
    NEW             shift and go to state 48
    CASE            shift and go to state 49
    LET             shift and go to state 50
    {               shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53

    expresion                      shift and go to state 91
    params                         shift and go to state 157

state 152

    (47) expresion -> expresion . OBJECTID ( params ) .
    =               reduce using rule 47 (expresion -> expresion . OBJECTID ( params ) .)
    LE              reduce using rule 47 (expresion -> expresion . OBJECTID ( params ) .)
    <               reduce using rule 47 (expresion -> expresion . OBJECTID ( params ) .)
    /               reduce using rule 47 (expresion -> expresion . OBJECTID ( params ) .)
    *               reduce using rule 47 (expresion -> expresion . OBJECTID ( params ) .)
    -               reduce using rule 47 (expresion -> expresion . OBJECTID ( params ) .)
    +               reduce using rule 47 (expresion -> expresion . OBJECTID ( params ) .)
    @               reduce using rule 47 (expresion -> expresion . OBJECTID ( params ) .)
    .               reduce using rule 47 (expresion -> expresion . OBJECTID ( params ) .)
    ;               reduce using rule 47 (expresion -> expresion . OBJECTID ( params ) .)
    )               reduce using rule 47 (expresion -> expresion . OBJECTID ( params ) .)
    OF              reduce using rule 47 (expresion -> expresion . OBJECTID ( params ) .)
    LOOP            reduce using rule 47 (expresion -> expresion . OBJECTID ( params ) .)
    THEN            reduce using rule 47 (expresion -> expresion . OBJECTID ( params ) .)
    ,               reduce using rule 47 (expresion -> expresion . OBJECTID ( params ) .)
    }               reduce using rule 47 (expresion -> expresion . OBJECTID ( params ) .)
    POOL            reduce using rule 47 (expresion -> expresion . OBJECTID ( params ) .)
    ELSE            reduce using rule 47 (expresion -> expresion . OBJECTID ( params ) .)
    IN              reduce using rule 47 (expresion -> expresion . OBJECTID ( params ) .)
    FI              reduce using rule 47 (expresion -> expresion . OBJECTID ( params ) .)


state 153

    (60) ramas -> ramas rama ; .
    ESAC            reduce using rule 60 (ramas -> ramas rama ; .)
    OBJECTID        reduce using rule 60 (ramas -> ramas rama ; .)


state 154

    (62) rama -> OBJECTID : TYPEID . DARROW expresion
    DARROW          shift and go to state 159


state 155

    (57) decllet -> OBJECTID : TYPEID ASSIGN expresion .
    (26) expresion -> expresion . = expresion
    (27) expresion -> expresion . LE expresion
    (28) expresion -> expresion . < expresion
    (30) expresion -> expresion . / expresion
    (31) expresion -> expresion . * expresion
    (32) expresion -> expresion . - expresion
    (33) expresion -> expresion . + expresion
    (46) expresion -> expresion . @ TYPEID . OBJECTID ( params )
    (47) expresion -> expresion . . OBJECTID ( params )
    (48) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (49) expresion -> expresion . . OBJECTID ( )
    IN              reduce using rule 57 (decllet -> OBJECTID : TYPEID ASSIGN expresion .)
    ,               reduce using rule 57 (decllet -> OBJECTID : TYPEID ASSIGN expresion .)
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69


state 156

    (43) expresion -> IF expresion THEN expresion ELSE expresion . FI
    (26) expresion -> expresion . = expresion
    (27) expresion -> expresion . LE expresion
    (28) expresion -> expresion . < expresion
    (30) expresion -> expresion . / expresion
    (31) expresion -> expresion . * expresion
    (32) expresion -> expresion . - expresion
    (33) expresion -> expresion . + expresion
    (46) expresion -> expresion . @ TYPEID . OBJECTID ( params )
    (47) expresion -> expresion . . OBJECTID ( params )
    (48) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (49) expresion -> expresion . . OBJECTID ( )
    FI              shift and go to state 160
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69


state 157

    (46) expresion -> expresion @ TYPEID . OBJECTID ( params . )
    (51) params -> params . , expresion
    )               shift and go to state 161
    ,               shift and go to state 118


state 158

    (48) expresion -> expresion @ TYPEID . OBJECTID ( ) .
    =               reduce using rule 48 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    LE              reduce using rule 48 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    <               reduce using rule 48 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    /               reduce using rule 48 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    *               reduce using rule 48 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    -               reduce using rule 48 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    +               reduce using rule 48 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    @               reduce using rule 48 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    .               reduce using rule 48 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    ;               reduce using rule 48 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    )               reduce using rule 48 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    OF              reduce using rule 48 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    LOOP            reduce using rule 48 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    THEN            reduce using rule 48 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    ,               reduce using rule 48 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    }               reduce using rule 48 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    POOL            reduce using rule 48 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    ELSE            reduce using rule 48 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    IN              reduce using rule 48 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)
    FI              reduce using rule 48 (expresion -> expresion @ TYPEID . OBJECTID ( ) .)


state 159

    (62) rama -> OBJECTID : TYPEID DARROW . expresion
    (20) expresion -> . BOOL_CONST
    (21) expresion -> . STR_CONST
    (22) expresion -> . INT_CONST
    (23) expresion -> . OBJECTID
    (24) expresion -> . ( expresion )
    (25) expresion -> . NOT expresion
    (26) expresion -> . expresion = expresion
    (27) expresion -> . expresion LE expresion
    (28) expresion -> . expresion < expresion
    (29) expresion -> . ~ expresion
    (30) expresion -> . expresion / expresion
    (31) expresion -> . expresion * expresion
    (32) expresion -> . expresion - expresion
    (33) expresion -> . expresion + expresion
    (34) expresion -> . ISVOID error
    (35) expresion -> . ISVOID expresion
    (36) expresion -> . error TYPEID
    (37) expresion -> . NEW TYPEID
    (38) expresion -> . CASE expresion OF ramas ESAC
    (39) expresion -> . LET declslet IN expresion
    (40) expresion -> . { expresiones }
    (41) expresion -> . WHILE expresion LOOP expresion POOL
    (42) expresion -> . WHILE expresion LOOP error LOOP
    (43) expresion -> . IF expresion THEN expresion ELSE expresion FI
    (44) expresion -> . OBJECTID ( params )
    (45) expresion -> . OBJECTID ( )
    (46) expresion -> . expresion @ TYPEID . OBJECTID ( params )
    (47) expresion -> . expresion . OBJECTID ( params )
    (48) expresion -> . expresion @ TYPEID . OBJECTID ( )
    (49) expresion -> . expresion . OBJECTID ( )
    (50) expresion -> . OBJECTID ASSIGN expresion
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    error           shift and go to state 47
    NEW             shift and go to state 48
    CASE            shift and go to state 49
    LET             shift and go to state 50
    {               shift and go to state 51
    WHILE           shift and go to state 52
    IF              shift and go to state 53

    expresion                      shift and go to state 162

state 160

    (43) expresion -> IF expresion THEN expresion ELSE expresion FI .
    =               reduce using rule 43 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    LE              reduce using rule 43 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    <               reduce using rule 43 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    /               reduce using rule 43 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    *               reduce using rule 43 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    -               reduce using rule 43 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    +               reduce using rule 43 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    @               reduce using rule 43 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    .               reduce using rule 43 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    ;               reduce using rule 43 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    )               reduce using rule 43 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    OF              reduce using rule 43 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    LOOP            reduce using rule 43 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    THEN            reduce using rule 43 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    ,               reduce using rule 43 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    }               reduce using rule 43 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    POOL            reduce using rule 43 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    ELSE            reduce using rule 43 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    IN              reduce using rule 43 (expresion -> IF expresion THEN expresion ELSE expresion FI .)
    FI              reduce using rule 43 (expresion -> IF expresion THEN expresion ELSE expresion FI .)


state 161

    (46) expresion -> expresion @ TYPEID . OBJECTID ( params ) .
    =               reduce using rule 46 (expresion -> expresion @ TYPEID . OBJECTID ( params ) .)
    LE              reduce using rule 46 (expresion -> expresion @ TYPEID . OBJECTID ( params ) .)
    <               reduce using rule 46 (expresion -> expresion @ TYPEID . OBJECTID ( params ) .)
    /               reduce using rule 46 (expresion -> expresion @ TYPEID . OBJECTID ( params ) .)
    *               reduce using rule 46 (expresion -> expresion @ TYPEID . OBJECTID ( params ) .)
    -               reduce using rule 46 (expresion -> expresion @ TYPEID . OBJECTID ( params ) .)
    +               reduce using rule 46 (expresion -> expresion @ TYPEID . OBJECTID ( params ) .)
    @               reduce using rule 46 (expresion -> expresion @ TYPEID . OBJECTID ( params ) .)
    .               reduce using rule 46 (expresion -> expresion @ TYPEID . OBJECTID ( params ) .)
    ;               reduce using rule 46 (expresion -> expresion @ TYPEID . OBJECTID ( params ) .)
    )               reduce using rule 46 (expresion -> expresion @ TYPEID . OBJECTID ( params ) .)
    OF              reduce using rule 46 (expresion -> expresion @ TYPEID . OBJECTID ( params ) .)
    LOOP            reduce using rule 46 (expresion -> expresion @ TYPEID . OBJECTID ( params ) .)
    THEN            reduce using rule 46 (expresion -> expresion @ TYPEID . OBJECTID ( params ) .)
    ,               reduce using rule 46 (expresion -> expresion @ TYPEID . OBJECTID ( params ) .)
    }               reduce using rule 46 (expresion -> expresion @ TYPEID . OBJECTID ( params ) .)
    POOL            reduce using rule 46 (expresion -> expresion @ TYPEID . OBJECTID ( params ) .)
    ELSE            reduce using rule 46 (expresion -> expresion @ TYPEID . OBJECTID ( params ) .)
    IN              reduce using rule 46 (expresion -> expresion @ TYPEID . OBJECTID ( params ) .)
    FI              reduce using rule 46 (expresion -> expresion @ TYPEID . OBJECTID ( params ) .)


state 162

    (62) rama -> OBJECTID : TYPEID DARROW expresion .
    (26) expresion -> expresion . = expresion
    (27) expresion -> expresion . LE expresion
    (28) expresion -> expresion . < expresion
    (30) expresion -> expresion . / expresion
    (31) expresion -> expresion . * expresion
    (32) expresion -> expresion . - expresion
    (33) expresion -> expresion . + expresion
    (46) expresion -> expresion . @ TYPEID . OBJECTID ( params )
    (47) expresion -> expresion . . OBJECTID ( params )
    (48) expresion -> expresion . @ TYPEID . OBJECTID ( )
    (49) expresion -> expresion . . OBJECTID ( )
    ;               reduce using rule 62 (rama -> OBJECTID : TYPEID DARROW expresion .)
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69


Conflicts:

shift/reduce conflict for = in state 124 resolved as shift
shift/reduce conflict for LE in state 124 resolved as shift
shift/reduce conflict for < in state 124 resolved as shift
shift/reduce conflict for / in state 124 resolved as shift
shift/reduce conflict for * in state 124 resolved as shift
shift/reduce conflict for - in state 124 resolved as shift
shift/reduce conflict for + in state 124 resolved as shift
shift/reduce conflict for @ in state 124 resolved as shift
shift/reduce conflict for . in state 124 resolved as shift