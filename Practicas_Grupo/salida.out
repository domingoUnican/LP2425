Grammar:

Rule 0     S' -> asignation
Rule 1     asignation -> OBJECTID = expression
Rule 2     expression -> INT_CONST
Rule 3     expression -> expression - expression
Rule 4     expression -> expression + expression

Unused terminals:

    LE
    LET
    ASSIGN
    TYPEID
    STR_CONST
    CASE
    DARROW
    CLASS
    POOL
    FI
    BOOL_CONST
    IN
    OF
    IF
    THEN
    NEW
    ISVOID
    INHERITS
    ELSE
    NOT
    WHILE
    LOOP
    ESAC

Terminals, with rules where they appear:

+                    : 4
-                    : 3
=                    : 1
ASSIGN               : 
BOOL_CONST           : 
CASE                 : 
CLASS                : 
DARROW               : 
ELSE                 : 
ESAC                 : 
FI                   : 
IF                   : 
IN                   : 
INHERITS             : 
INT_CONST            : 2
ISVOID               : 
LE                   : 
LET                  : 
LOOP                 : 
NEW                  : 
NOT                  : 
OBJECTID             : 1
OF                   : 
POOL                 : 
STR_CONST            : 
THEN                 : 
TYPEID               : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear:

asignation           : 0
expression           : 1 3 3 4 4


state 0

    (0) S' -> . asignation
    (1) asignation -> . OBJECTID = expression
    OBJECTID        shift and go to state 2

    asignation                     shift and go to state 1

state 1

    (0) S' -> asignation .


state 2

    (1) asignation -> OBJECTID . = expression
    =               shift and go to state 3


state 3

    (1) asignation -> OBJECTID = . expression
    (2) expression -> . INT_CONST
    (3) expression -> . expression - expression
    (4) expression -> . expression + expression
    INT_CONST       shift and go to state 5

    expression                     shift and go to state 4

state 4

    (1) asignation -> OBJECTID = expression .
    (3) expression -> expression . - expression
    (4) expression -> expression . + expression
    $end            reduce using rule 1 (asignation -> OBJECTID = expression .)
    -               shift and go to state 6
    +               shift and go to state 7


state 5

    (2) expression -> INT_CONST .
    -               reduce using rule 2 (expression -> INT_CONST .)
    +               reduce using rule 2 (expression -> INT_CONST .)
    $end            reduce using rule 2 (expression -> INT_CONST .)


state 6

    (3) expression -> expression - . expression
    (2) expression -> . INT_CONST
    (3) expression -> . expression - expression
    (4) expression -> . expression + expression
    INT_CONST       shift and go to state 5

    expression                     shift and go to state 8

state 7

    (4) expression -> expression + . expression
    (2) expression -> . INT_CONST
    (3) expression -> . expression - expression
    (4) expression -> . expression + expression
    INT_CONST       shift and go to state 5

    expression                     shift and go to state 9

state 8

    (3) expression -> expression - expression .
    (3) expression -> expression . - expression
    (4) expression -> expression . + expression
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    $end            reduce using rule 3 (expression -> expression - expression .)
    -               shift and go to state 6
    +               shift and go to state 7


state 9

    (4) expression -> expression + expression .
    (3) expression -> expression . - expression
    (4) expression -> expression . + expression
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    $end            reduce using rule 4 (expression -> expression + expression .)
    -               shift and go to state 6
    +               shift and go to state 7


Conflicts:

shift/reduce conflict for - in state 8 resolved as shift
shift/reduce conflict for + in state 8 resolved as shift
shift/reduce conflict for - in state 9 resolved as shift
shift/reduce conflict for + in state 9 resolved as shift