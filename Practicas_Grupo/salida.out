Grammar:

Rule 0     S' -> programa
Rule 1     programa -> clases
Rule 2     clases -> clases clase
Rule 3     clases -> clase
Rule 4     clase -> CLASS TYPEID INHERITS TYPEID { caracteristicas } ;
Rule 5     clase -> CLASS TYPEID { caracteristicas } ;
Rule 6     caracteristica -> OBJECTID ( formales ) : TYPEID { expressions } ;
Rule 7     caracteristica -> OBJECTID ( formal ) : TYPEID { expressions } ;
Rule 8     caracteristica -> OBJECTID ( ) : TYPEID { expressions } ;
Rule 9     caracteristica -> OBJECTID : TYPEID ;
Rule 10    caracteristica -> OBJECTID : TYPEID ASSIGN expression ;
Rule 11    caracteristicas -> caracteristicas caracteristica
Rule 12    caracteristicas -> caracteristica
Rule 13    formal -> OBJECTID : TYPEID
Rule 14    formales -> formales , formal
Rule 15    formales -> formal
Rule 16    expression -> BOOL_CONST
Rule 17    expression -> STR_CONST
Rule 18    expression -> INT_CONST
Rule 19    expression -> { expressions }
Rule 20    expression -> NEW TYPEID
Rule 21    expression -> CASE expression OF casos ; ESAC
Rule 22    expression -> LET OBJECTID : TYPEID asignacion , variables IN expressions
Rule 23    expression -> LET OBJECTID : TYPEID , variables IN expressions
Rule 24    expression -> LET OBJECTID : TYPEID asignacion IN expressions
Rule 25    expression -> LET OBJECTID : TYPEID IN expressions
Rule 26    expression -> WHILE expression LOOP expression POOL
Rule 27    expression -> IF expression THEN expression ELSE expression FI
Rule 28    expression -> OBJECTID ( expressions )
Rule 29    expression -> OBJECTID ( )
Rule 30    expression -> expression . OBJECTID ( expressions )
Rule 31    expression -> expression . OBJECTID ( )
Rule 32    expression -> expression @ TYPEID . OBJECTID ( expressions )
Rule 33    expression -> expression @ TYPEID . OBJECTID ( )
Rule 34    expression -> ~ expression  [precedence=right, level=3]
Rule 35    expression -> ISVOID expression  [precedence=right, level=4]
Rule 36    expression -> NOT expression  [precedence=right, level=8]
Rule 37    expression -> ( expression )
Rule 38    expression -> expression = expression  [precedence=nonassoc, level=7]
Rule 39    expression -> expression LE expression  [precedence=nonassoc, level=7]
Rule 40    expression -> expression < expression  [precedence=nonassoc, level=7]
Rule 41    expression -> expression / expression  [precedence=left, level=5]
Rule 42    expression -> expression * expression  [precedence=left, level=5]
Rule 43    expression -> expression - expression  [precedence=left, level=6]
Rule 44    expression -> expression + expression  [precedence=left, level=6]
Rule 45    expression -> OBJECTID ASSIGN expression  [precedence=right, level=9]
Rule 46    asignacion -> ASSIGN expression  [precedence=right, level=9]
Rule 47    variable -> OBJECTID : TYPEID asignacion
Rule 48    variable -> OBJECTID : TYPEID
Rule 49    variables -> variable ,
Rule 50    variables -> variables OBJECTID : TYPEID asignacion
Rule 51    variables -> variables OBJECTID : TYPEID
Rule 52    casos -> casos OBJECTID : TYPEID DARROW expression
Rule 53    casos -> OBJECTID : TYPEID DARROW expression
Rule 54    expressions -> expressions expression ;
Rule 55    expressions -> expression ;

Terminals, with rules where they appear:

(                    : 6 7 8 28 29 30 31 32 33 37
)                    : 6 7 8 28 29 30 31 32 33 37
*                    : 42
+                    : 44
,                    : 14 22 23 49
-                    : 43
.                    : 30 31 32 33
/                    : 41
:                    : 6 7 8 9 10 13 22 23 24 25 47 48 50 51 52 53
;                    : 4 5 6 7 8 9 10 21 54 55
<                    : 40
=                    : 38
@                    : 32 33
ASSIGN               : 10 45 46
BOOL_CONST           : 16
CASE                 : 21
CLASS                : 4 5
DARROW               : 52 53
ELSE                 : 27
ESAC                 : 21
FI                   : 27
IF                   : 27
IN                   : 22 23 24 25
INHERITS             : 4
INT_CONST            : 18
ISVOID               : 35
LE                   : 39
LET                  : 22 23 24 25
LOOP                 : 26
NEW                  : 20
NOT                  : 36
OBJECTID             : 6 7 8 9 10 13 22 23 24 25 28 29 30 31 32 33 45 47 48 50 51 52 53
OF                   : 21
POOL                 : 26
STR_CONST            : 17
THEN                 : 27
TYPEID               : 4 4 5 6 7 8 9 10 13 20 22 23 24 25 32 33 47 48 50 51 52 53
WHILE                : 26
error                : 
{                    : 4 5 6 7 8 19
}                    : 4 5 6 7 8 19
~                    : 34

Nonterminals, with rules where they appear:

asignacion           : 22 24 47 50
caracteristica       : 11 12
caracteristicas      : 4 5 11
casos                : 21 52
clase                : 2 3
clases               : 1 2
expression           : 10 21 26 26 27 27 27 30 31 32 33 34 35 36 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 46 52 53 54 55
expressions          : 6 7 8 19 22 23 24 25 28 30 32 54
formal               : 7 14 15
formales             : 6 14
programa             : 0
variable             : 49
variables            : 22 23 50 51


state 0

    (0) S' -> . programa
    (1) programa -> . clases
    (2) clases -> . clases clase
    (3) clases -> . clase
    (4) clase -> . CLASS TYPEID INHERITS TYPEID { caracteristicas } ;
    (5) clase -> . CLASS TYPEID { caracteristicas } ;
    CLASS           shift and go to state 4

    programa                       shift and go to state 1
    clases                         shift and go to state 2
    clase                          shift and go to state 3

state 1

    (0) S' -> programa .


state 2

    (1) programa -> clases .
    (2) clases -> clases . clase
    (4) clase -> . CLASS TYPEID INHERITS TYPEID { caracteristicas } ;
    (5) clase -> . CLASS TYPEID { caracteristicas } ;
    $end            reduce using rule 1 (programa -> clases .)
    CLASS           shift and go to state 4

    clase                          shift and go to state 5

state 3

    (3) clases -> clase .
    CLASS           reduce using rule 3 (clases -> clase .)
    $end            reduce using rule 3 (clases -> clase .)


state 4

    (4) clase -> CLASS . TYPEID INHERITS TYPEID { caracteristicas } ;
    (5) clase -> CLASS . TYPEID { caracteristicas } ;
    TYPEID          shift and go to state 6


state 5

    (2) clases -> clases clase .
    CLASS           reduce using rule 2 (clases -> clases clase .)
    $end            reduce using rule 2 (clases -> clases clase .)


state 6

    (4) clase -> CLASS TYPEID . INHERITS TYPEID { caracteristicas } ;
    (5) clase -> CLASS TYPEID . { caracteristicas } ;
    INHERITS        shift and go to state 7
    {               shift and go to state 8


state 7

    (4) clase -> CLASS TYPEID INHERITS . TYPEID { caracteristicas } ;
    TYPEID          shift and go to state 9


state 8

    (5) clase -> CLASS TYPEID { . caracteristicas } ;
    (11) caracteristicas -> . caracteristicas caracteristica
    (12) caracteristicas -> . caracteristica
    (6) caracteristica -> . OBJECTID ( formales ) : TYPEID { expressions } ;
    (7) caracteristica -> . OBJECTID ( formal ) : TYPEID { expressions } ;
    (8) caracteristica -> . OBJECTID ( ) : TYPEID { expressions } ;
    (9) caracteristica -> . OBJECTID : TYPEID ;
    (10) caracteristica -> . OBJECTID : TYPEID ASSIGN expression ;
    OBJECTID        shift and go to state 12

    caracteristicas                shift and go to state 10
    caracteristica                 shift and go to state 11

state 9

    (4) clase -> CLASS TYPEID INHERITS TYPEID . { caracteristicas } ;
    {               shift and go to state 13


state 10

    (5) clase -> CLASS TYPEID { caracteristicas . } ;
    (11) caracteristicas -> caracteristicas . caracteristica
    (6) caracteristica -> . OBJECTID ( formales ) : TYPEID { expressions } ;
    (7) caracteristica -> . OBJECTID ( formal ) : TYPEID { expressions } ;
    (8) caracteristica -> . OBJECTID ( ) : TYPEID { expressions } ;
    (9) caracteristica -> . OBJECTID : TYPEID ;
    (10) caracteristica -> . OBJECTID : TYPEID ASSIGN expression ;
    }               shift and go to state 14
    OBJECTID        shift and go to state 12

    caracteristica                 shift and go to state 15

state 11

    (12) caracteristicas -> caracteristica .
    }               reduce using rule 12 (caracteristicas -> caracteristica .)
    OBJECTID        reduce using rule 12 (caracteristicas -> caracteristica .)


state 12

    (6) caracteristica -> OBJECTID . ( formales ) : TYPEID { expressions } ;
    (7) caracteristica -> OBJECTID . ( formal ) : TYPEID { expressions } ;
    (8) caracteristica -> OBJECTID . ( ) : TYPEID { expressions } ;
    (9) caracteristica -> OBJECTID . : TYPEID ;
    (10) caracteristica -> OBJECTID . : TYPEID ASSIGN expression ;
    (               shift and go to state 16
    :               shift and go to state 17


state 13

    (4) clase -> CLASS TYPEID INHERITS TYPEID { . caracteristicas } ;
    (11) caracteristicas -> . caracteristicas caracteristica
    (12) caracteristicas -> . caracteristica
    (6) caracteristica -> . OBJECTID ( formales ) : TYPEID { expressions } ;
    (7) caracteristica -> . OBJECTID ( formal ) : TYPEID { expressions } ;
    (8) caracteristica -> . OBJECTID ( ) : TYPEID { expressions } ;
    (9) caracteristica -> . OBJECTID : TYPEID ;
    (10) caracteristica -> . OBJECTID : TYPEID ASSIGN expression ;
    OBJECTID        shift and go to state 12

    caracteristicas                shift and go to state 18
    caracteristica                 shift and go to state 11

state 14

    (5) clase -> CLASS TYPEID { caracteristicas } . ;
    ;               shift and go to state 19


state 15

    (11) caracteristicas -> caracteristicas caracteristica .
    }               reduce using rule 11 (caracteristicas -> caracteristicas caracteristica .)
    OBJECTID        reduce using rule 11 (caracteristicas -> caracteristicas caracteristica .)


state 16

    (6) caracteristica -> OBJECTID ( . formales ) : TYPEID { expressions } ;
    (7) caracteristica -> OBJECTID ( . formal ) : TYPEID { expressions } ;
    (8) caracteristica -> OBJECTID ( . ) : TYPEID { expressions } ;
    (14) formales -> . formales , formal
    (15) formales -> . formal
    (13) formal -> . OBJECTID : TYPEID
    )               shift and go to state 22
    OBJECTID        shift and go to state 20

    formales                       shift and go to state 21
    formal                         shift and go to state 23

state 17

    (9) caracteristica -> OBJECTID : . TYPEID ;
    (10) caracteristica -> OBJECTID : . TYPEID ASSIGN expression ;
    TYPEID          shift and go to state 24


state 18

    (4) clase -> CLASS TYPEID INHERITS TYPEID { caracteristicas . } ;
    (11) caracteristicas -> caracteristicas . caracteristica
    (6) caracteristica -> . OBJECTID ( formales ) : TYPEID { expressions } ;
    (7) caracteristica -> . OBJECTID ( formal ) : TYPEID { expressions } ;
    (8) caracteristica -> . OBJECTID ( ) : TYPEID { expressions } ;
    (9) caracteristica -> . OBJECTID : TYPEID ;
    (10) caracteristica -> . OBJECTID : TYPEID ASSIGN expression ;
    }               shift and go to state 25
    OBJECTID        shift and go to state 12

    caracteristica                 shift and go to state 15

state 19

    (5) clase -> CLASS TYPEID { caracteristicas } ; .
    CLASS           reduce using rule 5 (clase -> CLASS TYPEID { caracteristicas } ; .)
    $end            reduce using rule 5 (clase -> CLASS TYPEID { caracteristicas } ; .)


state 20

    (13) formal -> OBJECTID . : TYPEID
    :               shift and go to state 26


state 21

    (6) caracteristica -> OBJECTID ( formales . ) : TYPEID { expressions } ;
    (14) formales -> formales . , formal
    )               shift and go to state 27
    ,               shift and go to state 28


state 22

    (8) caracteristica -> OBJECTID ( ) . : TYPEID { expressions } ;
    :               shift and go to state 29


state 23

    (7) caracteristica -> OBJECTID ( formal . ) : TYPEID { expressions } ;
    (15) formales -> formal .
  ! shift/reduce conflict for ) resolved as shift
    )               shift and go to state 30
    ,               reduce using rule 15 (formales -> formal .)


state 24

    (9) caracteristica -> OBJECTID : TYPEID . ;
    (10) caracteristica -> OBJECTID : TYPEID . ASSIGN expression ;
    ;               shift and go to state 31
    ASSIGN          shift and go to state 32


state 25

    (4) clase -> CLASS TYPEID INHERITS TYPEID { caracteristicas } . ;
    ;               shift and go to state 33


state 26

    (13) formal -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 34


state 27

    (6) caracteristica -> OBJECTID ( formales ) . : TYPEID { expressions } ;
    :               shift and go to state 35


state 28

    (14) formales -> formales , . formal
    (13) formal -> . OBJECTID : TYPEID
    OBJECTID        shift and go to state 20

    formal                         shift and go to state 36

state 29

    (8) caracteristica -> OBJECTID ( ) : . TYPEID { expressions } ;
    TYPEID          shift and go to state 37


state 30

    (7) caracteristica -> OBJECTID ( formal ) . : TYPEID { expressions } ;
    :               shift and go to state 38


state 31

    (9) caracteristica -> OBJECTID : TYPEID ; .
    }               reduce using rule 9 (caracteristica -> OBJECTID : TYPEID ; .)
    OBJECTID        reduce using rule 9 (caracteristica -> OBJECTID : TYPEID ; .)


state 32

    (10) caracteristica -> OBJECTID : TYPEID ASSIGN . expression ;
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 40

state 33

    (4) clase -> CLASS TYPEID INHERITS TYPEID { caracteristicas } ; .
    CLASS           reduce using rule 4 (clase -> CLASS TYPEID INHERITS TYPEID { caracteristicas } ; .)
    $end            reduce using rule 4 (clase -> CLASS TYPEID INHERITS TYPEID { caracteristicas } ; .)


state 34

    (13) formal -> OBJECTID : TYPEID .
    )               reduce using rule 13 (formal -> OBJECTID : TYPEID .)
    ,               reduce using rule 13 (formal -> OBJECTID : TYPEID .)


state 35

    (6) caracteristica -> OBJECTID ( formales ) : . TYPEID { expressions } ;
    TYPEID          shift and go to state 54


state 36

    (14) formales -> formales , formal .
    )               reduce using rule 14 (formales -> formales , formal .)
    ,               reduce using rule 14 (formales -> formales , formal .)


state 37

    (8) caracteristica -> OBJECTID ( ) : TYPEID . { expressions } ;
    {               shift and go to state 55


state 38

    (7) caracteristica -> OBJECTID ( formal ) : . TYPEID { expressions } ;
    TYPEID          shift and go to state 56


state 39

    (28) expression -> OBJECTID . ( expressions )
    (29) expression -> OBJECTID . ( )
    (45) expression -> OBJECTID . ASSIGN expression
    (               shift and go to state 57
    ASSIGN          shift and go to state 58


state 40

    (10) caracteristica -> OBJECTID : TYPEID ASSIGN expression . ;
    (30) expression -> expression . . OBJECTID ( expressions )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (38) expression -> expression . = expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . < expression
    (41) expression -> expression . / expression
    (42) expression -> expression . * expression
    (43) expression -> expression . - expression
    (44) expression -> expression . + expression
    ;               shift and go to state 59
    .               shift and go to state 60
    @               shift and go to state 61
    =               shift and go to state 62
    LE              shift and go to state 63
    <               shift and go to state 64
    /               shift and go to state 65
    *               shift and go to state 66
    -               shift and go to state 67
    +               shift and go to state 68


state 41

    (16) expression -> BOOL_CONST .
    ;               reduce using rule 16 (expression -> BOOL_CONST .)
    .               reduce using rule 16 (expression -> BOOL_CONST .)
    @               reduce using rule 16 (expression -> BOOL_CONST .)
    =               reduce using rule 16 (expression -> BOOL_CONST .)
    LE              reduce using rule 16 (expression -> BOOL_CONST .)
    <               reduce using rule 16 (expression -> BOOL_CONST .)
    /               reduce using rule 16 (expression -> BOOL_CONST .)
    *               reduce using rule 16 (expression -> BOOL_CONST .)
    -               reduce using rule 16 (expression -> BOOL_CONST .)
    +               reduce using rule 16 (expression -> BOOL_CONST .)
    OF              reduce using rule 16 (expression -> BOOL_CONST .)
    LOOP            reduce using rule 16 (expression -> BOOL_CONST .)
    THEN            reduce using rule 16 (expression -> BOOL_CONST .)
    )               reduce using rule 16 (expression -> BOOL_CONST .)
    POOL            reduce using rule 16 (expression -> BOOL_CONST .)
    ELSE            reduce using rule 16 (expression -> BOOL_CONST .)
    ,               reduce using rule 16 (expression -> BOOL_CONST .)
    IN              reduce using rule 16 (expression -> BOOL_CONST .)
    OBJECTID        reduce using rule 16 (expression -> BOOL_CONST .)
    FI              reduce using rule 16 (expression -> BOOL_CONST .)


state 42

    (17) expression -> STR_CONST .
    ;               reduce using rule 17 (expression -> STR_CONST .)
    .               reduce using rule 17 (expression -> STR_CONST .)
    @               reduce using rule 17 (expression -> STR_CONST .)
    =               reduce using rule 17 (expression -> STR_CONST .)
    LE              reduce using rule 17 (expression -> STR_CONST .)
    <               reduce using rule 17 (expression -> STR_CONST .)
    /               reduce using rule 17 (expression -> STR_CONST .)
    *               reduce using rule 17 (expression -> STR_CONST .)
    -               reduce using rule 17 (expression -> STR_CONST .)
    +               reduce using rule 17 (expression -> STR_CONST .)
    OF              reduce using rule 17 (expression -> STR_CONST .)
    LOOP            reduce using rule 17 (expression -> STR_CONST .)
    THEN            reduce using rule 17 (expression -> STR_CONST .)
    )               reduce using rule 17 (expression -> STR_CONST .)
    POOL            reduce using rule 17 (expression -> STR_CONST .)
    ELSE            reduce using rule 17 (expression -> STR_CONST .)
    ,               reduce using rule 17 (expression -> STR_CONST .)
    IN              reduce using rule 17 (expression -> STR_CONST .)
    OBJECTID        reduce using rule 17 (expression -> STR_CONST .)
    FI              reduce using rule 17 (expression -> STR_CONST .)


state 43

    (18) expression -> INT_CONST .
    ;               reduce using rule 18 (expression -> INT_CONST .)
    .               reduce using rule 18 (expression -> INT_CONST .)
    @               reduce using rule 18 (expression -> INT_CONST .)
    =               reduce using rule 18 (expression -> INT_CONST .)
    LE              reduce using rule 18 (expression -> INT_CONST .)
    <               reduce using rule 18 (expression -> INT_CONST .)
    /               reduce using rule 18 (expression -> INT_CONST .)
    *               reduce using rule 18 (expression -> INT_CONST .)
    -               reduce using rule 18 (expression -> INT_CONST .)
    +               reduce using rule 18 (expression -> INT_CONST .)
    OF              reduce using rule 18 (expression -> INT_CONST .)
    LOOP            reduce using rule 18 (expression -> INT_CONST .)
    THEN            reduce using rule 18 (expression -> INT_CONST .)
    )               reduce using rule 18 (expression -> INT_CONST .)
    POOL            reduce using rule 18 (expression -> INT_CONST .)
    ELSE            reduce using rule 18 (expression -> INT_CONST .)
    ,               reduce using rule 18 (expression -> INT_CONST .)
    IN              reduce using rule 18 (expression -> INT_CONST .)
    OBJECTID        reduce using rule 18 (expression -> INT_CONST .)
    FI              reduce using rule 18 (expression -> INT_CONST .)


state 44

    (19) expression -> { . expressions }
    (54) expressions -> . expressions expression ;
    (55) expressions -> . expression ;
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expressions                    shift and go to state 69
    expression                     shift and go to state 70

state 45

    (20) expression -> NEW . TYPEID
    TYPEID          shift and go to state 71


state 46

    (21) expression -> CASE . expression OF casos ; ESAC
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 72

state 47

    (22) expression -> LET . OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> LET . OBJECTID : TYPEID , variables IN expressions
    (24) expression -> LET . OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> LET . OBJECTID : TYPEID IN expressions
    OBJECTID        shift and go to state 73


state 48

    (26) expression -> WHILE . expression LOOP expression POOL
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 74

state 49

    (27) expression -> IF . expression THEN expression ELSE expression FI
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 75

state 50

    (37) expression -> ( . expression )
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 76

state 51

    (34) expression -> ~ . expression
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 77

state 52

    (35) expression -> ISVOID . expression
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 78

state 53

    (36) expression -> NOT . expression
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 79

state 54

    (6) caracteristica -> OBJECTID ( formales ) : TYPEID . { expressions } ;
    {               shift and go to state 80


state 55

    (8) caracteristica -> OBJECTID ( ) : TYPEID { . expressions } ;
    (54) expressions -> . expressions expression ;
    (55) expressions -> . expression ;
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expressions                    shift and go to state 81
    expression                     shift and go to state 70

state 56

    (7) caracteristica -> OBJECTID ( formal ) : TYPEID . { expressions } ;
    {               shift and go to state 82


state 57

    (28) expression -> OBJECTID ( . expressions )
    (29) expression -> OBJECTID ( . )
    (54) expressions -> . expressions expression ;
    (55) expressions -> . expression ;
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    )               shift and go to state 84
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expressions                    shift and go to state 83
    expression                     shift and go to state 70

state 58

    (45) expression -> OBJECTID ASSIGN . expression
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 85

state 59

    (10) caracteristica -> OBJECTID : TYPEID ASSIGN expression ; .
    }               reduce using rule 10 (caracteristica -> OBJECTID : TYPEID ASSIGN expression ; .)
    OBJECTID        reduce using rule 10 (caracteristica -> OBJECTID : TYPEID ASSIGN expression ; .)


state 60

    (30) expression -> expression . . OBJECTID ( expressions )
    (31) expression -> expression . . OBJECTID ( )
    OBJECTID        shift and go to state 86


state 61

    (32) expression -> expression @ . TYPEID . OBJECTID ( expressions )
    (33) expression -> expression @ . TYPEID . OBJECTID ( )
    TYPEID          shift and go to state 87


state 62

    (38) expression -> expression = . expression
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 88

state 63

    (39) expression -> expression LE . expression
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 89

state 64

    (40) expression -> expression < . expression
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 90

state 65

    (41) expression -> expression / . expression
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 91

state 66

    (42) expression -> expression * . expression
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 92

state 67

    (43) expression -> expression - . expression
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 93

state 68

    (44) expression -> expression + . expression
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 94

state 69

    (19) expression -> { expressions . }
    (54) expressions -> expressions . expression ;
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    }               shift and go to state 95
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 96

state 70

    (55) expressions -> expression . ;
    (30) expression -> expression . . OBJECTID ( expressions )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (38) expression -> expression . = expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . < expression
    (41) expression -> expression . / expression
    (42) expression -> expression . * expression
    (43) expression -> expression . - expression
    (44) expression -> expression . + expression
    ;               shift and go to state 97
    .               shift and go to state 60
    @               shift and go to state 61
    =               shift and go to state 62
    LE              shift and go to state 63
    <               shift and go to state 64
    /               shift and go to state 65
    *               shift and go to state 66
    -               shift and go to state 67
    +               shift and go to state 68


state 71

    (20) expression -> NEW TYPEID .
    ;               reduce using rule 20 (expression -> NEW TYPEID .)
    .               reduce using rule 20 (expression -> NEW TYPEID .)
    @               reduce using rule 20 (expression -> NEW TYPEID .)
    =               reduce using rule 20 (expression -> NEW TYPEID .)
    LE              reduce using rule 20 (expression -> NEW TYPEID .)
    <               reduce using rule 20 (expression -> NEW TYPEID .)
    /               reduce using rule 20 (expression -> NEW TYPEID .)
    *               reduce using rule 20 (expression -> NEW TYPEID .)
    -               reduce using rule 20 (expression -> NEW TYPEID .)
    +               reduce using rule 20 (expression -> NEW TYPEID .)
    OF              reduce using rule 20 (expression -> NEW TYPEID .)
    LOOP            reduce using rule 20 (expression -> NEW TYPEID .)
    THEN            reduce using rule 20 (expression -> NEW TYPEID .)
    )               reduce using rule 20 (expression -> NEW TYPEID .)
    POOL            reduce using rule 20 (expression -> NEW TYPEID .)
    ELSE            reduce using rule 20 (expression -> NEW TYPEID .)
    ,               reduce using rule 20 (expression -> NEW TYPEID .)
    IN              reduce using rule 20 (expression -> NEW TYPEID .)
    OBJECTID        reduce using rule 20 (expression -> NEW TYPEID .)
    FI              reduce using rule 20 (expression -> NEW TYPEID .)


state 72

    (21) expression -> CASE expression . OF casos ; ESAC
    (30) expression -> expression . . OBJECTID ( expressions )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (38) expression -> expression . = expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . < expression
    (41) expression -> expression . / expression
    (42) expression -> expression . * expression
    (43) expression -> expression . - expression
    (44) expression -> expression . + expression
    OF              shift and go to state 98
    .               shift and go to state 60
    @               shift and go to state 61
    =               shift and go to state 62
    LE              shift and go to state 63
    <               shift and go to state 64
    /               shift and go to state 65
    *               shift and go to state 66
    -               shift and go to state 67
    +               shift and go to state 68


state 73

    (22) expression -> LET OBJECTID . : TYPEID asignacion , variables IN expressions
    (23) expression -> LET OBJECTID . : TYPEID , variables IN expressions
    (24) expression -> LET OBJECTID . : TYPEID asignacion IN expressions
    (25) expression -> LET OBJECTID . : TYPEID IN expressions
    :               shift and go to state 99


state 74

    (26) expression -> WHILE expression . LOOP expression POOL
    (30) expression -> expression . . OBJECTID ( expressions )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (38) expression -> expression . = expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . < expression
    (41) expression -> expression . / expression
    (42) expression -> expression . * expression
    (43) expression -> expression . - expression
    (44) expression -> expression . + expression
    LOOP            shift and go to state 100
    .               shift and go to state 60
    @               shift and go to state 61
    =               shift and go to state 62
    LE              shift and go to state 63
    <               shift and go to state 64
    /               shift and go to state 65
    *               shift and go to state 66
    -               shift and go to state 67
    +               shift and go to state 68


state 75

    (27) expression -> IF expression . THEN expression ELSE expression FI
    (30) expression -> expression . . OBJECTID ( expressions )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (38) expression -> expression . = expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . < expression
    (41) expression -> expression . / expression
    (42) expression -> expression . * expression
    (43) expression -> expression . - expression
    (44) expression -> expression . + expression
    THEN            shift and go to state 101
    .               shift and go to state 60
    @               shift and go to state 61
    =               shift and go to state 62
    LE              shift and go to state 63
    <               shift and go to state 64
    /               shift and go to state 65
    *               shift and go to state 66
    -               shift and go to state 67
    +               shift and go to state 68


state 76

    (37) expression -> ( expression . )
    (30) expression -> expression . . OBJECTID ( expressions )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (38) expression -> expression . = expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . < expression
    (41) expression -> expression . / expression
    (42) expression -> expression . * expression
    (43) expression -> expression . - expression
    (44) expression -> expression . + expression
    )               shift and go to state 102
    .               shift and go to state 60
    @               shift and go to state 61
    =               shift and go to state 62
    LE              shift and go to state 63
    <               shift and go to state 64
    /               shift and go to state 65
    *               shift and go to state 66
    -               shift and go to state 67
    +               shift and go to state 68


state 77

    (34) expression -> ~ expression .
    (30) expression -> expression . . OBJECTID ( expressions )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (38) expression -> expression . = expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . < expression
    (41) expression -> expression . / expression
    (42) expression -> expression . * expression
    (43) expression -> expression . - expression
    (44) expression -> expression . + expression
    ;               reduce using rule 34 (expression -> ~ expression .)
    .               reduce using rule 34 (expression -> ~ expression .)
    @               reduce using rule 34 (expression -> ~ expression .)
    OF              reduce using rule 34 (expression -> ~ expression .)
    LOOP            reduce using rule 34 (expression -> ~ expression .)
    THEN            reduce using rule 34 (expression -> ~ expression .)
    )               reduce using rule 34 (expression -> ~ expression .)
    POOL            reduce using rule 34 (expression -> ~ expression .)
    ELSE            reduce using rule 34 (expression -> ~ expression .)
    ,               reduce using rule 34 (expression -> ~ expression .)
    IN              reduce using rule 34 (expression -> ~ expression .)
    OBJECTID        reduce using rule 34 (expression -> ~ expression .)
    FI              reduce using rule 34 (expression -> ~ expression .)
    =               shift and go to state 62
    LE              shift and go to state 63
    <               shift and go to state 64
    /               shift and go to state 65
    *               shift and go to state 66
    -               shift and go to state 67
    +               shift and go to state 68


state 78

    (35) expression -> ISVOID expression .
    (30) expression -> expression . . OBJECTID ( expressions )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (38) expression -> expression . = expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . < expression
    (41) expression -> expression . / expression
    (42) expression -> expression . * expression
    (43) expression -> expression . - expression
    (44) expression -> expression . + expression
    ;               reduce using rule 35 (expression -> ISVOID expression .)
    .               reduce using rule 35 (expression -> ISVOID expression .)
    @               reduce using rule 35 (expression -> ISVOID expression .)
    OF              reduce using rule 35 (expression -> ISVOID expression .)
    LOOP            reduce using rule 35 (expression -> ISVOID expression .)
    THEN            reduce using rule 35 (expression -> ISVOID expression .)
    )               reduce using rule 35 (expression -> ISVOID expression .)
    POOL            reduce using rule 35 (expression -> ISVOID expression .)
    ELSE            reduce using rule 35 (expression -> ISVOID expression .)
    ,               reduce using rule 35 (expression -> ISVOID expression .)
    IN              reduce using rule 35 (expression -> ISVOID expression .)
    OBJECTID        reduce using rule 35 (expression -> ISVOID expression .)
    FI              reduce using rule 35 (expression -> ISVOID expression .)
    =               shift and go to state 62
    LE              shift and go to state 63
    <               shift and go to state 64
    /               shift and go to state 65
    *               shift and go to state 66
    -               shift and go to state 67
    +               shift and go to state 68


state 79

    (36) expression -> NOT expression .
    (30) expression -> expression . . OBJECTID ( expressions )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (38) expression -> expression . = expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . < expression
    (41) expression -> expression . / expression
    (42) expression -> expression . * expression
    (43) expression -> expression . - expression
    (44) expression -> expression . + expression
    ;               reduce using rule 36 (expression -> NOT expression .)
    .               reduce using rule 36 (expression -> NOT expression .)
    @               reduce using rule 36 (expression -> NOT expression .)
    =               reduce using rule 36 (expression -> NOT expression .)
    LE              reduce using rule 36 (expression -> NOT expression .)
    <               reduce using rule 36 (expression -> NOT expression .)
    /               reduce using rule 36 (expression -> NOT expression .)
    *               reduce using rule 36 (expression -> NOT expression .)
    -               reduce using rule 36 (expression -> NOT expression .)
    +               reduce using rule 36 (expression -> NOT expression .)
    OF              reduce using rule 36 (expression -> NOT expression .)
    LOOP            reduce using rule 36 (expression -> NOT expression .)
    THEN            reduce using rule 36 (expression -> NOT expression .)
    )               reduce using rule 36 (expression -> NOT expression .)
    POOL            reduce using rule 36 (expression -> NOT expression .)
    ELSE            reduce using rule 36 (expression -> NOT expression .)
    ,               reduce using rule 36 (expression -> NOT expression .)
    IN              reduce using rule 36 (expression -> NOT expression .)
    OBJECTID        reduce using rule 36 (expression -> NOT expression .)
    FI              reduce using rule 36 (expression -> NOT expression .)


state 80

    (6) caracteristica -> OBJECTID ( formales ) : TYPEID { . expressions } ;
    (54) expressions -> . expressions expression ;
    (55) expressions -> . expression ;
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expressions                    shift and go to state 103
    expression                     shift and go to state 70

state 81

    (8) caracteristica -> OBJECTID ( ) : TYPEID { expressions . } ;
    (54) expressions -> expressions . expression ;
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    }               shift and go to state 104
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 96

state 82

    (7) caracteristica -> OBJECTID ( formal ) : TYPEID { . expressions } ;
    (54) expressions -> . expressions expression ;
    (55) expressions -> . expression ;
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expressions                    shift and go to state 105
    expression                     shift and go to state 70

state 83

    (28) expression -> OBJECTID ( expressions . )
    (54) expressions -> expressions . expression ;
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    )               shift and go to state 106
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 96

state 84

    (29) expression -> OBJECTID ( ) .
    ;               reduce using rule 29 (expression -> OBJECTID ( ) .)
    .               reduce using rule 29 (expression -> OBJECTID ( ) .)
    @               reduce using rule 29 (expression -> OBJECTID ( ) .)
    =               reduce using rule 29 (expression -> OBJECTID ( ) .)
    LE              reduce using rule 29 (expression -> OBJECTID ( ) .)
    <               reduce using rule 29 (expression -> OBJECTID ( ) .)
    /               reduce using rule 29 (expression -> OBJECTID ( ) .)
    *               reduce using rule 29 (expression -> OBJECTID ( ) .)
    -               reduce using rule 29 (expression -> OBJECTID ( ) .)
    +               reduce using rule 29 (expression -> OBJECTID ( ) .)
    OF              reduce using rule 29 (expression -> OBJECTID ( ) .)
    LOOP            reduce using rule 29 (expression -> OBJECTID ( ) .)
    THEN            reduce using rule 29 (expression -> OBJECTID ( ) .)
    )               reduce using rule 29 (expression -> OBJECTID ( ) .)
    POOL            reduce using rule 29 (expression -> OBJECTID ( ) .)
    ELSE            reduce using rule 29 (expression -> OBJECTID ( ) .)
    ,               reduce using rule 29 (expression -> OBJECTID ( ) .)
    IN              reduce using rule 29 (expression -> OBJECTID ( ) .)
    OBJECTID        reduce using rule 29 (expression -> OBJECTID ( ) .)
    FI              reduce using rule 29 (expression -> OBJECTID ( ) .)


state 85

    (45) expression -> OBJECTID ASSIGN expression .
    (30) expression -> expression . . OBJECTID ( expressions )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (38) expression -> expression . = expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . < expression
    (41) expression -> expression . / expression
    (42) expression -> expression . * expression
    (43) expression -> expression . - expression
    (44) expression -> expression . + expression
    ;               reduce using rule 45 (expression -> OBJECTID ASSIGN expression .)
    .               reduce using rule 45 (expression -> OBJECTID ASSIGN expression .)
    @               reduce using rule 45 (expression -> OBJECTID ASSIGN expression .)
    =               reduce using rule 45 (expression -> OBJECTID ASSIGN expression .)
    LE              reduce using rule 45 (expression -> OBJECTID ASSIGN expression .)
    <               reduce using rule 45 (expression -> OBJECTID ASSIGN expression .)
    /               reduce using rule 45 (expression -> OBJECTID ASSIGN expression .)
    *               reduce using rule 45 (expression -> OBJECTID ASSIGN expression .)
    -               reduce using rule 45 (expression -> OBJECTID ASSIGN expression .)
    +               reduce using rule 45 (expression -> OBJECTID ASSIGN expression .)
    OF              reduce using rule 45 (expression -> OBJECTID ASSIGN expression .)
    LOOP            reduce using rule 45 (expression -> OBJECTID ASSIGN expression .)
    THEN            reduce using rule 45 (expression -> OBJECTID ASSIGN expression .)
    )               reduce using rule 45 (expression -> OBJECTID ASSIGN expression .)
    POOL            reduce using rule 45 (expression -> OBJECTID ASSIGN expression .)
    ELSE            reduce using rule 45 (expression -> OBJECTID ASSIGN expression .)
    ,               reduce using rule 45 (expression -> OBJECTID ASSIGN expression .)
    IN              reduce using rule 45 (expression -> OBJECTID ASSIGN expression .)
    OBJECTID        reduce using rule 45 (expression -> OBJECTID ASSIGN expression .)
    FI              reduce using rule 45 (expression -> OBJECTID ASSIGN expression .)


state 86

    (30) expression -> expression . OBJECTID . ( expressions )
    (31) expression -> expression . OBJECTID . ( )
    (               shift and go to state 107


state 87

    (32) expression -> expression @ TYPEID . . OBJECTID ( expressions )
    (33) expression -> expression @ TYPEID . . OBJECTID ( )
    .               shift and go to state 108


state 88

    (38) expression -> expression = expression .
    (30) expression -> expression . . OBJECTID ( expressions )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (38) expression -> expression . = expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . < expression
    (41) expression -> expression . / expression
    (42) expression -> expression . * expression
    (43) expression -> expression . - expression
    (44) expression -> expression . + expression
    ;               reduce using rule 38 (expression -> expression = expression .)
    .               reduce using rule 38 (expression -> expression = expression .)
    @               reduce using rule 38 (expression -> expression = expression .)
    =               reduce using rule 38 (expression -> expression = expression .)
    LE              reduce using rule 38 (expression -> expression = expression .)
    <               reduce using rule 38 (expression -> expression = expression .)
    /               reduce using rule 38 (expression -> expression = expression .)
    *               reduce using rule 38 (expression -> expression = expression .)
    -               reduce using rule 38 (expression -> expression = expression .)
    +               reduce using rule 38 (expression -> expression = expression .)
    OF              reduce using rule 38 (expression -> expression = expression .)
    LOOP            reduce using rule 38 (expression -> expression = expression .)
    THEN            reduce using rule 38 (expression -> expression = expression .)
    )               reduce using rule 38 (expression -> expression = expression .)
    POOL            reduce using rule 38 (expression -> expression = expression .)
    ELSE            reduce using rule 38 (expression -> expression = expression .)
    ,               reduce using rule 38 (expression -> expression = expression .)
    IN              reduce using rule 38 (expression -> expression = expression .)
    OBJECTID        reduce using rule 38 (expression -> expression = expression .)
    FI              reduce using rule 38 (expression -> expression = expression .)


state 89

    (39) expression -> expression LE expression .
    (30) expression -> expression . . OBJECTID ( expressions )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (38) expression -> expression . = expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . < expression
    (41) expression -> expression . / expression
    (42) expression -> expression . * expression
    (43) expression -> expression . - expression
    (44) expression -> expression . + expression
    ;               reduce using rule 39 (expression -> expression LE expression .)
    .               reduce using rule 39 (expression -> expression LE expression .)
    @               reduce using rule 39 (expression -> expression LE expression .)
    =               reduce using rule 39 (expression -> expression LE expression .)
    LE              reduce using rule 39 (expression -> expression LE expression .)
    <               reduce using rule 39 (expression -> expression LE expression .)
    /               reduce using rule 39 (expression -> expression LE expression .)
    *               reduce using rule 39 (expression -> expression LE expression .)
    -               reduce using rule 39 (expression -> expression LE expression .)
    +               reduce using rule 39 (expression -> expression LE expression .)
    OF              reduce using rule 39 (expression -> expression LE expression .)
    LOOP            reduce using rule 39 (expression -> expression LE expression .)
    THEN            reduce using rule 39 (expression -> expression LE expression .)
    )               reduce using rule 39 (expression -> expression LE expression .)
    POOL            reduce using rule 39 (expression -> expression LE expression .)
    ELSE            reduce using rule 39 (expression -> expression LE expression .)
    ,               reduce using rule 39 (expression -> expression LE expression .)
    IN              reduce using rule 39 (expression -> expression LE expression .)
    OBJECTID        reduce using rule 39 (expression -> expression LE expression .)
    FI              reduce using rule 39 (expression -> expression LE expression .)


state 90

    (40) expression -> expression < expression .
    (30) expression -> expression . . OBJECTID ( expressions )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (38) expression -> expression . = expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . < expression
    (41) expression -> expression . / expression
    (42) expression -> expression . * expression
    (43) expression -> expression . - expression
    (44) expression -> expression . + expression
    ;               reduce using rule 40 (expression -> expression < expression .)
    .               reduce using rule 40 (expression -> expression < expression .)
    @               reduce using rule 40 (expression -> expression < expression .)
    =               reduce using rule 40 (expression -> expression < expression .)
    LE              reduce using rule 40 (expression -> expression < expression .)
    <               reduce using rule 40 (expression -> expression < expression .)
    /               reduce using rule 40 (expression -> expression < expression .)
    *               reduce using rule 40 (expression -> expression < expression .)
    -               reduce using rule 40 (expression -> expression < expression .)
    +               reduce using rule 40 (expression -> expression < expression .)
    OF              reduce using rule 40 (expression -> expression < expression .)
    LOOP            reduce using rule 40 (expression -> expression < expression .)
    THEN            reduce using rule 40 (expression -> expression < expression .)
    )               reduce using rule 40 (expression -> expression < expression .)
    POOL            reduce using rule 40 (expression -> expression < expression .)
    ELSE            reduce using rule 40 (expression -> expression < expression .)
    ,               reduce using rule 40 (expression -> expression < expression .)
    IN              reduce using rule 40 (expression -> expression < expression .)
    OBJECTID        reduce using rule 40 (expression -> expression < expression .)
    FI              reduce using rule 40 (expression -> expression < expression .)


state 91

    (41) expression -> expression / expression .
    (30) expression -> expression . . OBJECTID ( expressions )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (38) expression -> expression . = expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . < expression
    (41) expression -> expression . / expression
    (42) expression -> expression . * expression
    (43) expression -> expression . - expression
    (44) expression -> expression . + expression
    ;               reduce using rule 41 (expression -> expression / expression .)
    .               reduce using rule 41 (expression -> expression / expression .)
    @               reduce using rule 41 (expression -> expression / expression .)
    /               reduce using rule 41 (expression -> expression / expression .)
    *               reduce using rule 41 (expression -> expression / expression .)
    OF              reduce using rule 41 (expression -> expression / expression .)
    LOOP            reduce using rule 41 (expression -> expression / expression .)
    THEN            reduce using rule 41 (expression -> expression / expression .)
    )               reduce using rule 41 (expression -> expression / expression .)
    POOL            reduce using rule 41 (expression -> expression / expression .)
    ELSE            reduce using rule 41 (expression -> expression / expression .)
    ,               reduce using rule 41 (expression -> expression / expression .)
    IN              reduce using rule 41 (expression -> expression / expression .)
    OBJECTID        reduce using rule 41 (expression -> expression / expression .)
    FI              reduce using rule 41 (expression -> expression / expression .)
    =               shift and go to state 62
    LE              shift and go to state 63
    <               shift and go to state 64
    -               shift and go to state 67
    +               shift and go to state 68


state 92

    (42) expression -> expression * expression .
    (30) expression -> expression . . OBJECTID ( expressions )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (38) expression -> expression . = expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . < expression
    (41) expression -> expression . / expression
    (42) expression -> expression . * expression
    (43) expression -> expression . - expression
    (44) expression -> expression . + expression
    ;               reduce using rule 42 (expression -> expression * expression .)
    .               reduce using rule 42 (expression -> expression * expression .)
    @               reduce using rule 42 (expression -> expression * expression .)
    /               reduce using rule 42 (expression -> expression * expression .)
    *               reduce using rule 42 (expression -> expression * expression .)
    OF              reduce using rule 42 (expression -> expression * expression .)
    LOOP            reduce using rule 42 (expression -> expression * expression .)
    THEN            reduce using rule 42 (expression -> expression * expression .)
    )               reduce using rule 42 (expression -> expression * expression .)
    POOL            reduce using rule 42 (expression -> expression * expression .)
    ELSE            reduce using rule 42 (expression -> expression * expression .)
    ,               reduce using rule 42 (expression -> expression * expression .)
    IN              reduce using rule 42 (expression -> expression * expression .)
    OBJECTID        reduce using rule 42 (expression -> expression * expression .)
    FI              reduce using rule 42 (expression -> expression * expression .)
    =               shift and go to state 62
    LE              shift and go to state 63
    <               shift and go to state 64
    -               shift and go to state 67
    +               shift and go to state 68


state 93

    (43) expression -> expression - expression .
    (30) expression -> expression . . OBJECTID ( expressions )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (38) expression -> expression . = expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . < expression
    (41) expression -> expression . / expression
    (42) expression -> expression . * expression
    (43) expression -> expression . - expression
    (44) expression -> expression . + expression
    ;               reduce using rule 43 (expression -> expression - expression .)
    .               reduce using rule 43 (expression -> expression - expression .)
    @               reduce using rule 43 (expression -> expression - expression .)
    /               reduce using rule 43 (expression -> expression - expression .)
    *               reduce using rule 43 (expression -> expression - expression .)
    -               reduce using rule 43 (expression -> expression - expression .)
    +               reduce using rule 43 (expression -> expression - expression .)
    OF              reduce using rule 43 (expression -> expression - expression .)
    LOOP            reduce using rule 43 (expression -> expression - expression .)
    THEN            reduce using rule 43 (expression -> expression - expression .)
    )               reduce using rule 43 (expression -> expression - expression .)
    POOL            reduce using rule 43 (expression -> expression - expression .)
    ELSE            reduce using rule 43 (expression -> expression - expression .)
    ,               reduce using rule 43 (expression -> expression - expression .)
    IN              reduce using rule 43 (expression -> expression - expression .)
    OBJECTID        reduce using rule 43 (expression -> expression - expression .)
    FI              reduce using rule 43 (expression -> expression - expression .)
    =               shift and go to state 62
    LE              shift and go to state 63
    <               shift and go to state 64


state 94

    (44) expression -> expression + expression .
    (30) expression -> expression . . OBJECTID ( expressions )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (38) expression -> expression . = expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . < expression
    (41) expression -> expression . / expression
    (42) expression -> expression . * expression
    (43) expression -> expression . - expression
    (44) expression -> expression . + expression
    ;               reduce using rule 44 (expression -> expression + expression .)
    .               reduce using rule 44 (expression -> expression + expression .)
    @               reduce using rule 44 (expression -> expression + expression .)
    /               reduce using rule 44 (expression -> expression + expression .)
    *               reduce using rule 44 (expression -> expression + expression .)
    -               reduce using rule 44 (expression -> expression + expression .)
    +               reduce using rule 44 (expression -> expression + expression .)
    OF              reduce using rule 44 (expression -> expression + expression .)
    LOOP            reduce using rule 44 (expression -> expression + expression .)
    THEN            reduce using rule 44 (expression -> expression + expression .)
    )               reduce using rule 44 (expression -> expression + expression .)
    POOL            reduce using rule 44 (expression -> expression + expression .)
    ELSE            reduce using rule 44 (expression -> expression + expression .)
    ,               reduce using rule 44 (expression -> expression + expression .)
    IN              reduce using rule 44 (expression -> expression + expression .)
    OBJECTID        reduce using rule 44 (expression -> expression + expression .)
    FI              reduce using rule 44 (expression -> expression + expression .)
    =               shift and go to state 62
    LE              shift and go to state 63
    <               shift and go to state 64


state 95

    (19) expression -> { expressions } .
    ;               reduce using rule 19 (expression -> { expressions } .)
    .               reduce using rule 19 (expression -> { expressions } .)
    @               reduce using rule 19 (expression -> { expressions } .)
    =               reduce using rule 19 (expression -> { expressions } .)
    LE              reduce using rule 19 (expression -> { expressions } .)
    <               reduce using rule 19 (expression -> { expressions } .)
    /               reduce using rule 19 (expression -> { expressions } .)
    *               reduce using rule 19 (expression -> { expressions } .)
    -               reduce using rule 19 (expression -> { expressions } .)
    +               reduce using rule 19 (expression -> { expressions } .)
    OF              reduce using rule 19 (expression -> { expressions } .)
    LOOP            reduce using rule 19 (expression -> { expressions } .)
    THEN            reduce using rule 19 (expression -> { expressions } .)
    )               reduce using rule 19 (expression -> { expressions } .)
    POOL            reduce using rule 19 (expression -> { expressions } .)
    ELSE            reduce using rule 19 (expression -> { expressions } .)
    ,               reduce using rule 19 (expression -> { expressions } .)
    IN              reduce using rule 19 (expression -> { expressions } .)
    OBJECTID        reduce using rule 19 (expression -> { expressions } .)
    FI              reduce using rule 19 (expression -> { expressions } .)


state 96

    (54) expressions -> expressions expression . ;
    (30) expression -> expression . . OBJECTID ( expressions )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (38) expression -> expression . = expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . < expression
    (41) expression -> expression . / expression
    (42) expression -> expression . * expression
    (43) expression -> expression . - expression
    (44) expression -> expression . + expression
    ;               shift and go to state 109
    .               shift and go to state 60
    @               shift and go to state 61
    =               shift and go to state 62
    LE              shift and go to state 63
    <               shift and go to state 64
    /               shift and go to state 65
    *               shift and go to state 66
    -               shift and go to state 67
    +               shift and go to state 68


state 97

    (55) expressions -> expression ; .
    }               reduce using rule 55 (expressions -> expression ; .)
    BOOL_CONST      reduce using rule 55 (expressions -> expression ; .)
    STR_CONST       reduce using rule 55 (expressions -> expression ; .)
    INT_CONST       reduce using rule 55 (expressions -> expression ; .)
    {               reduce using rule 55 (expressions -> expression ; .)
    NEW             reduce using rule 55 (expressions -> expression ; .)
    CASE            reduce using rule 55 (expressions -> expression ; .)
    LET             reduce using rule 55 (expressions -> expression ; .)
    WHILE           reduce using rule 55 (expressions -> expression ; .)
    IF              reduce using rule 55 (expressions -> expression ; .)
    OBJECTID        reduce using rule 55 (expressions -> expression ; .)
    ~               reduce using rule 55 (expressions -> expression ; .)
    ISVOID          reduce using rule 55 (expressions -> expression ; .)
    NOT             reduce using rule 55 (expressions -> expression ; .)
    (               reduce using rule 55 (expressions -> expression ; .)
    )               reduce using rule 55 (expressions -> expression ; .)
    ;               reduce using rule 55 (expressions -> expression ; .)
    .               reduce using rule 55 (expressions -> expression ; .)
    @               reduce using rule 55 (expressions -> expression ; .)
    =               reduce using rule 55 (expressions -> expression ; .)
    LE              reduce using rule 55 (expressions -> expression ; .)
    <               reduce using rule 55 (expressions -> expression ; .)
    /               reduce using rule 55 (expressions -> expression ; .)
    *               reduce using rule 55 (expressions -> expression ; .)
    -               reduce using rule 55 (expressions -> expression ; .)
    +               reduce using rule 55 (expressions -> expression ; .)
    OF              reduce using rule 55 (expressions -> expression ; .)
    LOOP            reduce using rule 55 (expressions -> expression ; .)
    THEN            reduce using rule 55 (expressions -> expression ; .)
    POOL            reduce using rule 55 (expressions -> expression ; .)
    ELSE            reduce using rule 55 (expressions -> expression ; .)
    ,               reduce using rule 55 (expressions -> expression ; .)
    IN              reduce using rule 55 (expressions -> expression ; .)
    FI              reduce using rule 55 (expressions -> expression ; .)


state 98

    (21) expression -> CASE expression OF . casos ; ESAC
    (52) casos -> . casos OBJECTID : TYPEID DARROW expression
    (53) casos -> . OBJECTID : TYPEID DARROW expression
    OBJECTID        shift and go to state 111

    casos                          shift and go to state 110

state 99

    (22) expression -> LET OBJECTID : . TYPEID asignacion , variables IN expressions
    (23) expression -> LET OBJECTID : . TYPEID , variables IN expressions
    (24) expression -> LET OBJECTID : . TYPEID asignacion IN expressions
    (25) expression -> LET OBJECTID : . TYPEID IN expressions
    TYPEID          shift and go to state 112


state 100

    (26) expression -> WHILE expression LOOP . expression POOL
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 113

state 101

    (27) expression -> IF expression THEN . expression ELSE expression FI
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 114

state 102

    (37) expression -> ( expression ) .
    ;               reduce using rule 37 (expression -> ( expression ) .)
    .               reduce using rule 37 (expression -> ( expression ) .)
    @               reduce using rule 37 (expression -> ( expression ) .)
    =               reduce using rule 37 (expression -> ( expression ) .)
    LE              reduce using rule 37 (expression -> ( expression ) .)
    <               reduce using rule 37 (expression -> ( expression ) .)
    /               reduce using rule 37 (expression -> ( expression ) .)
    *               reduce using rule 37 (expression -> ( expression ) .)
    -               reduce using rule 37 (expression -> ( expression ) .)
    +               reduce using rule 37 (expression -> ( expression ) .)
    OF              reduce using rule 37 (expression -> ( expression ) .)
    LOOP            reduce using rule 37 (expression -> ( expression ) .)
    THEN            reduce using rule 37 (expression -> ( expression ) .)
    )               reduce using rule 37 (expression -> ( expression ) .)
    POOL            reduce using rule 37 (expression -> ( expression ) .)
    ELSE            reduce using rule 37 (expression -> ( expression ) .)
    ,               reduce using rule 37 (expression -> ( expression ) .)
    IN              reduce using rule 37 (expression -> ( expression ) .)
    OBJECTID        reduce using rule 37 (expression -> ( expression ) .)
    FI              reduce using rule 37 (expression -> ( expression ) .)


state 103

    (6) caracteristica -> OBJECTID ( formales ) : TYPEID { expressions . } ;
    (54) expressions -> expressions . expression ;
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    }               shift and go to state 115
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 96

state 104

    (8) caracteristica -> OBJECTID ( ) : TYPEID { expressions } . ;
    ;               shift and go to state 116


state 105

    (7) caracteristica -> OBJECTID ( formal ) : TYPEID { expressions . } ;
    (54) expressions -> expressions . expression ;
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    }               shift and go to state 117
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 96

state 106

    (28) expression -> OBJECTID ( expressions ) .
    ;               reduce using rule 28 (expression -> OBJECTID ( expressions ) .)
    .               reduce using rule 28 (expression -> OBJECTID ( expressions ) .)
    @               reduce using rule 28 (expression -> OBJECTID ( expressions ) .)
    =               reduce using rule 28 (expression -> OBJECTID ( expressions ) .)
    LE              reduce using rule 28 (expression -> OBJECTID ( expressions ) .)
    <               reduce using rule 28 (expression -> OBJECTID ( expressions ) .)
    /               reduce using rule 28 (expression -> OBJECTID ( expressions ) .)
    *               reduce using rule 28 (expression -> OBJECTID ( expressions ) .)
    -               reduce using rule 28 (expression -> OBJECTID ( expressions ) .)
    +               reduce using rule 28 (expression -> OBJECTID ( expressions ) .)
    OF              reduce using rule 28 (expression -> OBJECTID ( expressions ) .)
    LOOP            reduce using rule 28 (expression -> OBJECTID ( expressions ) .)
    THEN            reduce using rule 28 (expression -> OBJECTID ( expressions ) .)
    )               reduce using rule 28 (expression -> OBJECTID ( expressions ) .)
    POOL            reduce using rule 28 (expression -> OBJECTID ( expressions ) .)
    ELSE            reduce using rule 28 (expression -> OBJECTID ( expressions ) .)
    ,               reduce using rule 28 (expression -> OBJECTID ( expressions ) .)
    IN              reduce using rule 28 (expression -> OBJECTID ( expressions ) .)
    OBJECTID        reduce using rule 28 (expression -> OBJECTID ( expressions ) .)
    FI              reduce using rule 28 (expression -> OBJECTID ( expressions ) .)


state 107

    (30) expression -> expression . OBJECTID ( . expressions )
    (31) expression -> expression . OBJECTID ( . )
    (54) expressions -> . expressions expression ;
    (55) expressions -> . expression ;
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    )               shift and go to state 119
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 70
    expressions                    shift and go to state 118

state 108

    (32) expression -> expression @ TYPEID . . OBJECTID ( expressions )
    (33) expression -> expression @ TYPEID . . OBJECTID ( )
    OBJECTID        shift and go to state 120


state 109

    (54) expressions -> expressions expression ; .
    }               reduce using rule 54 (expressions -> expressions expression ; .)
    BOOL_CONST      reduce using rule 54 (expressions -> expressions expression ; .)
    STR_CONST       reduce using rule 54 (expressions -> expressions expression ; .)
    INT_CONST       reduce using rule 54 (expressions -> expressions expression ; .)
    {               reduce using rule 54 (expressions -> expressions expression ; .)
    NEW             reduce using rule 54 (expressions -> expressions expression ; .)
    CASE            reduce using rule 54 (expressions -> expressions expression ; .)
    LET             reduce using rule 54 (expressions -> expressions expression ; .)
    WHILE           reduce using rule 54 (expressions -> expressions expression ; .)
    IF              reduce using rule 54 (expressions -> expressions expression ; .)
    OBJECTID        reduce using rule 54 (expressions -> expressions expression ; .)
    ~               reduce using rule 54 (expressions -> expressions expression ; .)
    ISVOID          reduce using rule 54 (expressions -> expressions expression ; .)
    NOT             reduce using rule 54 (expressions -> expressions expression ; .)
    (               reduce using rule 54 (expressions -> expressions expression ; .)
    )               reduce using rule 54 (expressions -> expressions expression ; .)
    ;               reduce using rule 54 (expressions -> expressions expression ; .)
    .               reduce using rule 54 (expressions -> expressions expression ; .)
    @               reduce using rule 54 (expressions -> expressions expression ; .)
    =               reduce using rule 54 (expressions -> expressions expression ; .)
    LE              reduce using rule 54 (expressions -> expressions expression ; .)
    <               reduce using rule 54 (expressions -> expressions expression ; .)
    /               reduce using rule 54 (expressions -> expressions expression ; .)
    *               reduce using rule 54 (expressions -> expressions expression ; .)
    -               reduce using rule 54 (expressions -> expressions expression ; .)
    +               reduce using rule 54 (expressions -> expressions expression ; .)
    OF              reduce using rule 54 (expressions -> expressions expression ; .)
    LOOP            reduce using rule 54 (expressions -> expressions expression ; .)
    THEN            reduce using rule 54 (expressions -> expressions expression ; .)
    POOL            reduce using rule 54 (expressions -> expressions expression ; .)
    ELSE            reduce using rule 54 (expressions -> expressions expression ; .)
    ,               reduce using rule 54 (expressions -> expressions expression ; .)
    IN              reduce using rule 54 (expressions -> expressions expression ; .)
    FI              reduce using rule 54 (expressions -> expressions expression ; .)


state 110

    (21) expression -> CASE expression OF casos . ; ESAC
    (52) casos -> casos . OBJECTID : TYPEID DARROW expression
    ;               shift and go to state 121
    OBJECTID        shift and go to state 122


state 111

    (53) casos -> OBJECTID . : TYPEID DARROW expression
    :               shift and go to state 123


state 112

    (22) expression -> LET OBJECTID : TYPEID . asignacion , variables IN expressions
    (23) expression -> LET OBJECTID : TYPEID . , variables IN expressions
    (24) expression -> LET OBJECTID : TYPEID . asignacion IN expressions
    (25) expression -> LET OBJECTID : TYPEID . IN expressions
    (46) asignacion -> . ASSIGN expression
    ,               shift and go to state 125
    IN              shift and go to state 126
    ASSIGN          shift and go to state 127

    asignacion                     shift and go to state 124

state 113

    (26) expression -> WHILE expression LOOP expression . POOL
    (30) expression -> expression . . OBJECTID ( expressions )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (38) expression -> expression . = expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . < expression
    (41) expression -> expression . / expression
    (42) expression -> expression . * expression
    (43) expression -> expression . - expression
    (44) expression -> expression . + expression
    POOL            shift and go to state 128
    .               shift and go to state 60
    @               shift and go to state 61
    =               shift and go to state 62
    LE              shift and go to state 63
    <               shift and go to state 64
    /               shift and go to state 65
    *               shift and go to state 66
    -               shift and go to state 67
    +               shift and go to state 68


state 114

    (27) expression -> IF expression THEN expression . ELSE expression FI
    (30) expression -> expression . . OBJECTID ( expressions )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (38) expression -> expression . = expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . < expression
    (41) expression -> expression . / expression
    (42) expression -> expression . * expression
    (43) expression -> expression . - expression
    (44) expression -> expression . + expression
    ELSE            shift and go to state 129
    .               shift and go to state 60
    @               shift and go to state 61
    =               shift and go to state 62
    LE              shift and go to state 63
    <               shift and go to state 64
    /               shift and go to state 65
    *               shift and go to state 66
    -               shift and go to state 67
    +               shift and go to state 68


state 115

    (6) caracteristica -> OBJECTID ( formales ) : TYPEID { expressions } . ;
    ;               shift and go to state 130


state 116

    (8) caracteristica -> OBJECTID ( ) : TYPEID { expressions } ; .
    }               reduce using rule 8 (caracteristica -> OBJECTID ( ) : TYPEID { expressions } ; .)
    OBJECTID        reduce using rule 8 (caracteristica -> OBJECTID ( ) : TYPEID { expressions } ; .)


state 117

    (7) caracteristica -> OBJECTID ( formal ) : TYPEID { expressions } . ;
    ;               shift and go to state 131


state 118

    (30) expression -> expression . OBJECTID ( expressions . )
    (54) expressions -> expressions . expression ;
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    )               shift and go to state 132
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 96

state 119

    (31) expression -> expression . OBJECTID ( ) .
    ;               reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    .               reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    @               reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    =               reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    LE              reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    <               reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    /               reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    *               reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    -               reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    +               reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    OF              reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    LOOP            reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    THEN            reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    )               reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    POOL            reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    ELSE            reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    ,               reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    IN              reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    OBJECTID        reduce using rule 31 (expression -> expression . OBJECTID ( ) .)
    FI              reduce using rule 31 (expression -> expression . OBJECTID ( ) .)


state 120

    (32) expression -> expression @ TYPEID . OBJECTID . ( expressions )
    (33) expression -> expression @ TYPEID . OBJECTID . ( )
    (               shift and go to state 133


state 121

    (21) expression -> CASE expression OF casos ; . ESAC
    ESAC            shift and go to state 134


state 122

    (52) casos -> casos OBJECTID . : TYPEID DARROW expression
    :               shift and go to state 135


state 123

    (53) casos -> OBJECTID : . TYPEID DARROW expression
    TYPEID          shift and go to state 136


state 124

    (22) expression -> LET OBJECTID : TYPEID asignacion . , variables IN expressions
    (24) expression -> LET OBJECTID : TYPEID asignacion . IN expressions
    ,               shift and go to state 137
    IN              shift and go to state 138


state 125

    (23) expression -> LET OBJECTID : TYPEID , . variables IN expressions
    (49) variables -> . variable ,
    (50) variables -> . variables OBJECTID : TYPEID asignacion
    (51) variables -> . variables OBJECTID : TYPEID
    (47) variable -> . OBJECTID : TYPEID asignacion
    (48) variable -> . OBJECTID : TYPEID
    OBJECTID        shift and go to state 139

    variables                      shift and go to state 140
    variable                       shift and go to state 141

state 126

    (25) expression -> LET OBJECTID : TYPEID IN . expressions
    (54) expressions -> . expressions expression ;
    (55) expressions -> . expression ;
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expressions                    shift and go to state 142
    expression                     shift and go to state 70

state 127

    (46) asignacion -> ASSIGN . expression
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 143

state 128

    (26) expression -> WHILE expression LOOP expression POOL .
    ;               reduce using rule 26 (expression -> WHILE expression LOOP expression POOL .)
    .               reduce using rule 26 (expression -> WHILE expression LOOP expression POOL .)
    @               reduce using rule 26 (expression -> WHILE expression LOOP expression POOL .)
    =               reduce using rule 26 (expression -> WHILE expression LOOP expression POOL .)
    LE              reduce using rule 26 (expression -> WHILE expression LOOP expression POOL .)
    <               reduce using rule 26 (expression -> WHILE expression LOOP expression POOL .)
    /               reduce using rule 26 (expression -> WHILE expression LOOP expression POOL .)
    *               reduce using rule 26 (expression -> WHILE expression LOOP expression POOL .)
    -               reduce using rule 26 (expression -> WHILE expression LOOP expression POOL .)
    +               reduce using rule 26 (expression -> WHILE expression LOOP expression POOL .)
    OF              reduce using rule 26 (expression -> WHILE expression LOOP expression POOL .)
    LOOP            reduce using rule 26 (expression -> WHILE expression LOOP expression POOL .)
    THEN            reduce using rule 26 (expression -> WHILE expression LOOP expression POOL .)
    )               reduce using rule 26 (expression -> WHILE expression LOOP expression POOL .)
    POOL            reduce using rule 26 (expression -> WHILE expression LOOP expression POOL .)
    ELSE            reduce using rule 26 (expression -> WHILE expression LOOP expression POOL .)
    ,               reduce using rule 26 (expression -> WHILE expression LOOP expression POOL .)
    IN              reduce using rule 26 (expression -> WHILE expression LOOP expression POOL .)
    OBJECTID        reduce using rule 26 (expression -> WHILE expression LOOP expression POOL .)
    FI              reduce using rule 26 (expression -> WHILE expression LOOP expression POOL .)


state 129

    (27) expression -> IF expression THEN expression ELSE . expression FI
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 144

state 130

    (6) caracteristica -> OBJECTID ( formales ) : TYPEID { expressions } ; .
    }               reduce using rule 6 (caracteristica -> OBJECTID ( formales ) : TYPEID { expressions } ; .)
    OBJECTID        reduce using rule 6 (caracteristica -> OBJECTID ( formales ) : TYPEID { expressions } ; .)


state 131

    (7) caracteristica -> OBJECTID ( formal ) : TYPEID { expressions } ; .
    }               reduce using rule 7 (caracteristica -> OBJECTID ( formal ) : TYPEID { expressions } ; .)
    OBJECTID        reduce using rule 7 (caracteristica -> OBJECTID ( formal ) : TYPEID { expressions } ; .)


state 132

    (30) expression -> expression . OBJECTID ( expressions ) .
    ;               reduce using rule 30 (expression -> expression . OBJECTID ( expressions ) .)
    .               reduce using rule 30 (expression -> expression . OBJECTID ( expressions ) .)
    @               reduce using rule 30 (expression -> expression . OBJECTID ( expressions ) .)
    =               reduce using rule 30 (expression -> expression . OBJECTID ( expressions ) .)
    LE              reduce using rule 30 (expression -> expression . OBJECTID ( expressions ) .)
    <               reduce using rule 30 (expression -> expression . OBJECTID ( expressions ) .)
    /               reduce using rule 30 (expression -> expression . OBJECTID ( expressions ) .)
    *               reduce using rule 30 (expression -> expression . OBJECTID ( expressions ) .)
    -               reduce using rule 30 (expression -> expression . OBJECTID ( expressions ) .)
    +               reduce using rule 30 (expression -> expression . OBJECTID ( expressions ) .)
    OF              reduce using rule 30 (expression -> expression . OBJECTID ( expressions ) .)
    LOOP            reduce using rule 30 (expression -> expression . OBJECTID ( expressions ) .)
    THEN            reduce using rule 30 (expression -> expression . OBJECTID ( expressions ) .)
    )               reduce using rule 30 (expression -> expression . OBJECTID ( expressions ) .)
    POOL            reduce using rule 30 (expression -> expression . OBJECTID ( expressions ) .)
    ELSE            reduce using rule 30 (expression -> expression . OBJECTID ( expressions ) .)
    ,               reduce using rule 30 (expression -> expression . OBJECTID ( expressions ) .)
    IN              reduce using rule 30 (expression -> expression . OBJECTID ( expressions ) .)
    OBJECTID        reduce using rule 30 (expression -> expression . OBJECTID ( expressions ) .)
    FI              reduce using rule 30 (expression -> expression . OBJECTID ( expressions ) .)


state 133

    (32) expression -> expression @ TYPEID . OBJECTID ( . expressions )
    (33) expression -> expression @ TYPEID . OBJECTID ( . )
    (54) expressions -> . expressions expression ;
    (55) expressions -> . expression ;
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    )               shift and go to state 146
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 70
    expressions                    shift and go to state 145

state 134

    (21) expression -> CASE expression OF casos ; ESAC .
    ;               reduce using rule 21 (expression -> CASE expression OF casos ; ESAC .)
    .               reduce using rule 21 (expression -> CASE expression OF casos ; ESAC .)
    @               reduce using rule 21 (expression -> CASE expression OF casos ; ESAC .)
    =               reduce using rule 21 (expression -> CASE expression OF casos ; ESAC .)
    LE              reduce using rule 21 (expression -> CASE expression OF casos ; ESAC .)
    <               reduce using rule 21 (expression -> CASE expression OF casos ; ESAC .)
    /               reduce using rule 21 (expression -> CASE expression OF casos ; ESAC .)
    *               reduce using rule 21 (expression -> CASE expression OF casos ; ESAC .)
    -               reduce using rule 21 (expression -> CASE expression OF casos ; ESAC .)
    +               reduce using rule 21 (expression -> CASE expression OF casos ; ESAC .)
    OF              reduce using rule 21 (expression -> CASE expression OF casos ; ESAC .)
    LOOP            reduce using rule 21 (expression -> CASE expression OF casos ; ESAC .)
    THEN            reduce using rule 21 (expression -> CASE expression OF casos ; ESAC .)
    )               reduce using rule 21 (expression -> CASE expression OF casos ; ESAC .)
    POOL            reduce using rule 21 (expression -> CASE expression OF casos ; ESAC .)
    ELSE            reduce using rule 21 (expression -> CASE expression OF casos ; ESAC .)
    ,               reduce using rule 21 (expression -> CASE expression OF casos ; ESAC .)
    IN              reduce using rule 21 (expression -> CASE expression OF casos ; ESAC .)
    OBJECTID        reduce using rule 21 (expression -> CASE expression OF casos ; ESAC .)
    FI              reduce using rule 21 (expression -> CASE expression OF casos ; ESAC .)


state 135

    (52) casos -> casos OBJECTID : . TYPEID DARROW expression
    TYPEID          shift and go to state 147


state 136

    (53) casos -> OBJECTID : TYPEID . DARROW expression
    DARROW          shift and go to state 148


state 137

    (22) expression -> LET OBJECTID : TYPEID asignacion , . variables IN expressions
    (49) variables -> . variable ,
    (50) variables -> . variables OBJECTID : TYPEID asignacion
    (51) variables -> . variables OBJECTID : TYPEID
    (47) variable -> . OBJECTID : TYPEID asignacion
    (48) variable -> . OBJECTID : TYPEID
    OBJECTID        shift and go to state 139

    variables                      shift and go to state 149
    variable                       shift and go to state 141

state 138

    (24) expression -> LET OBJECTID : TYPEID asignacion IN . expressions
    (54) expressions -> . expressions expression ;
    (55) expressions -> . expression ;
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expressions                    shift and go to state 150
    expression                     shift and go to state 70

state 139

    (47) variable -> OBJECTID . : TYPEID asignacion
    (48) variable -> OBJECTID . : TYPEID
    :               shift and go to state 151


state 140

    (23) expression -> LET OBJECTID : TYPEID , variables . IN expressions
    (50) variables -> variables . OBJECTID : TYPEID asignacion
    (51) variables -> variables . OBJECTID : TYPEID
    IN              shift and go to state 153
    OBJECTID        shift and go to state 152


state 141

    (49) variables -> variable . ,
    ,               shift and go to state 154


state 142

    (25) expression -> LET OBJECTID : TYPEID IN expressions .
    (54) expressions -> expressions . expression ;
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
  ! shift/reduce conflict for OBJECTID resolved as shift
    ;               reduce using rule 25 (expression -> LET OBJECTID : TYPEID IN expressions .)
    .               reduce using rule 25 (expression -> LET OBJECTID : TYPEID IN expressions .)
    @               reduce using rule 25 (expression -> LET OBJECTID : TYPEID IN expressions .)
    =               reduce using rule 25 (expression -> LET OBJECTID : TYPEID IN expressions .)
    LE              reduce using rule 25 (expression -> LET OBJECTID : TYPEID IN expressions .)
    <               reduce using rule 25 (expression -> LET OBJECTID : TYPEID IN expressions .)
    /               reduce using rule 25 (expression -> LET OBJECTID : TYPEID IN expressions .)
    *               reduce using rule 25 (expression -> LET OBJECTID : TYPEID IN expressions .)
    -               reduce using rule 25 (expression -> LET OBJECTID : TYPEID IN expressions .)
    +               reduce using rule 25 (expression -> LET OBJECTID : TYPEID IN expressions .)
    OF              reduce using rule 25 (expression -> LET OBJECTID : TYPEID IN expressions .)
    LOOP            reduce using rule 25 (expression -> LET OBJECTID : TYPEID IN expressions .)
    THEN            reduce using rule 25 (expression -> LET OBJECTID : TYPEID IN expressions .)
    )               reduce using rule 25 (expression -> LET OBJECTID : TYPEID IN expressions .)
    POOL            reduce using rule 25 (expression -> LET OBJECTID : TYPEID IN expressions .)
    ELSE            reduce using rule 25 (expression -> LET OBJECTID : TYPEID IN expressions .)
    ,               reduce using rule 25 (expression -> LET OBJECTID : TYPEID IN expressions .)
    IN              reduce using rule 25 (expression -> LET OBJECTID : TYPEID IN expressions .)
    FI              reduce using rule 25 (expression -> LET OBJECTID : TYPEID IN expressions .)
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 96

state 143

    (46) asignacion -> ASSIGN expression .
    (30) expression -> expression . . OBJECTID ( expressions )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (38) expression -> expression . = expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . < expression
    (41) expression -> expression . / expression
    (42) expression -> expression . * expression
    (43) expression -> expression . - expression
    (44) expression -> expression . + expression
    ,               reduce using rule 46 (asignacion -> ASSIGN expression .)
    IN              reduce using rule 46 (asignacion -> ASSIGN expression .)
    OBJECTID        reduce using rule 46 (asignacion -> ASSIGN expression .)
    .               shift and go to state 60
    @               shift and go to state 61
    =               shift and go to state 62
    LE              shift and go to state 63
    <               shift and go to state 64
    /               shift and go to state 65
    *               shift and go to state 66
    -               shift and go to state 67
    +               shift and go to state 68


state 144

    (27) expression -> IF expression THEN expression ELSE expression . FI
    (30) expression -> expression . . OBJECTID ( expressions )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (38) expression -> expression . = expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . < expression
    (41) expression -> expression . / expression
    (42) expression -> expression . * expression
    (43) expression -> expression . - expression
    (44) expression -> expression . + expression
    FI              shift and go to state 155
    .               shift and go to state 60
    @               shift and go to state 61
    =               shift and go to state 62
    LE              shift and go to state 63
    <               shift and go to state 64
    /               shift and go to state 65
    *               shift and go to state 66
    -               shift and go to state 67
    +               shift and go to state 68


state 145

    (32) expression -> expression @ TYPEID . OBJECTID ( expressions . )
    (54) expressions -> expressions . expression ;
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    )               shift and go to state 156
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 96

state 146

    (33) expression -> expression @ TYPEID . OBJECTID ( ) .
    ;               reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    .               reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    @               reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    =               reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    LE              reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    <               reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    /               reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    *               reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    -               reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    +               reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    OF              reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    LOOP            reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    THEN            reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    )               reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    POOL            reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    ELSE            reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    ,               reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    IN              reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    OBJECTID        reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    FI              reduce using rule 33 (expression -> expression @ TYPEID . OBJECTID ( ) .)


state 147

    (52) casos -> casos OBJECTID : TYPEID . DARROW expression
    DARROW          shift and go to state 157


state 148

    (53) casos -> OBJECTID : TYPEID DARROW . expression
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 158

state 149

    (22) expression -> LET OBJECTID : TYPEID asignacion , variables . IN expressions
    (50) variables -> variables . OBJECTID : TYPEID asignacion
    (51) variables -> variables . OBJECTID : TYPEID
    IN              shift and go to state 159
    OBJECTID        shift and go to state 152


state 150

    (24) expression -> LET OBJECTID : TYPEID asignacion IN expressions .
    (54) expressions -> expressions . expression ;
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
  ! shift/reduce conflict for OBJECTID resolved as shift
    ;               reduce using rule 24 (expression -> LET OBJECTID : TYPEID asignacion IN expressions .)
    .               reduce using rule 24 (expression -> LET OBJECTID : TYPEID asignacion IN expressions .)
    @               reduce using rule 24 (expression -> LET OBJECTID : TYPEID asignacion IN expressions .)
    =               reduce using rule 24 (expression -> LET OBJECTID : TYPEID asignacion IN expressions .)
    LE              reduce using rule 24 (expression -> LET OBJECTID : TYPEID asignacion IN expressions .)
    <               reduce using rule 24 (expression -> LET OBJECTID : TYPEID asignacion IN expressions .)
    /               reduce using rule 24 (expression -> LET OBJECTID : TYPEID asignacion IN expressions .)
    *               reduce using rule 24 (expression -> LET OBJECTID : TYPEID asignacion IN expressions .)
    -               reduce using rule 24 (expression -> LET OBJECTID : TYPEID asignacion IN expressions .)
    +               reduce using rule 24 (expression -> LET OBJECTID : TYPEID asignacion IN expressions .)
    OF              reduce using rule 24 (expression -> LET OBJECTID : TYPEID asignacion IN expressions .)
    LOOP            reduce using rule 24 (expression -> LET OBJECTID : TYPEID asignacion IN expressions .)
    THEN            reduce using rule 24 (expression -> LET OBJECTID : TYPEID asignacion IN expressions .)
    )               reduce using rule 24 (expression -> LET OBJECTID : TYPEID asignacion IN expressions .)
    POOL            reduce using rule 24 (expression -> LET OBJECTID : TYPEID asignacion IN expressions .)
    ELSE            reduce using rule 24 (expression -> LET OBJECTID : TYPEID asignacion IN expressions .)
    ,               reduce using rule 24 (expression -> LET OBJECTID : TYPEID asignacion IN expressions .)
    IN              reduce using rule 24 (expression -> LET OBJECTID : TYPEID asignacion IN expressions .)
    FI              reduce using rule 24 (expression -> LET OBJECTID : TYPEID asignacion IN expressions .)
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 96

state 151

    (47) variable -> OBJECTID : . TYPEID asignacion
    (48) variable -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 160


state 152

    (50) variables -> variables OBJECTID . : TYPEID asignacion
    (51) variables -> variables OBJECTID . : TYPEID
    :               shift and go to state 161


state 153

    (23) expression -> LET OBJECTID : TYPEID , variables IN . expressions
    (54) expressions -> . expressions expression ;
    (55) expressions -> . expression ;
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expressions                    shift and go to state 162
    expression                     shift and go to state 70

state 154

    (49) variables -> variable , .
    IN              reduce using rule 49 (variables -> variable , .)
    OBJECTID        reduce using rule 49 (variables -> variable , .)


state 155

    (27) expression -> IF expression THEN expression ELSE expression FI .
    ;               reduce using rule 27 (expression -> IF expression THEN expression ELSE expression FI .)
    .               reduce using rule 27 (expression -> IF expression THEN expression ELSE expression FI .)
    @               reduce using rule 27 (expression -> IF expression THEN expression ELSE expression FI .)
    =               reduce using rule 27 (expression -> IF expression THEN expression ELSE expression FI .)
    LE              reduce using rule 27 (expression -> IF expression THEN expression ELSE expression FI .)
    <               reduce using rule 27 (expression -> IF expression THEN expression ELSE expression FI .)
    /               reduce using rule 27 (expression -> IF expression THEN expression ELSE expression FI .)
    *               reduce using rule 27 (expression -> IF expression THEN expression ELSE expression FI .)
    -               reduce using rule 27 (expression -> IF expression THEN expression ELSE expression FI .)
    +               reduce using rule 27 (expression -> IF expression THEN expression ELSE expression FI .)
    OF              reduce using rule 27 (expression -> IF expression THEN expression ELSE expression FI .)
    LOOP            reduce using rule 27 (expression -> IF expression THEN expression ELSE expression FI .)
    THEN            reduce using rule 27 (expression -> IF expression THEN expression ELSE expression FI .)
    )               reduce using rule 27 (expression -> IF expression THEN expression ELSE expression FI .)
    POOL            reduce using rule 27 (expression -> IF expression THEN expression ELSE expression FI .)
    ELSE            reduce using rule 27 (expression -> IF expression THEN expression ELSE expression FI .)
    ,               reduce using rule 27 (expression -> IF expression THEN expression ELSE expression FI .)
    IN              reduce using rule 27 (expression -> IF expression THEN expression ELSE expression FI .)
    OBJECTID        reduce using rule 27 (expression -> IF expression THEN expression ELSE expression FI .)
    FI              reduce using rule 27 (expression -> IF expression THEN expression ELSE expression FI .)


state 156

    (32) expression -> expression @ TYPEID . OBJECTID ( expressions ) .
    ;               reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    .               reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    @               reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    =               reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    LE              reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    <               reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    /               reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    *               reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    -               reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    +               reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    OF              reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    LOOP            reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    THEN            reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    )               reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    POOL            reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    ELSE            reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    ,               reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    IN              reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    OBJECTID        reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    FI              reduce using rule 32 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)


state 157

    (52) casos -> casos OBJECTID : TYPEID DARROW . expression
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 163

state 158

    (53) casos -> OBJECTID : TYPEID DARROW expression .
    (30) expression -> expression . . OBJECTID ( expressions )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (38) expression -> expression . = expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . < expression
    (41) expression -> expression . / expression
    (42) expression -> expression . * expression
    (43) expression -> expression . - expression
    (44) expression -> expression . + expression
    ;               reduce using rule 53 (casos -> OBJECTID : TYPEID DARROW expression .)
    OBJECTID        reduce using rule 53 (casos -> OBJECTID : TYPEID DARROW expression .)
    .               shift and go to state 60
    @               shift and go to state 61
    =               shift and go to state 62
    LE              shift and go to state 63
    <               shift and go to state 64
    /               shift and go to state 65
    *               shift and go to state 66
    -               shift and go to state 67
    +               shift and go to state 68


state 159

    (22) expression -> LET OBJECTID : TYPEID asignacion , variables IN . expressions
    (54) expressions -> . expressions expression ;
    (55) expressions -> . expression ;
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expressions                    shift and go to state 164
    expression                     shift and go to state 70

state 160

    (47) variable -> OBJECTID : TYPEID . asignacion
    (48) variable -> OBJECTID : TYPEID .
    (46) asignacion -> . ASSIGN expression
    ,               reduce using rule 48 (variable -> OBJECTID : TYPEID .)
    ASSIGN          shift and go to state 127

    asignacion                     shift and go to state 165

state 161

    (50) variables -> variables OBJECTID : . TYPEID asignacion
    (51) variables -> variables OBJECTID : . TYPEID
    TYPEID          shift and go to state 166


state 162

    (23) expression -> LET OBJECTID : TYPEID , variables IN expressions .
    (54) expressions -> expressions . expression ;
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
  ! shift/reduce conflict for OBJECTID resolved as shift
    ;               reduce using rule 23 (expression -> LET OBJECTID : TYPEID , variables IN expressions .)
    .               reduce using rule 23 (expression -> LET OBJECTID : TYPEID , variables IN expressions .)
    @               reduce using rule 23 (expression -> LET OBJECTID : TYPEID , variables IN expressions .)
    =               reduce using rule 23 (expression -> LET OBJECTID : TYPEID , variables IN expressions .)
    LE              reduce using rule 23 (expression -> LET OBJECTID : TYPEID , variables IN expressions .)
    <               reduce using rule 23 (expression -> LET OBJECTID : TYPEID , variables IN expressions .)
    /               reduce using rule 23 (expression -> LET OBJECTID : TYPEID , variables IN expressions .)
    *               reduce using rule 23 (expression -> LET OBJECTID : TYPEID , variables IN expressions .)
    -               reduce using rule 23 (expression -> LET OBJECTID : TYPEID , variables IN expressions .)
    +               reduce using rule 23 (expression -> LET OBJECTID : TYPEID , variables IN expressions .)
    OF              reduce using rule 23 (expression -> LET OBJECTID : TYPEID , variables IN expressions .)
    LOOP            reduce using rule 23 (expression -> LET OBJECTID : TYPEID , variables IN expressions .)
    THEN            reduce using rule 23 (expression -> LET OBJECTID : TYPEID , variables IN expressions .)
    )               reduce using rule 23 (expression -> LET OBJECTID : TYPEID , variables IN expressions .)
    POOL            reduce using rule 23 (expression -> LET OBJECTID : TYPEID , variables IN expressions .)
    ELSE            reduce using rule 23 (expression -> LET OBJECTID : TYPEID , variables IN expressions .)
    ,               reduce using rule 23 (expression -> LET OBJECTID : TYPEID , variables IN expressions .)
    IN              reduce using rule 23 (expression -> LET OBJECTID : TYPEID , variables IN expressions .)
    FI              reduce using rule 23 (expression -> LET OBJECTID : TYPEID , variables IN expressions .)
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 96

state 163

    (52) casos -> casos OBJECTID : TYPEID DARROW expression .
    (30) expression -> expression . . OBJECTID ( expressions )
    (31) expression -> expression . . OBJECTID ( )
    (32) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (33) expression -> expression . @ TYPEID . OBJECTID ( )
    (38) expression -> expression . = expression
    (39) expression -> expression . LE expression
    (40) expression -> expression . < expression
    (41) expression -> expression . / expression
    (42) expression -> expression . * expression
    (43) expression -> expression . - expression
    (44) expression -> expression . + expression
    ;               reduce using rule 52 (casos -> casos OBJECTID : TYPEID DARROW expression .)
    OBJECTID        reduce using rule 52 (casos -> casos OBJECTID : TYPEID DARROW expression .)
    .               shift and go to state 60
    @               shift and go to state 61
    =               shift and go to state 62
    LE              shift and go to state 63
    <               shift and go to state 64
    /               shift and go to state 65
    *               shift and go to state 66
    -               shift and go to state 67
    +               shift and go to state 68


state 164

    (22) expression -> LET OBJECTID : TYPEID asignacion , variables IN expressions .
    (54) expressions -> expressions . expression ;
    (16) expression -> . BOOL_CONST
    (17) expression -> . STR_CONST
    (18) expression -> . INT_CONST
    (19) expression -> . { expressions }
    (20) expression -> . NEW TYPEID
    (21) expression -> . CASE expression OF casos ; ESAC
    (22) expression -> . LET OBJECTID : TYPEID asignacion , variables IN expressions
    (23) expression -> . LET OBJECTID : TYPEID , variables IN expressions
    (24) expression -> . LET OBJECTID : TYPEID asignacion IN expressions
    (25) expression -> . LET OBJECTID : TYPEID IN expressions
    (26) expression -> . WHILE expression LOOP expression POOL
    (27) expression -> . IF expression THEN expression ELSE expression FI
    (28) expression -> . OBJECTID ( expressions )
    (29) expression -> . OBJECTID ( )
    (30) expression -> . expression . OBJECTID ( expressions )
    (31) expression -> . expression . OBJECTID ( )
    (32) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (33) expression -> . expression @ TYPEID . OBJECTID ( )
    (34) expression -> . ~ expression
    (35) expression -> . ISVOID expression
    (36) expression -> . NOT expression
    (37) expression -> . ( expression )
    (38) expression -> . expression = expression
    (39) expression -> . expression LE expression
    (40) expression -> . expression < expression
    (41) expression -> . expression / expression
    (42) expression -> . expression * expression
    (43) expression -> . expression - expression
    (44) expression -> . expression + expression
    (45) expression -> . OBJECTID ASSIGN expression
  ! shift/reduce conflict for OBJECTID resolved as shift
    ;               reduce using rule 22 (expression -> LET OBJECTID : TYPEID asignacion , variables IN expressions .)
    .               reduce using rule 22 (expression -> LET OBJECTID : TYPEID asignacion , variables IN expressions .)
    @               reduce using rule 22 (expression -> LET OBJECTID : TYPEID asignacion , variables IN expressions .)
    =               reduce using rule 22 (expression -> LET OBJECTID : TYPEID asignacion , variables IN expressions .)
    LE              reduce using rule 22 (expression -> LET OBJECTID : TYPEID asignacion , variables IN expressions .)
    <               reduce using rule 22 (expression -> LET OBJECTID : TYPEID asignacion , variables IN expressions .)
    /               reduce using rule 22 (expression -> LET OBJECTID : TYPEID asignacion , variables IN expressions .)
    *               reduce using rule 22 (expression -> LET OBJECTID : TYPEID asignacion , variables IN expressions .)
    -               reduce using rule 22 (expression -> LET OBJECTID : TYPEID asignacion , variables IN expressions .)
    +               reduce using rule 22 (expression -> LET OBJECTID : TYPEID asignacion , variables IN expressions .)
    OF              reduce using rule 22 (expression -> LET OBJECTID : TYPEID asignacion , variables IN expressions .)
    LOOP            reduce using rule 22 (expression -> LET OBJECTID : TYPEID asignacion , variables IN expressions .)
    THEN            reduce using rule 22 (expression -> LET OBJECTID : TYPEID asignacion , variables IN expressions .)
    )               reduce using rule 22 (expression -> LET OBJECTID : TYPEID asignacion , variables IN expressions .)
    POOL            reduce using rule 22 (expression -> LET OBJECTID : TYPEID asignacion , variables IN expressions .)
    ELSE            reduce using rule 22 (expression -> LET OBJECTID : TYPEID asignacion , variables IN expressions .)
    ,               reduce using rule 22 (expression -> LET OBJECTID : TYPEID asignacion , variables IN expressions .)
    IN              reduce using rule 22 (expression -> LET OBJECTID : TYPEID asignacion , variables IN expressions .)
    FI              reduce using rule 22 (expression -> LET OBJECTID : TYPEID asignacion , variables IN expressions .)
    BOOL_CONST      shift and go to state 41
    STR_CONST       shift and go to state 42
    INT_CONST       shift and go to state 43
    {               shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 48
    IF              shift and go to state 49
    OBJECTID        shift and go to state 39
    ~               shift and go to state 51
    ISVOID          shift and go to state 52
    NOT             shift and go to state 53
    (               shift and go to state 50

    expression                     shift and go to state 96

state 165

    (47) variable -> OBJECTID : TYPEID asignacion .
    ,               reduce using rule 47 (variable -> OBJECTID : TYPEID asignacion .)


state 166

    (50) variables -> variables OBJECTID : TYPEID . asignacion
    (51) variables -> variables OBJECTID : TYPEID .
    (46) asignacion -> . ASSIGN expression
    IN              reduce using rule 51 (variables -> variables OBJECTID : TYPEID .)
    OBJECTID        reduce using rule 51 (variables -> variables OBJECTID : TYPEID .)
    ASSIGN          shift and go to state 127

    asignacion                     shift and go to state 167

state 167

    (50) variables -> variables OBJECTID : TYPEID asignacion .
    IN              reduce using rule 50 (variables -> variables OBJECTID : TYPEID asignacion .)
    OBJECTID        reduce using rule 50 (variables -> variables OBJECTID : TYPEID asignacion .)


Conflicts:

shift/reduce conflict for ) in state 23 resolved as shift
shift/reduce conflict for OBJECTID in state 142 resolved as shift
shift/reduce conflict for OBJECTID in state 150 resolved as shift
shift/reduce conflict for OBJECTID in state 162 resolved as shift
shift/reduce conflict for OBJECTID in state 164 resolved as shift